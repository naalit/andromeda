{% if flag?(:darwin) %}
  @[Link(framework: "OpenGL")]
{% else %}
  @[Link("GL")]
{% end %}
lib LibGL
  E_CURRENT_BIT                                                           =         0x00000001_u32
  E_POINT_BIT                                                             =         0x00000002_u32
  E_LINE_BIT                                                              =         0x00000004_u32
  E_POLYGON_BIT                                                           =         0x00000008_u32
  E_POLYGON_STIPPLE_BIT                                                   =         0x00000010_u32
  E_PIXEL_MODE_BIT                                                        =         0x00000020_u32
  E_LIGHTING_BIT                                                          =         0x00000040_u32
  E_FOG_BIT                                                               =         0x00000080_u32
  E_DEPTH_BUFFER_BIT                                                      =         0x00000100_u32
  E_ACCUM_BUFFER_BIT                                                      =         0x00000200_u32
  E_STENCIL_BUFFER_BIT                                                    =         0x00000400_u32
  E_VIEWPORT_BIT                                                          =         0x00000800_u32
  E_TRANSFORM_BIT                                                         =         0x00001000_u32
  E_ENABLE_BIT                                                            =         0x00002000_u32
  E_COLOR_BUFFER_BIT                                                      =         0x00004000_u32
  E_HINT_BIT                                                              =         0x00008000_u32
  E_EVAL_BIT                                                              =         0x00010000_u32
  E_LIST_BIT                                                              =         0x00020000_u32
  E_TEXTURE_BIT                                                           =         0x00040000_u32
  E_SCISSOR_BIT                                                           =         0x00080000_u32
  E_MULTISAMPLE_BIT                                                       =         0x20000000_u32
  E_MULTISAMPLE_BIT_ARB                                                   =         0x20000000_u32
  E_MULTISAMPLE_BIT_EXT                                                   =         0x20000000_u32
  E_MULTISAMPLE_BIT_3DFX                                                  =         0x20000000_u32
  E_ALL_ATTRIB_BITS                                                       =         0xFFFFFFFF_u32
  E_COVERAGE_BUFFER_BIT_NV                                                =         0x00008000_u32
  E_CLIENT_PIXEL_STORE_BIT                                                =         0x00000001_u32
  E_CLIENT_VERTEX_ARRAY_BIT                                               =         0x00000002_u32
  E_CLIENT_ALL_ATTRIB_BITS                                                =         0xFFFFFFFF_u32
  E_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT                                   =         0x00000001_u32
  E_CONTEXT_FLAG_DEBUG_BIT                                                =         0x00000002_u32
  E_CONTEXT_FLAG_DEBUG_BIT_KHR                                            =         0x00000002_u32
  E_CONTEXT_FLAG_ROBUST_ACCESS_BIT                                        =         0x00000004_u32
  E_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB                                    =         0x00000004_u32
  E_CONTEXT_FLAG_NO_ERROR_BIT_KHR                                         =         0x00000008_u32
  E_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT                                =         0x00000010_u32
  E_CONTEXT_CORE_PROFILE_BIT                                              =         0x00000001_u32
  E_CONTEXT_COMPATIBILITY_PROFILE_BIT                                     =         0x00000002_u32
  E_MAP_READ_BIT                                                          =             0x0001_u32
  E_MAP_READ_BIT_EXT                                                      =             0x0001_u32
  E_MAP_WRITE_BIT                                                         =             0x0002_u32
  E_MAP_WRITE_BIT_EXT                                                     =             0x0002_u32
  E_MAP_INVALIDATE_RANGE_BIT                                              =             0x0004_u32
  E_MAP_INVALIDATE_RANGE_BIT_EXT                                          =             0x0004_u32
  E_MAP_INVALIDATE_BUFFER_BIT                                             =             0x0008_u32
  E_MAP_INVALIDATE_BUFFER_BIT_EXT                                         =             0x0008_u32
  E_MAP_FLUSH_EXPLICIT_BIT                                                =             0x0010_u32
  E_MAP_FLUSH_EXPLICIT_BIT_EXT                                            =             0x0010_u32
  E_MAP_UNSYNCHRONIZED_BIT                                                =             0x0020_u32
  E_MAP_UNSYNCHRONIZED_BIT_EXT                                            =             0x0020_u32
  E_MAP_PERSISTENT_BIT                                                    =             0x0040_u32
  E_MAP_PERSISTENT_BIT_EXT                                                =             0x0040_u32
  E_MAP_COHERENT_BIT                                                      =             0x0080_u32
  E_MAP_COHERENT_BIT_EXT                                                  =             0x0080_u32
  E_DYNAMIC_STORAGE_BIT                                                   =             0x0100_u32
  E_DYNAMIC_STORAGE_BIT_EXT                                               =             0x0100_u32
  E_CLIENT_STORAGE_BIT                                                    =             0x0200_u32
  E_CLIENT_STORAGE_BIT_EXT                                                =             0x0200_u32
  E_SPARSE_STORAGE_BIT_ARB                                                =             0x0400_u32
  E_VERTEX_ATTRIB_ARRAY_BARRIER_BIT                                       =         0x00000001_u32
  E_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT                                   =         0x00000001_u32
  E_ELEMENT_ARRAY_BARRIER_BIT                                             =         0x00000002_u32
  E_ELEMENT_ARRAY_BARRIER_BIT_EXT                                         =         0x00000002_u32
  E_UNIFORM_BARRIER_BIT                                                   =         0x00000004_u32
  E_UNIFORM_BARRIER_BIT_EXT                                               =         0x00000004_u32
  E_TEXTURE_FETCH_BARRIER_BIT                                             =         0x00000008_u32
  E_TEXTURE_FETCH_BARRIER_BIT_EXT                                         =         0x00000008_u32
  E_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV                                   =         0x00000010_u32
  E_SHADER_IMAGE_ACCESS_BARRIER_BIT                                       =         0x00000020_u32
  E_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT                                   =         0x00000020_u32
  E_COMMAND_BARRIER_BIT                                                   =         0x00000040_u32
  E_COMMAND_BARRIER_BIT_EXT                                               =         0x00000040_u32
  E_PIXEL_BUFFER_BARRIER_BIT                                              =         0x00000080_u32
  E_PIXEL_BUFFER_BARRIER_BIT_EXT                                          =         0x00000080_u32
  E_TEXTURE_UPDATE_BARRIER_BIT                                            =         0x00000100_u32
  E_TEXTURE_UPDATE_BARRIER_BIT_EXT                                        =         0x00000100_u32
  E_BUFFER_UPDATE_BARRIER_BIT                                             =         0x00000200_u32
  E_BUFFER_UPDATE_BARRIER_BIT_EXT                                         =         0x00000200_u32
  E_FRAMEBUFFER_BARRIER_BIT                                               =         0x00000400_u32
  E_FRAMEBUFFER_BARRIER_BIT_EXT                                           =         0x00000400_u32
  E_TRANSFORM_FEEDBACK_BARRIER_BIT                                        =         0x00000800_u32
  E_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT                                    =         0x00000800_u32
  E_ATOMIC_COUNTER_BARRIER_BIT                                            =         0x00001000_u32
  E_ATOMIC_COUNTER_BARRIER_BIT_EXT                                        =         0x00001000_u32
  E_SHADER_STORAGE_BARRIER_BIT                                            =         0x00002000_u32
  E_CLIENT_MAPPED_BUFFER_BARRIER_BIT                                      =         0x00004000_u32
  E_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT                                  =         0x00004000_u32
  E_QUERY_BUFFER_BARRIER_BIT                                              =         0x00008000_u32
  E_ALL_BARRIER_BITS                                                      =         0xFFFFFFFF_u32
  E_ALL_BARRIER_BITS_EXT                                                  =         0xFFFFFFFF_u32
  E_QUERY_DEPTH_PASS_EVENT_BIT_AMD                                        =         0x00000001_u32
  E_QUERY_DEPTH_FAIL_EVENT_BIT_AMD                                        =         0x00000002_u32
  E_QUERY_STENCIL_FAIL_EVENT_BIT_AMD                                      =         0x00000004_u32
  E_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD                                 =         0x00000008_u32
  E_QUERY_ALL_EVENT_BITS_AMD                                              =         0xFFFFFFFF_u32
  E_SYNC_FLUSH_COMMANDS_BIT                                               =         0x00000001_u32
  E_SYNC_FLUSH_COMMANDS_BIT_APPLE                                         =         0x00000001_u32
  E_VERTEX_SHADER_BIT                                                     =         0x00000001_u32
  E_VERTEX_SHADER_BIT_EXT                                                 =         0x00000001_u32
  E_FRAGMENT_SHADER_BIT                                                   =         0x00000002_u32
  E_FRAGMENT_SHADER_BIT_EXT                                               =         0x00000002_u32
  E_GEOMETRY_SHADER_BIT                                                   =         0x00000004_u32
  E_GEOMETRY_SHADER_BIT_EXT                                               =         0x00000004_u32
  E_GEOMETRY_SHADER_BIT_OES                                               =         0x00000004_u32
  E_TESS_CONTROL_SHADER_BIT                                               =         0x00000008_u32
  E_TESS_CONTROL_SHADER_BIT_EXT                                           =         0x00000008_u32
  E_TESS_CONTROL_SHADER_BIT_OES                                           =         0x00000008_u32
  E_TESS_EVALUATION_SHADER_BIT                                            =         0x00000010_u32
  E_TESS_EVALUATION_SHADER_BIT_EXT                                        =         0x00000010_u32
  E_TESS_EVALUATION_SHADER_BIT_OES                                        =         0x00000010_u32
  E_COMPUTE_SHADER_BIT                                                    =         0x00000020_u32
  E_ALL_SHADER_BITS                                                       =         0xFFFFFFFF_u32
  E_ALL_SHADER_BITS_EXT                                                   =         0xFFFFFFFF_u32
  E_TEXTURE_STORAGE_SPARSE_BIT_AMD                                        =         0x00000001_u32
  E_RED_BIT_ATI                                                           =         0x00000001_u32
  E_GREEN_BIT_ATI                                                         =         0x00000002_u32
  E_BLUE_BIT_ATI                                                          =         0x00000004_u32
  E_2X_BIT_ATI                                                            =         0x00000001_u32
  E_4X_BIT_ATI                                                            =         0x00000002_u32
  E_8X_BIT_ATI                                                            =         0x00000004_u32
  E_HALF_BIT_ATI                                                          =         0x00000008_u32
  E_QUARTER_BIT_ATI                                                       =         0x00000010_u32
  E_EIGHTH_BIT_ATI                                                        =         0x00000020_u32
  E_SATURATE_BIT_ATI                                                      =         0x00000040_u32
  E_COMP_BIT_ATI                                                          =         0x00000002_u32
  E_NEGATE_BIT_ATI                                                        =         0x00000004_u32
  E_BIAS_BIT_ATI                                                          =         0x00000008_u32
  E_TRACE_OPERATIONS_BIT_MESA                                             =             0x0001_u32
  E_TRACE_PRIMITIVES_BIT_MESA                                             =             0x0002_u32
  E_TRACE_ARRAYS_BIT_MESA                                                 =             0x0004_u32
  E_TRACE_TEXTURES_BIT_MESA                                               =             0x0008_u32
  E_TRACE_PIXELS_BIT_MESA                                                 =             0x0010_u32
  E_TRACE_ERRORS_BIT_MESA                                                 =             0x0020_u32
  E_TRACE_ALL_BITS_MESA                                                   =             0xFFFF_u32
  E_BOLD_BIT_NV                                                           =               0x01_u32
  E_ITALIC_BIT_NV                                                         =               0x02_u32
  E_GLYPH_WIDTH_BIT_NV                                                    =               0x01_u32
  E_GLYPH_HEIGHT_BIT_NV                                                   =               0x02_u32
  E_GLYPH_HORIZONTAL_BEARING_X_BIT_NV                                     =               0x04_u32
  E_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV                                     =               0x08_u32
  E_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV                               =               0x10_u32
  E_GLYPH_VERTICAL_BEARING_X_BIT_NV                                       =               0x20_u32
  E_GLYPH_VERTICAL_BEARING_Y_BIT_NV                                       =               0x40_u32
  E_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV                                 =               0x80_u32
  E_GLYPH_HAS_KERNING_BIT_NV                                              =              0x100_u32
  E_FONT_X_MIN_BOUNDS_BIT_NV                                              =         0x00010000_u32
  E_FONT_Y_MIN_BOUNDS_BIT_NV                                              =         0x00020000_u32
  E_FONT_X_MAX_BOUNDS_BIT_NV                                              =         0x00040000_u32
  E_FONT_Y_MAX_BOUNDS_BIT_NV                                              =         0x00080000_u32
  E_FONT_UNITS_PER_EM_BIT_NV                                              =         0x00100000_u32
  E_FONT_ASCENDER_BIT_NV                                                  =         0x00200000_u32
  E_FONT_DESCENDER_BIT_NV                                                 =         0x00400000_u32
  E_FONT_HEIGHT_BIT_NV                                                    =         0x00800000_u32
  E_FONT_MAX_ADVANCE_WIDTH_BIT_NV                                         =         0x01000000_u32
  E_FONT_MAX_ADVANCE_HEIGHT_BIT_NV                                        =         0x02000000_u32
  E_FONT_UNDERLINE_POSITION_BIT_NV                                        =         0x04000000_u32
  E_FONT_UNDERLINE_THICKNESS_BIT_NV                                       =         0x08000000_u32
  E_FONT_HAS_KERNING_BIT_NV                                               =         0x10000000_u32
  E_FONT_NUM_GLYPH_INDICES_BIT_NV                                         =         0x20000000_u32
  E_PERFQUERY_SINGLE_CONTEXT_INTEL                                        =         0x00000000_u32
  E_PERFQUERY_GLOBAL_CONTEXT_INTEL                                        =         0x00000001_u32
  E_VERTEX23_BIT_PGI                                                      =         0x00000004_u32
  E_VERTEX4_BIT_PGI                                                       =         0x00000008_u32
  E_COLOR3_BIT_PGI                                                        =         0x00010000_u32
  E_COLOR4_BIT_PGI                                                        =         0x00020000_u32
  E_EDGEFLAG_BIT_PGI                                                      =         0x00040000_u32
  E_INDEX_BIT_PGI                                                         =         0x00080000_u32
  E_MAT_AMBIENT_BIT_PGI                                                   =         0x00100000_u32
  E_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI                                       =         0x00200000_u32
  E_MAT_DIFFUSE_BIT_PGI                                                   =         0x00400000_u32
  E_MAT_EMISSION_BIT_PGI                                                  =         0x00800000_u32
  E_MAT_COLOR_INDEXES_BIT_PGI                                             =         0x01000000_u32
  E_MAT_SHININESS_BIT_PGI                                                 =         0x02000000_u32
  E_MAT_SPECULAR_BIT_PGI                                                  =         0x04000000_u32
  E_NORMAL_BIT_PGI                                                        =         0x08000000_u32
  E_TEXCOORD1_BIT_PGI                                                     =         0x10000000_u32
  E_TEXCOORD2_BIT_PGI                                                     =         0x20000000_u32
  E_TEXCOORD3_BIT_PGI                                                     =         0x40000000_u32
  E_TEXCOORD4_BIT_PGI                                                     =         0x80000000_u32
  E_COLOR_BUFFER_BIT0_QCOM                                                =         0x00000001_u32
  E_COLOR_BUFFER_BIT1_QCOM                                                =         0x00000002_u32
  E_COLOR_BUFFER_BIT2_QCOM                                                =         0x00000004_u32
  E_COLOR_BUFFER_BIT3_QCOM                                                =         0x00000008_u32
  E_COLOR_BUFFER_BIT4_QCOM                                                =         0x00000010_u32
  E_COLOR_BUFFER_BIT5_QCOM                                                =         0x00000020_u32
  E_COLOR_BUFFER_BIT6_QCOM                                                =         0x00000040_u32
  E_COLOR_BUFFER_BIT7_QCOM                                                =         0x00000080_u32
  E_DEPTH_BUFFER_BIT0_QCOM                                                =         0x00000100_u32
  E_DEPTH_BUFFER_BIT1_QCOM                                                =         0x00000200_u32
  E_DEPTH_BUFFER_BIT2_QCOM                                                =         0x00000400_u32
  E_DEPTH_BUFFER_BIT3_QCOM                                                =         0x00000800_u32
  E_DEPTH_BUFFER_BIT4_QCOM                                                =         0x00001000_u32
  E_DEPTH_BUFFER_BIT5_QCOM                                                =         0x00002000_u32
  E_DEPTH_BUFFER_BIT6_QCOM                                                =         0x00004000_u32
  E_DEPTH_BUFFER_BIT7_QCOM                                                =         0x00008000_u32
  E_STENCIL_BUFFER_BIT0_QCOM                                              =         0x00010000_u32
  E_STENCIL_BUFFER_BIT1_QCOM                                              =         0x00020000_u32
  E_STENCIL_BUFFER_BIT2_QCOM                                              =         0x00040000_u32
  E_STENCIL_BUFFER_BIT3_QCOM                                              =         0x00080000_u32
  E_STENCIL_BUFFER_BIT4_QCOM                                              =         0x00100000_u32
  E_STENCIL_BUFFER_BIT5_QCOM                                              =         0x00200000_u32
  E_STENCIL_BUFFER_BIT6_QCOM                                              =         0x00400000_u32
  E_STENCIL_BUFFER_BIT7_QCOM                                              =         0x00800000_u32
  E_MULTISAMPLE_BUFFER_BIT0_QCOM                                          =         0x01000000_u32
  E_MULTISAMPLE_BUFFER_BIT1_QCOM                                          =         0x02000000_u32
  E_MULTISAMPLE_BUFFER_BIT2_QCOM                                          =         0x04000000_u32
  E_MULTISAMPLE_BUFFER_BIT3_QCOM                                          =         0x08000000_u32
  E_MULTISAMPLE_BUFFER_BIT4_QCOM                                          =         0x10000000_u32
  E_MULTISAMPLE_BUFFER_BIT5_QCOM                                          =         0x20000000_u32
  E_MULTISAMPLE_BUFFER_BIT6_QCOM                                          =         0x40000000_u32
  E_MULTISAMPLE_BUFFER_BIT7_QCOM                                          =         0x80000000_u32
  E_TEXTURE_DEFORMATION_BIT_SGIX                                          =         0x00000001_u32
  E_GEOMETRY_DEFORMATION_BIT_SGIX                                         =         0x00000002_u32
  E_TERMINATE_SEQUENCE_COMMAND_NV                                         =             0x0000_u32
  E_NOP_COMMAND_NV                                                        =             0x0001_u32
  E_DRAW_ELEMENTS_COMMAND_NV                                              =             0x0002_u32
  E_DRAW_ARRAYS_COMMAND_NV                                                =             0x0003_u32
  E_DRAW_ELEMENTS_STRIP_COMMAND_NV                                        =             0x0004_u32
  E_DRAW_ARRAYS_STRIP_COMMAND_NV                                          =             0x0005_u32
  E_DRAW_ELEMENTS_INSTANCED_COMMAND_NV                                    =             0x0006_u32
  E_DRAW_ARRAYS_INSTANCED_COMMAND_NV                                      =             0x0007_u32
  E_ELEMENT_ADDRESS_COMMAND_NV                                            =             0x0008_u32
  E_ATTRIBUTE_ADDRESS_COMMAND_NV                                          =             0x0009_u32
  E_UNIFORM_ADDRESS_COMMAND_NV                                            =             0x000A_u32
  E_BLEND_COLOR_COMMAND_NV                                                =             0x000B_u32
  E_STENCIL_REF_COMMAND_NV                                                =             0x000C_u32
  E_LINE_WIDTH_COMMAND_NV                                                 =             0x000D_u32
  E_POLYGON_OFFSET_COMMAND_NV                                             =             0x000E_u32
  E_ALPHA_REF_COMMAND_NV                                                  =             0x000F_u32
  E_VIEWPORT_COMMAND_NV                                                   =             0x0010_u32
  E_SCISSOR_COMMAND_NV                                                    =             0x0011_u32
  E_FRONT_FACE_COMMAND_NV                                                 =             0x0012_u32
  E_LAYOUT_DEFAULT_INTEL                                                  =                      0
  E_LAYOUT_LINEAR_INTEL                                                   =                      1
  E_LAYOUT_LINEAR_CPU_CACHED_INTEL                                        =                      2
  E_CLOSE_PATH_NV                                                         =               0x00_u32
  E_MOVE_TO_NV                                                            =               0x02_u32
  E_RELATIVE_MOVE_TO_NV                                                   =               0x03_u32
  E_LINE_TO_NV                                                            =               0x04_u32
  E_RELATIVE_LINE_TO_NV                                                   =               0x05_u32
  E_HORIZONTAL_LINE_TO_NV                                                 =               0x06_u32
  E_RELATIVE_HORIZONTAL_LINE_TO_NV                                        =               0x07_u32
  E_VERTICAL_LINE_TO_NV                                                   =               0x08_u32
  E_RELATIVE_VERTICAL_LINE_TO_NV                                          =               0x09_u32
  E_QUADRATIC_CURVE_TO_NV                                                 =               0x0A_u32
  E_RELATIVE_QUADRATIC_CURVE_TO_NV                                        =               0x0B_u32
  E_CUBIC_CURVE_TO_NV                                                     =               0x0C_u32
  E_RELATIVE_CUBIC_CURVE_TO_NV                                            =               0x0D_u32
  E_SMOOTH_QUADRATIC_CURVE_TO_NV                                          =               0x0E_u32
  E_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV                                 =               0x0F_u32
  E_SMOOTH_CUBIC_CURVE_TO_NV                                              =               0x10_u32
  E_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV                                     =               0x11_u32
  E_SMALL_CCW_ARC_TO_NV                                                   =               0x12_u32
  E_RELATIVE_SMALL_CCW_ARC_TO_NV                                          =               0x13_u32
  E_SMALL_CW_ARC_TO_NV                                                    =               0x14_u32
  E_RELATIVE_SMALL_CW_ARC_TO_NV                                           =               0x15_u32
  E_LARGE_CCW_ARC_TO_NV                                                   =               0x16_u32
  E_RELATIVE_LARGE_CCW_ARC_TO_NV                                          =               0x17_u32
  E_LARGE_CW_ARC_TO_NV                                                    =               0x18_u32
  E_RELATIVE_LARGE_CW_ARC_TO_NV                                           =               0x19_u32
  E_CONIC_CURVE_TO_NV                                                     =               0x1A_u32
  E_RELATIVE_CONIC_CURVE_TO_NV                                            =               0x1B_u32
  E_SHARED_EDGE_NV                                                        =               0xC0_u32
  E_ROUNDED_RECT_NV                                                       =               0xE8_u32
  E_RELATIVE_ROUNDED_RECT_NV                                              =               0xE9_u32
  E_ROUNDED_RECT2_NV                                                      =               0xEA_u32
  E_RELATIVE_ROUNDED_RECT2_NV                                             =               0xEB_u32
  E_ROUNDED_RECT4_NV                                                      =               0xEC_u32
  E_RELATIVE_ROUNDED_RECT4_NV                                             =               0xED_u32
  E_ROUNDED_RECT8_NV                                                      =               0xEE_u32
  E_RELATIVE_ROUNDED_RECT8_NV                                             =               0xEF_u32
  E_RESTART_PATH_NV                                                       =               0xF0_u32
  E_DUP_FIRST_CUBIC_CURVE_TO_NV                                           =               0xF2_u32
  E_DUP_LAST_CUBIC_CURVE_TO_NV                                            =               0xF4_u32
  E_RECT_NV                                                               =               0xF6_u32
  E_RELATIVE_RECT_NV                                                      =               0xF7_u32
  E_CIRCULAR_CCW_ARC_TO_NV                                                =               0xF8_u32
  E_CIRCULAR_CW_ARC_TO_NV                                                 =               0xFA_u32
  E_CIRCULAR_TANGENT_ARC_TO_NV                                            =               0xFC_u32
  E_ARC_TO_NV                                                             =               0xFE_u32
  E_RELATIVE_ARC_TO_NV                                                    =               0xFF_u32
  E_NEXT_BUFFER_NV                                                        =                     -2
  E_SKIP_COMPONENTS4_NV                                                   =                     -3
  E_SKIP_COMPONENTS3_NV                                                   =                     -4
  E_SKIP_COMPONENTS2_NV                                                   =                     -5
  E_SKIP_COMPONENTS1_NV                                                   =                     -6
  E_RESTART_SUN                                                           =             0x0001_u32
  E_REPLACE_MIDDLE_SUN                                                    =             0x0002_u32
  E_REPLACE_OLDEST_SUN                                                    =             0x0003_u32
  E_FALSE                                                                 =                      0
  E_NO_ERROR                                                              =                      0
  E_ZERO                                                                  =                      0
  E_NONE                                                                  =                      0
  E_NONE_OES                                                              =                      0
  E_TRUE                                                                  =                      1
  E_ONE                                                                   =                      1
  E_INVALID_INDEX                                                         =         0xFFFFFFFF_u32
  E_TIMEOUT_IGNORED                                                       = 0xFFFFFFFFFFFFFFFF_u64
  E_TIMEOUT_IGNORED_APPLE                                                 = 0xFFFFFFFFFFFFFFFF_u64
  E_VERSION_ES_CL_1_0                                                     =                      1
  E_VERSION_ES_CM_1_1                                                     =                      1
  E_VERSION_ES_CL_1_1                                                     =                      1
  E_POINTS                                                                =             0x0000_u32
  E_LINES                                                                 =             0x0001_u32
  E_LINE_LOOP                                                             =             0x0002_u32
  E_LINE_STRIP                                                            =             0x0003_u32
  E_TRIANGLES                                                             =             0x0004_u32
  E_TRIANGLE_STRIP                                                        =             0x0005_u32
  E_TRIANGLE_FAN                                                          =             0x0006_u32
  E_QUADS                                                                 =             0x0007_u32
  E_QUADS_EXT                                                             =             0x0007_u32
  E_QUADS_OES                                                             =             0x0007_u32
  E_QUAD_STRIP                                                            =             0x0008_u32
  E_POLYGON                                                               =             0x0009_u32
  E_LINES_ADJACENCY                                                       =             0x000A_u32
  E_LINES_ADJACENCY_ARB                                                   =             0x000A_u32
  E_LINES_ADJACENCY_EXT                                                   =             0x000A_u32
  E_LINES_ADJACENCY_OES                                                   =             0x000A_u32
  E_LINE_STRIP_ADJACENCY                                                  =             0x000B_u32
  E_LINE_STRIP_ADJACENCY_ARB                                              =             0x000B_u32
  E_LINE_STRIP_ADJACENCY_EXT                                              =             0x000B_u32
  E_LINE_STRIP_ADJACENCY_OES                                              =             0x000B_u32
  E_TRIANGLES_ADJACENCY                                                   =             0x000C_u32
  E_TRIANGLES_ADJACENCY_ARB                                               =             0x000C_u32
  E_TRIANGLES_ADJACENCY_EXT                                               =             0x000C_u32
  E_TRIANGLES_ADJACENCY_OES                                               =             0x000C_u32
  E_TRIANGLE_STRIP_ADJACENCY                                              =             0x000D_u32
  E_TRIANGLE_STRIP_ADJACENCY_ARB                                          =             0x000D_u32
  E_TRIANGLE_STRIP_ADJACENCY_EXT                                          =             0x000D_u32
  E_TRIANGLE_STRIP_ADJACENCY_OES                                          =             0x000D_u32
  E_PATCHES                                                               =             0x000E_u32
  E_PATCHES_EXT                                                           =             0x000E_u32
  E_PATCHES_OES                                                           =             0x000E_u32
  E_ACCUM                                                                 =             0x0100_u32
  E_LOAD                                                                  =             0x0101_u32
  E_RETURN                                                                =             0x0102_u32
  E_MULT                                                                  =             0x0103_u32
  E_ADD                                                                   =             0x0104_u32
  E_NEVER                                                                 =             0x0200_u32
  E_LESS                                                                  =             0x0201_u32
  E_EQUAL                                                                 =             0x0202_u32
  E_LEQUAL                                                                =             0x0203_u32
  E_GREATER                                                               =             0x0204_u32
  E_NOTEQUAL                                                              =             0x0205_u32
  E_GEQUAL                                                                =             0x0206_u32
  E_ALWAYS                                                                =             0x0207_u32
  E_SRC_COLOR                                                             =             0x0300_u32
  E_ONE_MINUS_SRC_COLOR                                                   =             0x0301_u32
  E_SRC_ALPHA                                                             =             0x0302_u32
  E_ONE_MINUS_SRC_ALPHA                                                   =             0x0303_u32
  E_DST_ALPHA                                                             =             0x0304_u32
  E_ONE_MINUS_DST_ALPHA                                                   =             0x0305_u32
  E_DST_COLOR                                                             =             0x0306_u32
  E_ONE_MINUS_DST_COLOR                                                   =             0x0307_u32
  E_SRC_ALPHA_SATURATE                                                    =             0x0308_u32
  E_SRC_ALPHA_SATURATE_EXT                                                =             0x0308_u32
  E_FRONT_LEFT                                                            =             0x0400_u32
  E_FRONT_RIGHT                                                           =             0x0401_u32
  E_BACK_LEFT                                                             =             0x0402_u32
  E_BACK_RIGHT                                                            =             0x0403_u32
  E_FRONT                                                                 =             0x0404_u32
  E_BACK                                                                  =             0x0405_u32
  E_LEFT                                                                  =             0x0406_u32
  E_RIGHT                                                                 =             0x0407_u32
  E_FRONT_AND_BACK                                                        =             0x0408_u32
  E_AUX0                                                                  =             0x0409_u32
  E_AUX1                                                                  =             0x040A_u32
  E_AUX2                                                                  =             0x040B_u32
  E_AUX3                                                                  =             0x040C_u32
  E_INVALID_ENUM                                                          =             0x0500_u32
  E_INVALID_VALUE                                                         =             0x0501_u32
  E_INVALID_OPERATION                                                     =             0x0502_u32
  E_STACK_OVERFLOW                                                        =             0x0503_u32
  E_STACK_OVERFLOW_KHR                                                    =             0x0503_u32
  E_STACK_UNDERFLOW                                                       =             0x0504_u32
  E_STACK_UNDERFLOW_KHR                                                   =             0x0504_u32
  E_OUT_OF_MEMORY                                                         =             0x0505_u32
  E_INVALID_FRAMEBUFFER_OPERATION                                         =             0x0506_u32
  E_INVALID_FRAMEBUFFER_OPERATION_EXT                                     =             0x0506_u32
  E_INVALID_FRAMEBUFFER_OPERATION_OES                                     =             0x0506_u32
  E_CONTEXT_LOST                                                          =             0x0507_u32
  E_CONTEXT_LOST_KHR                                                      =             0x0507_u32
  E_2D                                                                    =             0x0600_u32
  E_3D                                                                    =             0x0601_u32
  E_3D_COLOR                                                              =             0x0602_u32
  E_3D_COLOR_TEXTURE                                                      =             0x0603_u32
  E_4D_COLOR_TEXTURE                                                      =             0x0604_u32
  E_PASS_THROUGH_TOKEN                                                    =             0x0700_u32
  E_POINT_TOKEN                                                           =             0x0701_u32
  E_LINE_TOKEN                                                            =             0x0702_u32
  E_POLYGON_TOKEN                                                         =             0x0703_u32
  E_BITMAP_TOKEN                                                          =             0x0704_u32
  E_DRAW_PIXEL_TOKEN                                                      =             0x0705_u32
  E_COPY_PIXEL_TOKEN                                                      =             0x0706_u32
  E_LINE_RESET_TOKEN                                                      =             0x0707_u32
  E_EXP                                                                   =             0x0800_u32
  E_EXP2                                                                  =             0x0801_u32
  E_CW                                                                    =             0x0900_u32
  E_CCW                                                                   =             0x0901_u32
  E_COEFF                                                                 =             0x0A00_u32
  E_ORDER                                                                 =             0x0A01_u32
  E_DOMAIN                                                                =             0x0A02_u32
  E_CURRENT_COLOR                                                         =             0x0B00_u32
  E_CURRENT_INDEX                                                         =             0x0B01_u32
  E_CURRENT_NORMAL                                                        =             0x0B02_u32
  E_CURRENT_TEXTURE_COORDS                                                =             0x0B03_u32
  E_CURRENT_RASTER_COLOR                                                  =             0x0B04_u32
  E_CURRENT_RASTER_INDEX                                                  =             0x0B05_u32
  E_CURRENT_RASTER_TEXTURE_COORDS                                         =             0x0B06_u32
  E_CURRENT_RASTER_POSITION                                               =             0x0B07_u32
  E_CURRENT_RASTER_POSITION_VALID                                         =             0x0B08_u32
  E_CURRENT_RASTER_DISTANCE                                               =             0x0B09_u32
  E_POINT_SMOOTH                                                          =             0x0B10_u32
  E_POINT_SIZE                                                            =             0x0B11_u32
  E_POINT_SIZE_RANGE                                                      =             0x0B12_u32
  E_SMOOTH_POINT_SIZE_RANGE                                               =             0x0B12_u32
  E_POINT_SIZE_GRANULARITY                                                =             0x0B13_u32
  E_SMOOTH_POINT_SIZE_GRANULARITY                                         =             0x0B13_u32
  E_LINE_SMOOTH                                                           =             0x0B20_u32
  E_LINE_WIDTH                                                            =             0x0B21_u32
  E_LINE_WIDTH_RANGE                                                      =             0x0B22_u32
  E_SMOOTH_LINE_WIDTH_RANGE                                               =             0x0B22_u32
  E_LINE_WIDTH_GRANULARITY                                                =             0x0B23_u32
  E_SMOOTH_LINE_WIDTH_GRANULARITY                                         =             0x0B23_u32
  E_LINE_STIPPLE                                                          =             0x0B24_u32
  E_LINE_STIPPLE_PATTERN                                                  =             0x0B25_u32
  E_LINE_STIPPLE_REPEAT                                                   =             0x0B26_u32
  E_LIST_MODE                                                             =             0x0B30_u32
  E_MAX_LIST_NESTING                                                      =             0x0B31_u32
  E_LIST_BASE                                                             =             0x0B32_u32
  E_LIST_INDEX                                                            =             0x0B33_u32
  E_POLYGON_MODE                                                          =             0x0B40_u32
  E_POLYGON_MODE_NV                                                       =             0x0B40_u32
  E_POLYGON_SMOOTH                                                        =             0x0B41_u32
  E_POLYGON_STIPPLE                                                       =             0x0B42_u32
  E_EDGE_FLAG                                                             =             0x0B43_u32
  E_CULL_FACE                                                             =             0x0B44_u32
  E_CULL_FACE_MODE                                                        =             0x0B45_u32
  E_FRONT_FACE                                                            =             0x0B46_u32
  E_LIGHTING                                                              =             0x0B50_u32
  E_LIGHT_MODEL_LOCAL_VIEWER                                              =             0x0B51_u32
  E_LIGHT_MODEL_TWO_SIDE                                                  =             0x0B52_u32
  E_LIGHT_MODEL_AMBIENT                                                   =             0x0B53_u32
  E_SHADE_MODEL                                                           =             0x0B54_u32
  E_COLOR_MATERIAL_FACE                                                   =             0x0B55_u32
  E_COLOR_MATERIAL_PARAMETER                                              =             0x0B56_u32
  E_COLOR_MATERIAL                                                        =             0x0B57_u32
  E_FOG                                                                   =             0x0B60_u32
  E_FOG_INDEX                                                             =             0x0B61_u32
  E_FOG_DENSITY                                                           =             0x0B62_u32
  E_FOG_START                                                             =             0x0B63_u32
  E_FOG_END                                                               =             0x0B64_u32
  E_FOG_MODE                                                              =             0x0B65_u32
  E_FOG_COLOR                                                             =             0x0B66_u32
  E_DEPTH_RANGE                                                           =             0x0B70_u32
  E_DEPTH_TEST                                                            =             0x0B71_u32
  E_DEPTH_WRITEMASK                                                       =             0x0B72_u32
  E_DEPTH_CLEAR_VALUE                                                     =             0x0B73_u32
  E_DEPTH_FUNC                                                            =             0x0B74_u32
  E_ACCUM_CLEAR_VALUE                                                     =             0x0B80_u32
  E_STENCIL_TEST                                                          =             0x0B90_u32
  E_STENCIL_CLEAR_VALUE                                                   =             0x0B91_u32
  E_STENCIL_FUNC                                                          =             0x0B92_u32
  E_STENCIL_VALUE_MASK                                                    =             0x0B93_u32
  E_STENCIL_FAIL                                                          =             0x0B94_u32
  E_STENCIL_PASS_DEPTH_FAIL                                               =             0x0B95_u32
  E_STENCIL_PASS_DEPTH_PASS                                               =             0x0B96_u32
  E_STENCIL_REF                                                           =             0x0B97_u32
  E_STENCIL_WRITEMASK                                                     =             0x0B98_u32
  E_MATRIX_MODE                                                           =             0x0BA0_u32
  E_NORMALIZE                                                             =             0x0BA1_u32
  E_VIEWPORT                                                              =             0x0BA2_u32
  E_MODELVIEW_STACK_DEPTH                                                 =             0x0BA3_u32
  E_MODELVIEW0_STACK_DEPTH_EXT                                            =             0x0BA3_u32
  E_PATH_MODELVIEW_STACK_DEPTH_NV                                         =             0x0BA3_u32
  E_PROJECTION_STACK_DEPTH                                                =             0x0BA4_u32
  E_PATH_PROJECTION_STACK_DEPTH_NV                                        =             0x0BA4_u32
  E_TEXTURE_STACK_DEPTH                                                   =             0x0BA5_u32
  E_MODELVIEW_MATRIX                                                      =             0x0BA6_u32
  E_MODELVIEW0_MATRIX_EXT                                                 =             0x0BA6_u32
  E_PATH_MODELVIEW_MATRIX_NV                                              =             0x0BA6_u32
  E_PROJECTION_MATRIX                                                     =             0x0BA7_u32
  E_PATH_PROJECTION_MATRIX_NV                                             =             0x0BA7_u32
  E_TEXTURE_MATRIX                                                        =             0x0BA8_u32
  E_ATTRIB_STACK_DEPTH                                                    =             0x0BB0_u32
  E_CLIENT_ATTRIB_STACK_DEPTH                                             =             0x0BB1_u32
  E_ALPHA_TEST                                                            =             0x0BC0_u32
  E_ALPHA_TEST_QCOM                                                       =             0x0BC0_u32
  E_ALPHA_TEST_FUNC                                                       =             0x0BC1_u32
  E_ALPHA_TEST_FUNC_QCOM                                                  =             0x0BC1_u32
  E_ALPHA_TEST_REF                                                        =             0x0BC2_u32
  E_ALPHA_TEST_REF_QCOM                                                   =             0x0BC2_u32
  E_DITHER                                                                =             0x0BD0_u32
  E_BLEND_DST                                                             =             0x0BE0_u32
  E_BLEND_SRC                                                             =             0x0BE1_u32
  E_BLEND                                                                 =             0x0BE2_u32
  E_LOGIC_OP_MODE                                                         =             0x0BF0_u32
  E_INDEX_LOGIC_OP                                                        =             0x0BF1_u32
  E_LOGIC_OP                                                              =             0x0BF1_u32
  E_COLOR_LOGIC_OP                                                        =             0x0BF2_u32
  E_AUX_BUFFERS                                                           =             0x0C00_u32
  E_DRAW_BUFFER                                                           =             0x0C01_u32
  E_DRAW_BUFFER_EXT                                                       =             0x0C01_u32
  E_READ_BUFFER                                                           =             0x0C02_u32
  E_READ_BUFFER_EXT                                                       =             0x0C02_u32
  E_READ_BUFFER_NV                                                        =             0x0C02_u32
  E_SCISSOR_BOX                                                           =             0x0C10_u32
  E_SCISSOR_TEST                                                          =             0x0C11_u32
  E_INDEX_CLEAR_VALUE                                                     =             0x0C20_u32
  E_INDEX_WRITEMASK                                                       =             0x0C21_u32
  E_COLOR_CLEAR_VALUE                                                     =             0x0C22_u32
  E_COLOR_WRITEMASK                                                       =             0x0C23_u32
  E_INDEX_MODE                                                            =             0x0C30_u32
  E_RGBA_MODE                                                             =             0x0C31_u32
  E_DOUBLEBUFFER                                                          =             0x0C32_u32
  E_STEREO                                                                =             0x0C33_u32
  E_RENDER_MODE                                                           =             0x0C40_u32
  E_PERSPECTIVE_CORRECTION_HINT                                           =             0x0C50_u32
  E_POINT_SMOOTH_HINT                                                     =             0x0C51_u32
  E_LINE_SMOOTH_HINT                                                      =             0x0C52_u32
  E_POLYGON_SMOOTH_HINT                                                   =             0x0C53_u32
  E_FOG_HINT                                                              =             0x0C54_u32
  E_TEXTURE_GEN_S                                                         =             0x0C60_u32
  E_TEXTURE_GEN_T                                                         =             0x0C61_u32
  E_TEXTURE_GEN_R                                                         =             0x0C62_u32
  E_TEXTURE_GEN_Q                                                         =             0x0C63_u32
  E_PIXEL_MAP_I_TO_I                                                      =             0x0C70_u32
  E_PIXEL_MAP_S_TO_S                                                      =             0x0C71_u32
  E_PIXEL_MAP_I_TO_R                                                      =             0x0C72_u32
  E_PIXEL_MAP_I_TO_G                                                      =             0x0C73_u32
  E_PIXEL_MAP_I_TO_B                                                      =             0x0C74_u32
  E_PIXEL_MAP_I_TO_A                                                      =             0x0C75_u32
  E_PIXEL_MAP_R_TO_R                                                      =             0x0C76_u32
  E_PIXEL_MAP_G_TO_G                                                      =             0x0C77_u32
  E_PIXEL_MAP_B_TO_B                                                      =             0x0C78_u32
  E_PIXEL_MAP_A_TO_A                                                      =             0x0C79_u32
  E_PIXEL_MAP_I_TO_I_SIZE                                                 =             0x0CB0_u32
  E_PIXEL_MAP_S_TO_S_SIZE                                                 =             0x0CB1_u32
  E_PIXEL_MAP_I_TO_R_SIZE                                                 =             0x0CB2_u32
  E_PIXEL_MAP_I_TO_G_SIZE                                                 =             0x0CB3_u32
  E_PIXEL_MAP_I_TO_B_SIZE                                                 =             0x0CB4_u32
  E_PIXEL_MAP_I_TO_A_SIZE                                                 =             0x0CB5_u32
  E_PIXEL_MAP_R_TO_R_SIZE                                                 =             0x0CB6_u32
  E_PIXEL_MAP_G_TO_G_SIZE                                                 =             0x0CB7_u32
  E_PIXEL_MAP_B_TO_B_SIZE                                                 =             0x0CB8_u32
  E_PIXEL_MAP_A_TO_A_SIZE                                                 =             0x0CB9_u32
  E_UNPACK_SWAP_BYTES                                                     =             0x0CF0_u32
  E_UNPACK_LSB_FIRST                                                      =             0x0CF1_u32
  E_UNPACK_ROW_LENGTH                                                     =             0x0CF2_u32
  E_UNPACK_ROW_LENGTH_EXT                                                 =             0x0CF2_u32
  E_UNPACK_SKIP_ROWS                                                      =             0x0CF3_u32
  E_UNPACK_SKIP_ROWS_EXT                                                  =             0x0CF3_u32
  E_UNPACK_SKIP_PIXELS                                                    =             0x0CF4_u32
  E_UNPACK_SKIP_PIXELS_EXT                                                =             0x0CF4_u32
  E_UNPACK_ALIGNMENT                                                      =             0x0CF5_u32
  E_PACK_SWAP_BYTES                                                       =             0x0D00_u32
  E_PACK_LSB_FIRST                                                        =             0x0D01_u32
  E_PACK_ROW_LENGTH                                                       =             0x0D02_u32
  E_PACK_SKIP_ROWS                                                        =             0x0D03_u32
  E_PACK_SKIP_PIXELS                                                      =             0x0D04_u32
  E_PACK_ALIGNMENT                                                        =             0x0D05_u32
  E_MAP_COLOR                                                             =             0x0D10_u32
  E_MAP_STENCIL                                                           =             0x0D11_u32
  E_INDEX_SHIFT                                                           =             0x0D12_u32
  E_INDEX_OFFSET                                                          =             0x0D13_u32
  E_RED_SCALE                                                             =             0x0D14_u32
  E_RED_BIAS                                                              =             0x0D15_u32
  E_ZOOM_X                                                                =             0x0D16_u32
  E_ZOOM_Y                                                                =             0x0D17_u32
  E_GREEN_SCALE                                                           =             0x0D18_u32
  E_GREEN_BIAS                                                            =             0x0D19_u32
  E_BLUE_SCALE                                                            =             0x0D1A_u32
  E_BLUE_BIAS                                                             =             0x0D1B_u32
  E_ALPHA_SCALE                                                           =             0x0D1C_u32
  E_ALPHA_BIAS                                                            =             0x0D1D_u32
  E_DEPTH_SCALE                                                           =             0x0D1E_u32
  E_DEPTH_BIAS                                                            =             0x0D1F_u32
  E_MAX_EVAL_ORDER                                                        =             0x0D30_u32
  E_MAX_LIGHTS                                                            =             0x0D31_u32
  E_MAX_CLIP_PLANES                                                       =             0x0D32_u32
  E_MAX_CLIP_PLANES_IMG                                                   =             0x0D32_u32
  E_MAX_CLIP_DISTANCES                                                    =             0x0D32_u32
  E_MAX_CLIP_DISTANCES_EXT                                                =             0x0D32_u32
  E_MAX_CLIP_DISTANCES_APPLE                                              =             0x0D32_u32
  E_MAX_TEXTURE_SIZE                                                      =             0x0D33_u32
  E_MAX_PIXEL_MAP_TABLE                                                   =             0x0D34_u32
  E_MAX_ATTRIB_STACK_DEPTH                                                =             0x0D35_u32
  E_MAX_MODELVIEW_STACK_DEPTH                                             =             0x0D36_u32
  E_PATH_MAX_MODELVIEW_STACK_DEPTH_NV                                     =             0x0D36_u32
  E_MAX_NAME_STACK_DEPTH                                                  =             0x0D37_u32
  E_MAX_PROJECTION_STACK_DEPTH                                            =             0x0D38_u32
  E_PATH_MAX_PROJECTION_STACK_DEPTH_NV                                    =             0x0D38_u32
  E_MAX_TEXTURE_STACK_DEPTH                                               =             0x0D39_u32
  E_MAX_VIEWPORT_DIMS                                                     =             0x0D3A_u32
  E_MAX_CLIENT_ATTRIB_STACK_DEPTH                                         =             0x0D3B_u32
  E_SUBPIXEL_BITS                                                         =             0x0D50_u32
  E_INDEX_BITS                                                            =             0x0D51_u32
  E_RED_BITS                                                              =             0x0D52_u32
  E_GREEN_BITS                                                            =             0x0D53_u32
  E_BLUE_BITS                                                             =             0x0D54_u32
  E_ALPHA_BITS                                                            =             0x0D55_u32
  E_DEPTH_BITS                                                            =             0x0D56_u32
  E_STENCIL_BITS                                                          =             0x0D57_u32
  E_ACCUM_RED_BITS                                                        =             0x0D58_u32
  E_ACCUM_GREEN_BITS                                                      =             0x0D59_u32
  E_ACCUM_BLUE_BITS                                                       =             0x0D5A_u32
  E_ACCUM_ALPHA_BITS                                                      =             0x0D5B_u32
  E_NAME_STACK_DEPTH                                                      =             0x0D70_u32
  E_AUTO_NORMAL                                                           =             0x0D80_u32
  E_MAP1_COLOR_4                                                          =             0x0D90_u32
  E_MAP1_INDEX                                                            =             0x0D91_u32
  E_MAP1_NORMAL                                                           =             0x0D92_u32
  E_MAP1_TEXTURE_COORD_1                                                  =             0x0D93_u32
  E_MAP1_TEXTURE_COORD_2                                                  =             0x0D94_u32
  E_MAP1_TEXTURE_COORD_3                                                  =             0x0D95_u32
  E_MAP1_TEXTURE_COORD_4                                                  =             0x0D96_u32
  E_MAP1_VERTEX_3                                                         =             0x0D97_u32
  E_MAP1_VERTEX_4                                                         =             0x0D98_u32
  E_MAP2_COLOR_4                                                          =             0x0DB0_u32
  E_MAP2_INDEX                                                            =             0x0DB1_u32
  E_MAP2_NORMAL                                                           =             0x0DB2_u32
  E_MAP2_TEXTURE_COORD_1                                                  =             0x0DB3_u32
  E_MAP2_TEXTURE_COORD_2                                                  =             0x0DB4_u32
  E_MAP2_TEXTURE_COORD_3                                                  =             0x0DB5_u32
  E_MAP2_TEXTURE_COORD_4                                                  =             0x0DB6_u32
  E_MAP2_VERTEX_3                                                         =             0x0DB7_u32
  E_MAP2_VERTEX_4                                                         =             0x0DB8_u32
  E_MAP1_GRID_DOMAIN                                                      =             0x0DD0_u32
  E_MAP1_GRID_SEGMENTS                                                    =             0x0DD1_u32
  E_MAP2_GRID_DOMAIN                                                      =             0x0DD2_u32
  E_MAP2_GRID_SEGMENTS                                                    =             0x0DD3_u32
  E_TEXTURE_1D                                                            =             0x0DE0_u32
  E_TEXTURE_2D                                                            =             0x0DE1_u32
  E_FEEDBACK_BUFFER_POINTER                                               =             0x0DF0_u32
  E_FEEDBACK_BUFFER_SIZE                                                  =             0x0DF1_u32
  E_FEEDBACK_BUFFER_TYPE                                                  =             0x0DF2_u32
  E_SELECTION_BUFFER_POINTER                                              =             0x0DF3_u32
  E_SELECTION_BUFFER_SIZE                                                 =             0x0DF4_u32
  E_TEXTURE_WIDTH                                                         =             0x1000_u32
  E_TEXTURE_HEIGHT                                                        =             0x1001_u32
  E_TEXTURE_INTERNAL_FORMAT                                               =             0x1003_u32
  E_TEXTURE_COMPONENTS                                                    =             0x1003_u32
  E_TEXTURE_BORDER_COLOR                                                  =             0x1004_u32
  E_TEXTURE_BORDER_COLOR_EXT                                              =             0x1004_u32
  E_TEXTURE_BORDER_COLOR_NV                                               =             0x1004_u32
  E_TEXTURE_BORDER_COLOR_OES                                              =             0x1004_u32
  E_TEXTURE_BORDER                                                        =             0x1005_u32
  E_TEXTURE_TARGET                                                        =             0x1006_u32
  E_DONT_CARE                                                             =             0x1100_u32
  E_FASTEST                                                               =             0x1101_u32
  E_NICEST                                                                =             0x1102_u32
  E_AMBIENT                                                               =             0x1200_u32
  E_DIFFUSE                                                               =             0x1201_u32
  E_SPECULAR                                                              =             0x1202_u32
  E_POSITION                                                              =             0x1203_u32
  E_SPOT_DIRECTION                                                        =             0x1204_u32
  E_SPOT_EXPONENT                                                         =             0x1205_u32
  E_SPOT_CUTOFF                                                           =             0x1206_u32
  E_CONSTANT_ATTENUATION                                                  =             0x1207_u32
  E_LINEAR_ATTENUATION                                                    =             0x1208_u32
  E_QUADRATIC_ATTENUATION                                                 =             0x1209_u32
  E_COMPILE                                                               =             0x1300_u32
  E_COMPILE_AND_EXECUTE                                                   =             0x1301_u32
  E_BYTE                                                                  =             0x1400_u32
  E_UNSIGNED_BYTE                                                         =             0x1401_u32
  E_SHORT                                                                 =             0x1402_u32
  E_UNSIGNED_SHORT                                                        =             0x1403_u32
  E_INT                                                                   =             0x1404_u32
  E_UNSIGNED_INT                                                          =             0x1405_u32
  E_FLOAT                                                                 =             0x1406_u32
  E_2_BYTES                                                               =             0x1407_u32
  E_2_BYTES_NV                                                            =             0x1407_u32
  E_3_BYTES                                                               =             0x1408_u32
  E_3_BYTES_NV                                                            =             0x1408_u32
  E_4_BYTES                                                               =             0x1409_u32
  E_4_BYTES_NV                                                            =             0x1409_u32
  E_DOUBLE                                                                =             0x140A_u32
  E_DOUBLE_EXT                                                            =             0x140A_u32
  E_HALF_FLOAT                                                            =             0x140B_u32
  E_HALF_FLOAT_ARB                                                        =             0x140B_u32
  E_HALF_FLOAT_NV                                                         =             0x140B_u32
  E_HALF_APPLE                                                            =             0x140B_u32
  E_FIXED                                                                 =             0x140C_u32
  E_FIXED_OES                                                             =             0x140C_u32
  E_INT64_ARB                                                             =             0x140E_u32
  E_INT64_NV                                                              =             0x140E_u32
  E_UNSIGNED_INT64_ARB                                                    =             0x140F_u32
  E_UNSIGNED_INT64_NV                                                     =             0x140F_u32
  E_CLEAR                                                                 =             0x1500_u32
  E_AND                                                                   =             0x1501_u32
  E_AND_REVERSE                                                           =             0x1502_u32
  E_COPY                                                                  =             0x1503_u32
  E_AND_INVERTED                                                          =             0x1504_u32
  E_NOOP                                                                  =             0x1505_u32
  E_XOR                                                                   =             0x1506_u32
  E_XOR_NV                                                                =             0x1506_u32
  E_OR                                                                    =             0x1507_u32
  E_NOR                                                                   =             0x1508_u32
  E_EQUIV                                                                 =             0x1509_u32
  E_INVERT                                                                =             0x150A_u32
  E_OR_REVERSE                                                            =             0x150B_u32
  E_COPY_INVERTED                                                         =             0x150C_u32
  E_OR_INVERTED                                                           =             0x150D_u32
  E_NAND                                                                  =             0x150E_u32
  E_SET                                                                   =             0x150F_u32
  E_EMISSION                                                              =             0x1600_u32
  E_SHININESS                                                             =             0x1601_u32
  E_AMBIENT_AND_DIFFUSE                                                   =             0x1602_u32
  E_COLOR_INDEXES                                                         =             0x1603_u32
  E_MODELVIEW                                                             =             0x1700_u32
  E_MODELVIEW0_ARB                                                        =             0x1700_u32
  E_MODELVIEW0_EXT                                                        =             0x1700_u32
  E_PATH_MODELVIEW_NV                                                     =             0x1700_u32
  E_PROJECTION                                                            =             0x1701_u32
  E_PATH_PROJECTION_NV                                                    =             0x1701_u32
  E_TEXTURE                                                               =             0x1702_u32
  E_COLOR                                                                 =             0x1800_u32
  E_COLOR_EXT                                                             =             0x1800_u32
  E_DEPTH                                                                 =             0x1801_u32
  E_DEPTH_EXT                                                             =             0x1801_u32
  E_STENCIL                                                               =             0x1802_u32
  E_STENCIL_EXT                                                           =             0x1802_u32
  E_COLOR_INDEX                                                           =             0x1900_u32
  E_STENCIL_INDEX                                                         =             0x1901_u32
  E_STENCIL_INDEX_OES                                                     =             0x1901_u32
  E_DEPTH_COMPONENT                                                       =             0x1902_u32
  E_RED                                                                   =             0x1903_u32
  E_RED_EXT                                                               =             0x1903_u32
  E_RED_NV                                                                =             0x1903_u32
  E_GREEN                                                                 =             0x1904_u32
  E_GREEN_NV                                                              =             0x1904_u32
  E_BLUE                                                                  =             0x1905_u32
  E_BLUE_NV                                                               =             0x1905_u32
  E_ALPHA                                                                 =             0x1906_u32
  E_RGB                                                                   =             0x1907_u32
  E_RGBA                                                                  =             0x1908_u32
  E_LUMINANCE                                                             =             0x1909_u32
  E_LUMINANCE_ALPHA                                                       =             0x190A_u32
  E_BITMAP                                                                =             0x1A00_u32
  E_POINT                                                                 =             0x1B00_u32
  E_POINT_NV                                                              =             0x1B00_u32
  E_LINE                                                                  =             0x1B01_u32
  E_LINE_NV                                                               =             0x1B01_u32
  E_FILL                                                                  =             0x1B02_u32
  E_FILL_NV                                                               =             0x1B02_u32
  E_RENDER                                                                =             0x1C00_u32
  E_FEEDBACK                                                              =             0x1C01_u32
  E_SELECT                                                                =             0x1C02_u32
  E_FLAT                                                                  =             0x1D00_u32
  E_SMOOTH                                                                =             0x1D01_u32
  E_KEEP                                                                  =             0x1E00_u32
  E_REPLACE                                                               =             0x1E01_u32
  E_INCR                                                                  =             0x1E02_u32
  E_DECR                                                                  =             0x1E03_u32
  E_VENDOR                                                                =             0x1F00_u32
  E_RENDERER                                                              =             0x1F01_u32
  E_VERSION                                                               =             0x1F02_u32
  E_EXTENSIONS                                                            =             0x1F03_u32
  E_S                                                                     =             0x2000_u32
  E_T                                                                     =             0x2001_u32
  E_R                                                                     =             0x2002_u32
  E_Q                                                                     =             0x2003_u32
  E_MODULATE                                                              =             0x2100_u32
  E_DECAL                                                                 =             0x2101_u32
  E_TEXTURE_ENV_MODE                                                      =             0x2200_u32
  E_TEXTURE_ENV_COLOR                                                     =             0x2201_u32
  E_TEXTURE_ENV                                                           =             0x2300_u32
  E_EYE_LINEAR                                                            =             0x2400_u32
  E_EYE_LINEAR_NV                                                         =             0x2400_u32
  E_OBJECT_LINEAR                                                         =             0x2401_u32
  E_OBJECT_LINEAR_NV                                                      =             0x2401_u32
  E_SPHERE_MAP                                                            =             0x2402_u32
  E_TEXTURE_GEN_MODE                                                      =             0x2500_u32
  E_TEXTURE_GEN_MODE_OES                                                  =             0x2500_u32
  E_OBJECT_PLANE                                                          =             0x2501_u32
  E_EYE_PLANE                                                             =             0x2502_u32
  E_NEAREST                                                               =             0x2600_u32
  E_LINEAR                                                                =             0x2601_u32
  E_NEAREST_MIPMAP_NEAREST                                                =             0x2700_u32
  E_LINEAR_MIPMAP_NEAREST                                                 =             0x2701_u32
  E_NEAREST_MIPMAP_LINEAR                                                 =             0x2702_u32
  E_LINEAR_MIPMAP_LINEAR                                                  =             0x2703_u32
  E_TEXTURE_MAG_FILTER                                                    =             0x2800_u32
  E_TEXTURE_MIN_FILTER                                                    =             0x2801_u32
  E_TEXTURE_WRAP_S                                                        =             0x2802_u32
  E_TEXTURE_WRAP_T                                                        =             0x2803_u32
  E_CLAMP                                                                 =             0x2900_u32
  E_REPEAT                                                                =             0x2901_u32
  E_POLYGON_OFFSET_UNITS                                                  =             0x2A00_u32
  E_POLYGON_OFFSET_POINT                                                  =             0x2A01_u32
  E_POLYGON_OFFSET_POINT_NV                                               =             0x2A01_u32
  E_POLYGON_OFFSET_LINE                                                   =             0x2A02_u32
  E_POLYGON_OFFSET_LINE_NV                                                =             0x2A02_u32
  E_R3_G3_B2                                                              =             0x2A10_u32
  E_V2F                                                                   =             0x2A20_u32
  E_V3F                                                                   =             0x2A21_u32
  E_C4UB_V2F                                                              =             0x2A22_u32
  E_C4UB_V3F                                                              =             0x2A23_u32
  E_C3F_V3F                                                               =             0x2A24_u32
  E_N3F_V3F                                                               =             0x2A25_u32
  E_C4F_N3F_V3F                                                           =             0x2A26_u32
  E_T2F_V3F                                                               =             0x2A27_u32
  E_T4F_V4F                                                               =             0x2A28_u32
  E_T2F_C4UB_V3F                                                          =             0x2A29_u32
  E_T2F_C3F_V3F                                                           =             0x2A2A_u32
  E_T2F_N3F_V3F                                                           =             0x2A2B_u32
  E_T2F_C4F_N3F_V3F                                                       =             0x2A2C_u32
  E_T4F_C4F_N3F_V4F                                                       =             0x2A2D_u32
  E_CLIP_PLANE0                                                           =             0x3000_u32
  E_CLIP_PLANE0_IMG                                                       =             0x3000_u32
  E_CLIP_DISTANCE0                                                        =             0x3000_u32
  E_CLIP_DISTANCE0_EXT                                                    =             0x3000_u32
  E_CLIP_DISTANCE0_APPLE                                                  =             0x3000_u32
  E_CLIP_PLANE1                                                           =             0x3001_u32
  E_CLIP_PLANE1_IMG                                                       =             0x3001_u32
  E_CLIP_DISTANCE1                                                        =             0x3001_u32
  E_CLIP_DISTANCE1_EXT                                                    =             0x3001_u32
  E_CLIP_DISTANCE1_APPLE                                                  =             0x3001_u32
  E_CLIP_PLANE2                                                           =             0x3002_u32
  E_CLIP_PLANE2_IMG                                                       =             0x3002_u32
  E_CLIP_DISTANCE2                                                        =             0x3002_u32
  E_CLIP_DISTANCE2_EXT                                                    =             0x3002_u32
  E_CLIP_DISTANCE2_APPLE                                                  =             0x3002_u32
  E_CLIP_PLANE3                                                           =             0x3003_u32
  E_CLIP_PLANE3_IMG                                                       =             0x3003_u32
  E_CLIP_DISTANCE3                                                        =             0x3003_u32
  E_CLIP_DISTANCE3_EXT                                                    =             0x3003_u32
  E_CLIP_DISTANCE3_APPLE                                                  =             0x3003_u32
  E_CLIP_PLANE4                                                           =             0x3004_u32
  E_CLIP_PLANE4_IMG                                                       =             0x3004_u32
  E_CLIP_DISTANCE4                                                        =             0x3004_u32
  E_CLIP_DISTANCE4_EXT                                                    =             0x3004_u32
  E_CLIP_DISTANCE4_APPLE                                                  =             0x3004_u32
  E_CLIP_PLANE5                                                           =             0x3005_u32
  E_CLIP_PLANE5_IMG                                                       =             0x3005_u32
  E_CLIP_DISTANCE5                                                        =             0x3005_u32
  E_CLIP_DISTANCE5_EXT                                                    =             0x3005_u32
  E_CLIP_DISTANCE5_APPLE                                                  =             0x3005_u32
  E_CLIP_DISTANCE6                                                        =             0x3006_u32
  E_CLIP_DISTANCE6_EXT                                                    =             0x3006_u32
  E_CLIP_DISTANCE6_APPLE                                                  =             0x3006_u32
  E_CLIP_DISTANCE7                                                        =             0x3007_u32
  E_CLIP_DISTANCE7_EXT                                                    =             0x3007_u32
  E_CLIP_DISTANCE7_APPLE                                                  =             0x3007_u32
  E_LIGHT0                                                                =             0x4000_u32
  E_LIGHT1                                                                =             0x4001_u32
  E_LIGHT2                                                                =             0x4002_u32
  E_LIGHT3                                                                =             0x4003_u32
  E_LIGHT4                                                                =             0x4004_u32
  E_LIGHT5                                                                =             0x4005_u32
  E_LIGHT6                                                                =             0x4006_u32
  E_LIGHT7                                                                =             0x4007_u32
  E_ABGR_EXT                                                              =             0x8000_u32
  E_CONSTANT_COLOR                                                        =             0x8001_u32
  E_CONSTANT_COLOR_EXT                                                    =             0x8001_u32
  E_ONE_MINUS_CONSTANT_COLOR                                              =             0x8002_u32
  E_ONE_MINUS_CONSTANT_COLOR_EXT                                          =             0x8002_u32
  E_CONSTANT_ALPHA                                                        =             0x8003_u32
  E_CONSTANT_ALPHA_EXT                                                    =             0x8003_u32
  E_ONE_MINUS_CONSTANT_ALPHA                                              =             0x8004_u32
  E_ONE_MINUS_CONSTANT_ALPHA_EXT                                          =             0x8004_u32
  E_BLEND_COLOR                                                           =             0x8005_u32
  E_BLEND_COLOR_EXT                                                       =             0x8005_u32
  E_FUNC_ADD                                                              =             0x8006_u32
  E_FUNC_ADD_EXT                                                          =             0x8006_u32
  E_FUNC_ADD_OES                                                          =             0x8006_u32
  E_MIN                                                                   =             0x8007_u32
  E_MIN_EXT                                                               =             0x8007_u32
  E_MAX                                                                   =             0x8008_u32
  E_MAX_EXT                                                               =             0x8008_u32
  E_BLEND_EQUATION                                                        =             0x8009_u32
  E_BLEND_EQUATION_EXT                                                    =             0x8009_u32
  E_BLEND_EQUATION_OES                                                    =             0x8009_u32
  E_BLEND_EQUATION_RGB                                                    =             0x8009_u32
  E_BLEND_EQUATION_RGB_EXT                                                =             0x8009_u32
  E_BLEND_EQUATION_RGB_OES                                                =             0x8009_u32
  E_FUNC_SUBTRACT                                                         =             0x800A_u32
  E_FUNC_SUBTRACT_EXT                                                     =             0x800A_u32
  E_FUNC_SUBTRACT_OES                                                     =             0x800A_u32
  E_FUNC_REVERSE_SUBTRACT                                                 =             0x800B_u32
  E_FUNC_REVERSE_SUBTRACT_EXT                                             =             0x800B_u32
  E_FUNC_REVERSE_SUBTRACT_OES                                             =             0x800B_u32
  E_CMYK_EXT                                                              =             0x800C_u32
  E_CMYKA_EXT                                                             =             0x800D_u32
  E_PACK_CMYK_HINT_EXT                                                    =             0x800E_u32
  E_UNPACK_CMYK_HINT_EXT                                                  =             0x800F_u32
  E_CONVOLUTION_1D                                                        =             0x8010_u32
  E_CONVOLUTION_1D_EXT                                                    =             0x8010_u32
  E_CONVOLUTION_2D                                                        =             0x8011_u32
  E_CONVOLUTION_2D_EXT                                                    =             0x8011_u32
  E_SEPARABLE_2D                                                          =             0x8012_u32
  E_SEPARABLE_2D_EXT                                                      =             0x8012_u32
  E_CONVOLUTION_BORDER_MODE                                               =             0x8013_u32
  E_CONVOLUTION_BORDER_MODE_EXT                                           =             0x8013_u32
  E_CONVOLUTION_FILTER_SCALE                                              =             0x8014_u32
  E_CONVOLUTION_FILTER_SCALE_EXT                                          =             0x8014_u32
  E_CONVOLUTION_FILTER_BIAS                                               =             0x8015_u32
  E_CONVOLUTION_FILTER_BIAS_EXT                                           =             0x8015_u32
  E_REDUCE                                                                =             0x8016_u32
  E_REDUCE_EXT                                                            =             0x8016_u32
  E_CONVOLUTION_FORMAT                                                    =             0x8017_u32
  E_CONVOLUTION_FORMAT_EXT                                                =             0x8017_u32
  E_CONVOLUTION_WIDTH                                                     =             0x8018_u32
  E_CONVOLUTION_WIDTH_EXT                                                 =             0x8018_u32
  E_CONVOLUTION_HEIGHT                                                    =             0x8019_u32
  E_CONVOLUTION_HEIGHT_EXT                                                =             0x8019_u32
  E_MAX_CONVOLUTION_WIDTH                                                 =             0x801A_u32
  E_MAX_CONVOLUTION_WIDTH_EXT                                             =             0x801A_u32
  E_MAX_CONVOLUTION_HEIGHT                                                =             0x801B_u32
  E_MAX_CONVOLUTION_HEIGHT_EXT                                            =             0x801B_u32
  E_POST_CONVOLUTION_RED_SCALE                                            =             0x801C_u32
  E_POST_CONVOLUTION_RED_SCALE_EXT                                        =             0x801C_u32
  E_POST_CONVOLUTION_GREEN_SCALE                                          =             0x801D_u32
  E_POST_CONVOLUTION_GREEN_SCALE_EXT                                      =             0x801D_u32
  E_POST_CONVOLUTION_BLUE_SCALE                                           =             0x801E_u32
  E_POST_CONVOLUTION_BLUE_SCALE_EXT                                       =             0x801E_u32
  E_POST_CONVOLUTION_ALPHA_SCALE                                          =             0x801F_u32
  E_POST_CONVOLUTION_ALPHA_SCALE_EXT                                      =             0x801F_u32
  E_POST_CONVOLUTION_RED_BIAS                                             =             0x8020_u32
  E_POST_CONVOLUTION_RED_BIAS_EXT                                         =             0x8020_u32
  E_POST_CONVOLUTION_GREEN_BIAS                                           =             0x8021_u32
  E_POST_CONVOLUTION_GREEN_BIAS_EXT                                       =             0x8021_u32
  E_POST_CONVOLUTION_BLUE_BIAS                                            =             0x8022_u32
  E_POST_CONVOLUTION_BLUE_BIAS_EXT                                        =             0x8022_u32
  E_POST_CONVOLUTION_ALPHA_BIAS                                           =             0x8023_u32
  E_POST_CONVOLUTION_ALPHA_BIAS_EXT                                       =             0x8023_u32
  E_HISTOGRAM                                                             =             0x8024_u32
  E_HISTOGRAM_EXT                                                         =             0x8024_u32
  E_PROXY_HISTOGRAM                                                       =             0x8025_u32
  E_PROXY_HISTOGRAM_EXT                                                   =             0x8025_u32
  E_HISTOGRAM_WIDTH                                                       =             0x8026_u32
  E_HISTOGRAM_WIDTH_EXT                                                   =             0x8026_u32
  E_HISTOGRAM_FORMAT                                                      =             0x8027_u32
  E_HISTOGRAM_FORMAT_EXT                                                  =             0x8027_u32
  E_HISTOGRAM_RED_SIZE                                                    =             0x8028_u32
  E_HISTOGRAM_RED_SIZE_EXT                                                =             0x8028_u32
  E_HISTOGRAM_GREEN_SIZE                                                  =             0x8029_u32
  E_HISTOGRAM_GREEN_SIZE_EXT                                              =             0x8029_u32
  E_HISTOGRAM_BLUE_SIZE                                                   =             0x802A_u32
  E_HISTOGRAM_BLUE_SIZE_EXT                                               =             0x802A_u32
  E_HISTOGRAM_ALPHA_SIZE                                                  =             0x802B_u32
  E_HISTOGRAM_ALPHA_SIZE_EXT                                              =             0x802B_u32
  E_HISTOGRAM_LUMINANCE_SIZE                                              =             0x802C_u32
  E_HISTOGRAM_LUMINANCE_SIZE_EXT                                          =             0x802C_u32
  E_HISTOGRAM_SINK                                                        =             0x802D_u32
  E_HISTOGRAM_SINK_EXT                                                    =             0x802D_u32
  E_MINMAX                                                                =             0x802E_u32
  E_MINMAX_EXT                                                            =             0x802E_u32
  E_MINMAX_FORMAT                                                         =             0x802F_u32
  E_MINMAX_FORMAT_EXT                                                     =             0x802F_u32
  E_MINMAX_SINK                                                           =             0x8030_u32
  E_MINMAX_SINK_EXT                                                       =             0x8030_u32
  E_TABLE_TOO_LARGE_EXT                                                   =             0x8031_u32
  E_TABLE_TOO_LARGE                                                       =             0x8031_u32
  E_UNSIGNED_BYTE_3_3_2                                                   =             0x8032_u32
  E_UNSIGNED_BYTE_3_3_2_EXT                                               =             0x8032_u32
  E_UNSIGNED_SHORT_4_4_4_4                                                =             0x8033_u32
  E_UNSIGNED_SHORT_4_4_4_4_EXT                                            =             0x8033_u32
  E_UNSIGNED_SHORT_5_5_5_1                                                =             0x8034_u32
  E_UNSIGNED_SHORT_5_5_5_1_EXT                                            =             0x8034_u32
  E_UNSIGNED_INT_8_8_8_8                                                  =             0x8035_u32
  E_UNSIGNED_INT_8_8_8_8_EXT                                              =             0x8035_u32
  E_UNSIGNED_INT_10_10_10_2                                               =             0x8036_u32
  E_UNSIGNED_INT_10_10_10_2_EXT                                           =             0x8036_u32
  E_POLYGON_OFFSET_EXT                                                    =             0x8037_u32
  E_POLYGON_OFFSET_FILL                                                   =             0x8037_u32
  E_POLYGON_OFFSET_FACTOR                                                 =             0x8038_u32
  E_POLYGON_OFFSET_FACTOR_EXT                                             =             0x8038_u32
  E_POLYGON_OFFSET_BIAS_EXT                                               =             0x8039_u32
  E_RESCALE_NORMAL                                                        =             0x803A_u32
  E_RESCALE_NORMAL_EXT                                                    =             0x803A_u32
  E_ALPHA4                                                                =             0x803B_u32
  E_ALPHA4_EXT                                                            =             0x803B_u32
  E_ALPHA8                                                                =             0x803C_u32
  E_ALPHA8_EXT                                                            =             0x803C_u32
  E_ALPHA8_OES                                                            =             0x803C_u32
  E_ALPHA12                                                               =             0x803D_u32
  E_ALPHA12_EXT                                                           =             0x803D_u32
  E_ALPHA16                                                               =             0x803E_u32
  E_ALPHA16_EXT                                                           =             0x803E_u32
  E_LUMINANCE4                                                            =             0x803F_u32
  E_LUMINANCE4_EXT                                                        =             0x803F_u32
  E_LUMINANCE8                                                            =             0x8040_u32
  E_LUMINANCE8_EXT                                                        =             0x8040_u32
  E_LUMINANCE8_OES                                                        =             0x8040_u32
  E_LUMINANCE12                                                           =             0x8041_u32
  E_LUMINANCE12_EXT                                                       =             0x8041_u32
  E_LUMINANCE16                                                           =             0x8042_u32
  E_LUMINANCE16_EXT                                                       =             0x8042_u32
  E_LUMINANCE4_ALPHA4                                                     =             0x8043_u32
  E_LUMINANCE4_ALPHA4_EXT                                                 =             0x8043_u32
  E_LUMINANCE4_ALPHA4_OES                                                 =             0x8043_u32
  E_LUMINANCE6_ALPHA2                                                     =             0x8044_u32
  E_LUMINANCE6_ALPHA2_EXT                                                 =             0x8044_u32
  E_LUMINANCE8_ALPHA8                                                     =             0x8045_u32
  E_LUMINANCE8_ALPHA8_EXT                                                 =             0x8045_u32
  E_LUMINANCE8_ALPHA8_OES                                                 =             0x8045_u32
  E_LUMINANCE12_ALPHA4                                                    =             0x8046_u32
  E_LUMINANCE12_ALPHA4_EXT                                                =             0x8046_u32
  E_LUMINANCE12_ALPHA12                                                   =             0x8047_u32
  E_LUMINANCE12_ALPHA12_EXT                                               =             0x8047_u32
  E_LUMINANCE16_ALPHA16                                                   =             0x8048_u32
  E_LUMINANCE16_ALPHA16_EXT                                               =             0x8048_u32
  E_INTENSITY                                                             =             0x8049_u32
  E_INTENSITY_EXT                                                         =             0x8049_u32
  E_INTENSITY4                                                            =             0x804A_u32
  E_INTENSITY4_EXT                                                        =             0x804A_u32
  E_INTENSITY8                                                            =             0x804B_u32
  E_INTENSITY8_EXT                                                        =             0x804B_u32
  E_INTENSITY12                                                           =             0x804C_u32
  E_INTENSITY12_EXT                                                       =             0x804C_u32
  E_INTENSITY16                                                           =             0x804D_u32
  E_INTENSITY16_EXT                                                       =             0x804D_u32
  E_RGB2_EXT                                                              =             0x804E_u32
  E_RGB4                                                                  =             0x804F_u32
  E_RGB4_EXT                                                              =             0x804F_u32
  E_RGB5                                                                  =             0x8050_u32
  E_RGB5_EXT                                                              =             0x8050_u32
  E_RGB8                                                                  =             0x8051_u32
  E_RGB8_EXT                                                              =             0x8051_u32
  E_RGB8_OES                                                              =             0x8051_u32
  E_RGB10                                                                 =             0x8052_u32
  E_RGB10_EXT                                                             =             0x8052_u32
  E_RGB12                                                                 =             0x8053_u32
  E_RGB12_EXT                                                             =             0x8053_u32
  E_RGB16                                                                 =             0x8054_u32
  E_RGB16_EXT                                                             =             0x8054_u32
  E_RGBA2                                                                 =             0x8055_u32
  E_RGBA2_EXT                                                             =             0x8055_u32
  E_RGBA4                                                                 =             0x8056_u32
  E_RGBA4_EXT                                                             =             0x8056_u32
  E_RGBA4_OES                                                             =             0x8056_u32
  E_RGB5_A1                                                               =             0x8057_u32
  E_RGB5_A1_EXT                                                           =             0x8057_u32
  E_RGB5_A1_OES                                                           =             0x8057_u32
  E_RGBA8                                                                 =             0x8058_u32
  E_RGBA8_EXT                                                             =             0x8058_u32
  E_RGBA8_OES                                                             =             0x8058_u32
  E_RGB10_A2                                                              =             0x8059_u32
  E_RGB10_A2_EXT                                                          =             0x8059_u32
  E_RGBA12                                                                =             0x805A_u32
  E_RGBA12_EXT                                                            =             0x805A_u32
  E_RGBA16                                                                =             0x805B_u32
  E_RGBA16_EXT                                                            =             0x805B_u32
  E_TEXTURE_RED_SIZE                                                      =             0x805C_u32
  E_TEXTURE_RED_SIZE_EXT                                                  =             0x805C_u32
  E_TEXTURE_GREEN_SIZE                                                    =             0x805D_u32
  E_TEXTURE_GREEN_SIZE_EXT                                                =             0x805D_u32
  E_TEXTURE_BLUE_SIZE                                                     =             0x805E_u32
  E_TEXTURE_BLUE_SIZE_EXT                                                 =             0x805E_u32
  E_TEXTURE_ALPHA_SIZE                                                    =             0x805F_u32
  E_TEXTURE_ALPHA_SIZE_EXT                                                =             0x805F_u32
  E_TEXTURE_LUMINANCE_SIZE                                                =             0x8060_u32
  E_TEXTURE_LUMINANCE_SIZE_EXT                                            =             0x8060_u32
  E_TEXTURE_INTENSITY_SIZE                                                =             0x8061_u32
  E_TEXTURE_INTENSITY_SIZE_EXT                                            =             0x8061_u32
  E_REPLACE_EXT                                                           =             0x8062_u32
  E_PROXY_TEXTURE_1D                                                      =             0x8063_u32
  E_PROXY_TEXTURE_1D_EXT                                                  =             0x8063_u32
  E_PROXY_TEXTURE_2D                                                      =             0x8064_u32
  E_PROXY_TEXTURE_2D_EXT                                                  =             0x8064_u32
  E_TEXTURE_TOO_LARGE_EXT                                                 =             0x8065_u32
  E_TEXTURE_PRIORITY                                                      =             0x8066_u32
  E_TEXTURE_PRIORITY_EXT                                                  =             0x8066_u32
  E_TEXTURE_RESIDENT                                                      =             0x8067_u32
  E_TEXTURE_RESIDENT_EXT                                                  =             0x8067_u32
  E_TEXTURE_1D_BINDING_EXT                                                =             0x8068_u32
  E_TEXTURE_BINDING_1D                                                    =             0x8068_u32
  E_TEXTURE_2D_BINDING_EXT                                                =             0x8069_u32
  E_TEXTURE_BINDING_2D                                                    =             0x8069_u32
  E_TEXTURE_3D_BINDING_EXT                                                =             0x806A_u32
  E_TEXTURE_3D_BINDING_OES                                                =             0x806A_u32
  E_TEXTURE_BINDING_3D                                                    =             0x806A_u32
  E_TEXTURE_BINDING_3D_OES                                                =             0x806A_u32
  E_PACK_SKIP_IMAGES                                                      =             0x806B_u32
  E_PACK_SKIP_IMAGES_EXT                                                  =             0x806B_u32
  E_PACK_IMAGE_HEIGHT                                                     =             0x806C_u32
  E_PACK_IMAGE_HEIGHT_EXT                                                 =             0x806C_u32
  E_UNPACK_SKIP_IMAGES                                                    =             0x806D_u32
  E_UNPACK_SKIP_IMAGES_EXT                                                =             0x806D_u32
  E_UNPACK_IMAGE_HEIGHT                                                   =             0x806E_u32
  E_UNPACK_IMAGE_HEIGHT_EXT                                               =             0x806E_u32
  E_TEXTURE_3D                                                            =             0x806F_u32
  E_TEXTURE_3D_EXT                                                        =             0x806F_u32
  E_TEXTURE_3D_OES                                                        =             0x806F_u32
  E_PROXY_TEXTURE_3D                                                      =             0x8070_u32
  E_PROXY_TEXTURE_3D_EXT                                                  =             0x8070_u32
  E_TEXTURE_DEPTH                                                         =             0x8071_u32
  E_TEXTURE_DEPTH_EXT                                                     =             0x8071_u32
  E_TEXTURE_WRAP_R                                                        =             0x8072_u32
  E_TEXTURE_WRAP_R_EXT                                                    =             0x8072_u32
  E_TEXTURE_WRAP_R_OES                                                    =             0x8072_u32
  E_MAX_3D_TEXTURE_SIZE                                                   =             0x8073_u32
  E_MAX_3D_TEXTURE_SIZE_EXT                                               =             0x8073_u32
  E_MAX_3D_TEXTURE_SIZE_OES                                               =             0x8073_u32
  E_VERTEX_ARRAY                                                          =             0x8074_u32
  E_VERTEX_ARRAY_EXT                                                      =             0x8074_u32
  E_VERTEX_ARRAY_KHR                                                      =             0x8074_u32
  E_NORMAL_ARRAY                                                          =             0x8075_u32
  E_NORMAL_ARRAY_EXT                                                      =             0x8075_u32
  E_COLOR_ARRAY                                                           =             0x8076_u32
  E_COLOR_ARRAY_EXT                                                       =             0x8076_u32
  E_INDEX_ARRAY                                                           =             0x8077_u32
  E_INDEX_ARRAY_EXT                                                       =             0x8077_u32
  E_TEXTURE_COORD_ARRAY                                                   =             0x8078_u32
  E_TEXTURE_COORD_ARRAY_EXT                                               =             0x8078_u32
  E_EDGE_FLAG_ARRAY                                                       =             0x8079_u32
  E_EDGE_FLAG_ARRAY_EXT                                                   =             0x8079_u32
  E_VERTEX_ARRAY_SIZE                                                     =             0x807A_u32
  E_VERTEX_ARRAY_SIZE_EXT                                                 =             0x807A_u32
  E_VERTEX_ARRAY_TYPE                                                     =             0x807B_u32
  E_VERTEX_ARRAY_TYPE_EXT                                                 =             0x807B_u32
  E_VERTEX_ARRAY_STRIDE                                                   =             0x807C_u32
  E_VERTEX_ARRAY_STRIDE_EXT                                               =             0x807C_u32
  E_VERTEX_ARRAY_COUNT_EXT                                                =             0x807D_u32
  E_NORMAL_ARRAY_TYPE                                                     =             0x807E_u32
  E_NORMAL_ARRAY_TYPE_EXT                                                 =             0x807E_u32
  E_NORMAL_ARRAY_STRIDE                                                   =             0x807F_u32
  E_NORMAL_ARRAY_STRIDE_EXT                                               =             0x807F_u32
  E_NORMAL_ARRAY_COUNT_EXT                                                =             0x8080_u32
  E_COLOR_ARRAY_SIZE                                                      =             0x8081_u32
  E_COLOR_ARRAY_SIZE_EXT                                                  =             0x8081_u32
  E_COLOR_ARRAY_TYPE                                                      =             0x8082_u32
  E_COLOR_ARRAY_TYPE_EXT                                                  =             0x8082_u32
  E_COLOR_ARRAY_STRIDE                                                    =             0x8083_u32
  E_COLOR_ARRAY_STRIDE_EXT                                                =             0x8083_u32
  E_COLOR_ARRAY_COUNT_EXT                                                 =             0x8084_u32
  E_INDEX_ARRAY_TYPE                                                      =             0x8085_u32
  E_INDEX_ARRAY_TYPE_EXT                                                  =             0x8085_u32
  E_INDEX_ARRAY_STRIDE                                                    =             0x8086_u32
  E_INDEX_ARRAY_STRIDE_EXT                                                =             0x8086_u32
  E_INDEX_ARRAY_COUNT_EXT                                                 =             0x8087_u32
  E_TEXTURE_COORD_ARRAY_SIZE                                              =             0x8088_u32
  E_TEXTURE_COORD_ARRAY_SIZE_EXT                                          =             0x8088_u32
  E_TEXTURE_COORD_ARRAY_TYPE                                              =             0x8089_u32
  E_TEXTURE_COORD_ARRAY_TYPE_EXT                                          =             0x8089_u32
  E_TEXTURE_COORD_ARRAY_STRIDE                                            =             0x808A_u32
  E_TEXTURE_COORD_ARRAY_STRIDE_EXT                                        =             0x808A_u32
  E_TEXTURE_COORD_ARRAY_COUNT_EXT                                         =             0x808B_u32
  E_EDGE_FLAG_ARRAY_STRIDE                                                =             0x808C_u32
  E_EDGE_FLAG_ARRAY_STRIDE_EXT                                            =             0x808C_u32
  E_EDGE_FLAG_ARRAY_COUNT_EXT                                             =             0x808D_u32
  E_VERTEX_ARRAY_POINTER                                                  =             0x808E_u32
  E_VERTEX_ARRAY_POINTER_EXT                                              =             0x808E_u32
  E_NORMAL_ARRAY_POINTER                                                  =             0x808F_u32
  E_NORMAL_ARRAY_POINTER_EXT                                              =             0x808F_u32
  E_COLOR_ARRAY_POINTER                                                   =             0x8090_u32
  E_COLOR_ARRAY_POINTER_EXT                                               =             0x8090_u32
  E_INDEX_ARRAY_POINTER                                                   =             0x8091_u32
  E_INDEX_ARRAY_POINTER_EXT                                               =             0x8091_u32
  E_TEXTURE_COORD_ARRAY_POINTER                                           =             0x8092_u32
  E_TEXTURE_COORD_ARRAY_POINTER_EXT                                       =             0x8092_u32
  E_EDGE_FLAG_ARRAY_POINTER                                               =             0x8093_u32
  E_EDGE_FLAG_ARRAY_POINTER_EXT                                           =             0x8093_u32
  E_INTERLACE_SGIX                                                        =             0x8094_u32
  E_DETAIL_TEXTURE_2D_SGIS                                                =             0x8095_u32
  E_DETAIL_TEXTURE_2D_BINDING_SGIS                                        =             0x8096_u32
  E_LINEAR_DETAIL_SGIS                                                    =             0x8097_u32
  E_LINEAR_DETAIL_ALPHA_SGIS                                              =             0x8098_u32
  E_LINEAR_DETAIL_COLOR_SGIS                                              =             0x8099_u32
  E_DETAIL_TEXTURE_LEVEL_SGIS                                             =             0x809A_u32
  E_DETAIL_TEXTURE_MODE_SGIS                                              =             0x809B_u32
  E_DETAIL_TEXTURE_FUNC_POINTS_SGIS                                       =             0x809C_u32
  E_MULTISAMPLE                                                           =             0x809D_u32
  E_MULTISAMPLE_ARB                                                       =             0x809D_u32
  E_MULTISAMPLE_EXT                                                       =             0x809D_u32
  E_MULTISAMPLE_SGIS                                                      =             0x809D_u32
  E_SAMPLE_ALPHA_TO_COVERAGE                                              =             0x809E_u32
  E_SAMPLE_ALPHA_TO_COVERAGE_ARB                                          =             0x809E_u32
  E_SAMPLE_ALPHA_TO_MASK_EXT                                              =             0x809E_u32
  E_SAMPLE_ALPHA_TO_MASK_SGIS                                             =             0x809E_u32
  E_SAMPLE_ALPHA_TO_ONE                                                   =             0x809F_u32
  E_SAMPLE_ALPHA_TO_ONE_ARB                                               =             0x809F_u32
  E_SAMPLE_ALPHA_TO_ONE_EXT                                               =             0x809F_u32
  E_SAMPLE_ALPHA_TO_ONE_SGIS                                              =             0x809F_u32
  E_SAMPLE_COVERAGE                                                       =             0x80A0_u32
  E_SAMPLE_COVERAGE_ARB                                                   =             0x80A0_u32
  E_SAMPLE_MASK_EXT                                                       =             0x80A0_u32
  E_SAMPLE_MASK_SGIS                                                      =             0x80A0_u32
  E_1PASS_EXT                                                             =             0x80A1_u32
  E_1PASS_SGIS                                                            =             0x80A1_u32
  E_2PASS_0_EXT                                                           =             0x80A2_u32
  E_2PASS_0_SGIS                                                          =             0x80A2_u32
  E_2PASS_1_EXT                                                           =             0x80A3_u32
  E_2PASS_1_SGIS                                                          =             0x80A3_u32
  E_4PASS_0_EXT                                                           =             0x80A4_u32
  E_4PASS_0_SGIS                                                          =             0x80A4_u32
  E_4PASS_1_EXT                                                           =             0x80A5_u32
  E_4PASS_1_SGIS                                                          =             0x80A5_u32
  E_4PASS_2_EXT                                                           =             0x80A6_u32
  E_4PASS_2_SGIS                                                          =             0x80A6_u32
  E_4PASS_3_EXT                                                           =             0x80A7_u32
  E_4PASS_3_SGIS                                                          =             0x80A7_u32
  E_SAMPLE_BUFFERS                                                        =             0x80A8_u32
  E_SAMPLE_BUFFERS_ARB                                                    =             0x80A8_u32
  E_SAMPLE_BUFFERS_EXT                                                    =             0x80A8_u32
  E_SAMPLE_BUFFERS_SGIS                                                   =             0x80A8_u32
  E_SAMPLES                                                               =             0x80A9_u32
  E_SAMPLES_ARB                                                           =             0x80A9_u32
  E_SAMPLES_EXT                                                           =             0x80A9_u32
  E_SAMPLES_SGIS                                                          =             0x80A9_u32
  E_SAMPLE_COVERAGE_VALUE                                                 =             0x80AA_u32
  E_SAMPLE_COVERAGE_VALUE_ARB                                             =             0x80AA_u32
  E_SAMPLE_MASK_VALUE_EXT                                                 =             0x80AA_u32
  E_SAMPLE_MASK_VALUE_SGIS                                                =             0x80AA_u32
  E_SAMPLE_COVERAGE_INVERT                                                =             0x80AB_u32
  E_SAMPLE_COVERAGE_INVERT_ARB                                            =             0x80AB_u32
  E_SAMPLE_MASK_INVERT_EXT                                                =             0x80AB_u32
  E_SAMPLE_MASK_INVERT_SGIS                                               =             0x80AB_u32
  E_SAMPLE_PATTERN_EXT                                                    =             0x80AC_u32
  E_SAMPLE_PATTERN_SGIS                                                   =             0x80AC_u32
  E_LINEAR_SHARPEN_SGIS                                                   =             0x80AD_u32
  E_LINEAR_SHARPEN_ALPHA_SGIS                                             =             0x80AE_u32
  E_LINEAR_SHARPEN_COLOR_SGIS                                             =             0x80AF_u32
  E_SHARPEN_TEXTURE_FUNC_POINTS_SGIS                                      =             0x80B0_u32
  E_COLOR_MATRIX                                                          =             0x80B1_u32
  E_COLOR_MATRIX_SGI                                                      =             0x80B1_u32
  E_COLOR_MATRIX_STACK_DEPTH                                              =             0x80B2_u32
  E_COLOR_MATRIX_STACK_DEPTH_SGI                                          =             0x80B2_u32
  E_MAX_COLOR_MATRIX_STACK_DEPTH                                          =             0x80B3_u32
  E_MAX_COLOR_MATRIX_STACK_DEPTH_SGI                                      =             0x80B3_u32
  E_POST_COLOR_MATRIX_RED_SCALE                                           =             0x80B4_u32
  E_POST_COLOR_MATRIX_RED_SCALE_SGI                                       =             0x80B4_u32
  E_POST_COLOR_MATRIX_GREEN_SCALE                                         =             0x80B5_u32
  E_POST_COLOR_MATRIX_GREEN_SCALE_SGI                                     =             0x80B5_u32
  E_POST_COLOR_MATRIX_BLUE_SCALE                                          =             0x80B6_u32
  E_POST_COLOR_MATRIX_BLUE_SCALE_SGI                                      =             0x80B6_u32
  E_POST_COLOR_MATRIX_ALPHA_SCALE                                         =             0x80B7_u32
  E_POST_COLOR_MATRIX_ALPHA_SCALE_SGI                                     =             0x80B7_u32
  E_POST_COLOR_MATRIX_RED_BIAS                                            =             0x80B8_u32
  E_POST_COLOR_MATRIX_RED_BIAS_SGI                                        =             0x80B8_u32
  E_POST_COLOR_MATRIX_GREEN_BIAS                                          =             0x80B9_u32
  E_POST_COLOR_MATRIX_GREEN_BIAS_SGI                                      =             0x80B9_u32
  E_POST_COLOR_MATRIX_BLUE_BIAS                                           =             0x80BA_u32
  E_POST_COLOR_MATRIX_BLUE_BIAS_SGI                                       =             0x80BA_u32
  E_POST_COLOR_MATRIX_ALPHA_BIAS                                          =             0x80BB_u32
  E_POST_COLOR_MATRIX_ALPHA_BIAS_SGI                                      =             0x80BB_u32
  E_TEXTURE_COLOR_TABLE_SGI                                               =             0x80BC_u32
  E_PROXY_TEXTURE_COLOR_TABLE_SGI                                         =             0x80BD_u32
  E_TEXTURE_ENV_BIAS_SGIX                                                 =             0x80BE_u32
  E_SHADOW_AMBIENT_SGIX                                                   =             0x80BF_u32
  E_TEXTURE_COMPARE_FAIL_VALUE_ARB                                        =             0x80BF_u32
  E_BLEND_DST_RGB                                                         =             0x80C8_u32
  E_BLEND_DST_RGB_EXT                                                     =             0x80C8_u32
  E_BLEND_DST_RGB_OES                                                     =             0x80C8_u32
  E_BLEND_SRC_RGB                                                         =             0x80C9_u32
  E_BLEND_SRC_RGB_EXT                                                     =             0x80C9_u32
  E_BLEND_SRC_RGB_OES                                                     =             0x80C9_u32
  E_BLEND_DST_ALPHA                                                       =             0x80CA_u32
  E_BLEND_DST_ALPHA_EXT                                                   =             0x80CA_u32
  E_BLEND_DST_ALPHA_OES                                                   =             0x80CA_u32
  E_BLEND_SRC_ALPHA                                                       =             0x80CB_u32
  E_BLEND_SRC_ALPHA_EXT                                                   =             0x80CB_u32
  E_BLEND_SRC_ALPHA_OES                                                   =             0x80CB_u32
  E_422_EXT                                                               =             0x80CC_u32
  E_422_REV_EXT                                                           =             0x80CD_u32
  E_422_AVERAGE_EXT                                                       =             0x80CE_u32
  E_422_REV_AVERAGE_EXT                                                   =             0x80CF_u32
  E_COLOR_TABLE                                                           =             0x80D0_u32
  E_COLOR_TABLE_SGI                                                       =             0x80D0_u32
  E_POST_CONVOLUTION_COLOR_TABLE                                          =             0x80D1_u32
  E_POST_CONVOLUTION_COLOR_TABLE_SGI                                      =             0x80D1_u32
  E_POST_COLOR_MATRIX_COLOR_TABLE                                         =             0x80D2_u32
  E_POST_COLOR_MATRIX_COLOR_TABLE_SGI                                     =             0x80D2_u32
  E_PROXY_COLOR_TABLE                                                     =             0x80D3_u32
  E_PROXY_COLOR_TABLE_SGI                                                 =             0x80D3_u32
  E_PROXY_POST_CONVOLUTION_COLOR_TABLE                                    =             0x80D4_u32
  E_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI                                =             0x80D4_u32
  E_PROXY_POST_COLOR_MATRIX_COLOR_TABLE                                   =             0x80D5_u32
  E_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI                               =             0x80D5_u32
  E_COLOR_TABLE_SCALE                                                     =             0x80D6_u32
  E_COLOR_TABLE_SCALE_SGI                                                 =             0x80D6_u32
  E_COLOR_TABLE_BIAS                                                      =             0x80D7_u32
  E_COLOR_TABLE_BIAS_SGI                                                  =             0x80D7_u32
  E_COLOR_TABLE_FORMAT                                                    =             0x80D8_u32
  E_COLOR_TABLE_FORMAT_SGI                                                =             0x80D8_u32
  E_COLOR_TABLE_WIDTH                                                     =             0x80D9_u32
  E_COLOR_TABLE_WIDTH_SGI                                                 =             0x80D9_u32
  E_COLOR_TABLE_RED_SIZE                                                  =             0x80DA_u32
  E_COLOR_TABLE_RED_SIZE_SGI                                              =             0x80DA_u32
  E_COLOR_TABLE_GREEN_SIZE                                                =             0x80DB_u32
  E_COLOR_TABLE_GREEN_SIZE_SGI                                            =             0x80DB_u32
  E_COLOR_TABLE_BLUE_SIZE                                                 =             0x80DC_u32
  E_COLOR_TABLE_BLUE_SIZE_SGI                                             =             0x80DC_u32
  E_COLOR_TABLE_ALPHA_SIZE                                                =             0x80DD_u32
  E_COLOR_TABLE_ALPHA_SIZE_SGI                                            =             0x80DD_u32
  E_COLOR_TABLE_LUMINANCE_SIZE                                            =             0x80DE_u32
  E_COLOR_TABLE_LUMINANCE_SIZE_SGI                                        =             0x80DE_u32
  E_COLOR_TABLE_INTENSITY_SIZE                                            =             0x80DF_u32
  E_COLOR_TABLE_INTENSITY_SIZE_SGI                                        =             0x80DF_u32
  E_BGR                                                                   =             0x80E0_u32
  E_BGR_EXT                                                               =             0x80E0_u32
  E_BGRA                                                                  =             0x80E1_u32
  E_BGRA_EXT                                                              =             0x80E1_u32
  E_BGRA_IMG                                                              =             0x80E1_u32
  E_COLOR_INDEX1_EXT                                                      =             0x80E2_u32
  E_COLOR_INDEX2_EXT                                                      =             0x80E3_u32
  E_COLOR_INDEX4_EXT                                                      =             0x80E4_u32
  E_COLOR_INDEX8_EXT                                                      =             0x80E5_u32
  E_COLOR_INDEX12_EXT                                                     =             0x80E6_u32
  E_COLOR_INDEX16_EXT                                                     =             0x80E7_u32
  E_MAX_ELEMENTS_VERTICES                                                 =             0x80E8_u32
  E_MAX_ELEMENTS_VERTICES_EXT                                             =             0x80E8_u32
  E_MAX_ELEMENTS_INDICES                                                  =             0x80E9_u32
  E_MAX_ELEMENTS_INDICES_EXT                                              =             0x80E9_u32
  E_PHONG_WIN                                                             =             0x80EA_u32
  E_PHONG_HINT_WIN                                                        =             0x80EB_u32
  E_FOG_SPECULAR_TEXTURE_WIN                                              =             0x80EC_u32
  E_TEXTURE_INDEX_SIZE_EXT                                                =             0x80ED_u32
  E_PARAMETER_BUFFER_ARB                                                  =             0x80EE_u32
  E_PARAMETER_BUFFER_BINDING_ARB                                          =             0x80EF_u32
  E_CLIP_VOLUME_CLIPPING_HINT_EXT                                         =             0x80F0_u32
  E_DUAL_ALPHA4_SGIS                                                      =             0x8110_u32
  E_DUAL_ALPHA8_SGIS                                                      =             0x8111_u32
  E_DUAL_ALPHA12_SGIS                                                     =             0x8112_u32
  E_DUAL_ALPHA16_SGIS                                                     =             0x8113_u32
  E_DUAL_LUMINANCE4_SGIS                                                  =             0x8114_u32
  E_DUAL_LUMINANCE8_SGIS                                                  =             0x8115_u32
  E_DUAL_LUMINANCE12_SGIS                                                 =             0x8116_u32
  E_DUAL_LUMINANCE16_SGIS                                                 =             0x8117_u32
  E_DUAL_INTENSITY4_SGIS                                                  =             0x8118_u32
  E_DUAL_INTENSITY8_SGIS                                                  =             0x8119_u32
  E_DUAL_INTENSITY12_SGIS                                                 =             0x811A_u32
  E_DUAL_INTENSITY16_SGIS                                                 =             0x811B_u32
  E_DUAL_LUMINANCE_ALPHA4_SGIS                                            =             0x811C_u32
  E_DUAL_LUMINANCE_ALPHA8_SGIS                                            =             0x811D_u32
  E_QUAD_ALPHA4_SGIS                                                      =             0x811E_u32
  E_QUAD_ALPHA8_SGIS                                                      =             0x811F_u32
  E_QUAD_LUMINANCE4_SGIS                                                  =             0x8120_u32
  E_QUAD_LUMINANCE8_SGIS                                                  =             0x8121_u32
  E_QUAD_INTENSITY4_SGIS                                                  =             0x8122_u32
  E_QUAD_INTENSITY8_SGIS                                                  =             0x8123_u32
  E_DUAL_TEXTURE_SELECT_SGIS                                              =             0x8124_u32
  E_QUAD_TEXTURE_SELECT_SGIS                                              =             0x8125_u32
  E_POINT_SIZE_MIN                                                        =             0x8126_u32
  E_POINT_SIZE_MIN_ARB                                                    =             0x8126_u32
  E_POINT_SIZE_MIN_EXT                                                    =             0x8126_u32
  E_POINT_SIZE_MIN_SGIS                                                   =             0x8126_u32
  E_POINT_SIZE_MAX                                                        =             0x8127_u32
  E_POINT_SIZE_MAX_ARB                                                    =             0x8127_u32
  E_POINT_SIZE_MAX_EXT                                                    =             0x8127_u32
  E_POINT_SIZE_MAX_SGIS                                                   =             0x8127_u32
  E_POINT_FADE_THRESHOLD_SIZE                                             =             0x8128_u32
  E_POINT_FADE_THRESHOLD_SIZE_ARB                                         =             0x8128_u32
  E_POINT_FADE_THRESHOLD_SIZE_EXT                                         =             0x8128_u32
  E_POINT_FADE_THRESHOLD_SIZE_SGIS                                        =             0x8128_u32
  E_DISTANCE_ATTENUATION_EXT                                              =             0x8129_u32
  E_DISTANCE_ATTENUATION_SGIS                                             =             0x8129_u32
  E_POINT_DISTANCE_ATTENUATION                                            =             0x8129_u32
  E_POINT_DISTANCE_ATTENUATION_ARB                                        =             0x8129_u32
  E_FOG_FUNC_SGIS                                                         =             0x812A_u32
  E_FOG_FUNC_POINTS_SGIS                                                  =             0x812B_u32
  E_MAX_FOG_FUNC_POINTS_SGIS                                              =             0x812C_u32
  E_CLAMP_TO_BORDER                                                       =             0x812D_u32
  E_CLAMP_TO_BORDER_ARB                                                   =             0x812D_u32
  E_CLAMP_TO_BORDER_EXT                                                   =             0x812D_u32
  E_CLAMP_TO_BORDER_NV                                                    =             0x812D_u32
  E_CLAMP_TO_BORDER_SGIS                                                  =             0x812D_u32
  E_CLAMP_TO_BORDER_OES                                                   =             0x812D_u32
  E_TEXTURE_MULTI_BUFFER_HINT_SGIX                                        =             0x812E_u32
  E_CLAMP_TO_EDGE                                                         =             0x812F_u32
  E_CLAMP_TO_EDGE_SGIS                                                    =             0x812F_u32
  E_PACK_SKIP_VOLUMES_SGIS                                                =             0x8130_u32
  E_PACK_IMAGE_DEPTH_SGIS                                                 =             0x8131_u32
  E_UNPACK_SKIP_VOLUMES_SGIS                                              =             0x8132_u32
  E_UNPACK_IMAGE_DEPTH_SGIS                                               =             0x8133_u32
  E_TEXTURE_4D_SGIS                                                       =             0x8134_u32
  E_PROXY_TEXTURE_4D_SGIS                                                 =             0x8135_u32
  E_TEXTURE_4DSIZE_SGIS                                                   =             0x8136_u32
  E_TEXTURE_WRAP_Q_SGIS                                                   =             0x8137_u32
  E_MAX_4D_TEXTURE_SIZE_SGIS                                              =             0x8138_u32
  E_PIXEL_TEX_GEN_SGIX                                                    =             0x8139_u32
  E_TEXTURE_MIN_LOD                                                       =             0x813A_u32
  E_TEXTURE_MIN_LOD_SGIS                                                  =             0x813A_u32
  E_TEXTURE_MAX_LOD                                                       =             0x813B_u32
  E_TEXTURE_MAX_LOD_SGIS                                                  =             0x813B_u32
  E_TEXTURE_BASE_LEVEL                                                    =             0x813C_u32
  E_TEXTURE_BASE_LEVEL_SGIS                                               =             0x813C_u32
  E_TEXTURE_MAX_LEVEL                                                     =             0x813D_u32
  E_TEXTURE_MAX_LEVEL_APPLE                                               =             0x813D_u32
  E_TEXTURE_MAX_LEVEL_SGIS                                                =             0x813D_u32
  E_PIXEL_TILE_BEST_ALIGNMENT_SGIX                                        =             0x813E_u32
  E_PIXEL_TILE_CACHE_INCREMENT_SGIX                                       =             0x813F_u32
  E_PIXEL_TILE_WIDTH_SGIX                                                 =             0x8140_u32
  E_PIXEL_TILE_HEIGHT_SGIX                                                =             0x8141_u32
  E_PIXEL_TILE_GRID_WIDTH_SGIX                                            =             0x8142_u32
  E_PIXEL_TILE_GRID_HEIGHT_SGIX                                           =             0x8143_u32
  E_PIXEL_TILE_GRID_DEPTH_SGIX                                            =             0x8144_u32
  E_PIXEL_TILE_CACHE_SIZE_SGIX                                            =             0x8145_u32
  E_FILTER4_SGIS                                                          =             0x8146_u32
  E_TEXTURE_FILTER4_SIZE_SGIS                                             =             0x8147_u32
  E_SPRITE_SGIX                                                           =             0x8148_u32
  E_SPRITE_MODE_SGIX                                                      =             0x8149_u32
  E_SPRITE_AXIS_SGIX                                                      =             0x814A_u32
  E_SPRITE_TRANSLATION_SGIX                                               =             0x814B_u32
  E_SPRITE_AXIAL_SGIX                                                     =             0x814C_u32
  E_SPRITE_OBJECT_ALIGNED_SGIX                                            =             0x814D_u32
  E_SPRITE_EYE_ALIGNED_SGIX                                               =             0x814E_u32
  E_TEXTURE_4D_BINDING_SGIS                                               =             0x814F_u32
  E_IGNORE_BORDER_HP                                                      =             0x8150_u32
  E_CONSTANT_BORDER                                                       =             0x8151_u32
  E_CONSTANT_BORDER_HP                                                    =             0x8151_u32
  E_REPLICATE_BORDER                                                      =             0x8153_u32
  E_REPLICATE_BORDER_HP                                                   =             0x8153_u32
  E_CONVOLUTION_BORDER_COLOR                                              =             0x8154_u32
  E_CONVOLUTION_BORDER_COLOR_HP                                           =             0x8154_u32
  E_IMAGE_SCALE_X_HP                                                      =             0x8155_u32
  E_IMAGE_SCALE_Y_HP                                                      =             0x8156_u32
  E_IMAGE_TRANSLATE_X_HP                                                  =             0x8157_u32
  E_IMAGE_TRANSLATE_Y_HP                                                  =             0x8158_u32
  E_IMAGE_ROTATE_ANGLE_HP                                                 =             0x8159_u32
  E_IMAGE_ROTATE_ORIGIN_X_HP                                              =             0x815A_u32
  E_IMAGE_ROTATE_ORIGIN_Y_HP                                              =             0x815B_u32
  E_IMAGE_MAG_FILTER_HP                                                   =             0x815C_u32
  E_IMAGE_MIN_FILTER_HP                                                   =             0x815D_u32
  E_IMAGE_CUBIC_WEIGHT_HP                                                 =             0x815E_u32
  E_CUBIC_HP                                                              =             0x815F_u32
  E_AVERAGE_HP                                                            =             0x8160_u32
  E_IMAGE_TRANSFORM_2D_HP                                                 =             0x8161_u32
  E_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP                                   =             0x8162_u32
  E_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP                             =             0x8163_u32
  E_OCCLUSION_TEST_HP                                                     =             0x8165_u32
  E_OCCLUSION_TEST_RESULT_HP                                              =             0x8166_u32
  E_TEXTURE_LIGHTING_MODE_HP                                              =             0x8167_u32
  E_TEXTURE_POST_SPECULAR_HP                                              =             0x8168_u32
  E_TEXTURE_PRE_SPECULAR_HP                                               =             0x8169_u32
  E_LINEAR_CLIPMAP_LINEAR_SGIX                                            =             0x8170_u32
  E_TEXTURE_CLIPMAP_CENTER_SGIX                                           =             0x8171_u32
  E_TEXTURE_CLIPMAP_FRAME_SGIX                                            =             0x8172_u32
  E_TEXTURE_CLIPMAP_OFFSET_SGIX                                           =             0x8173_u32
  E_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX                                    =             0x8174_u32
  E_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX                                       =             0x8175_u32
  E_TEXTURE_CLIPMAP_DEPTH_SGIX                                            =             0x8176_u32
  E_MAX_CLIPMAP_DEPTH_SGIX                                                =             0x8177_u32
  E_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX                                        =             0x8178_u32
  E_POST_TEXTURE_FILTER_BIAS_SGIX                                         =             0x8179_u32
  E_POST_TEXTURE_FILTER_SCALE_SGIX                                        =             0x817A_u32
  E_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX                                   =             0x817B_u32
  E_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX                                  =             0x817C_u32
  E_REFERENCE_PLANE_SGIX                                                  =             0x817D_u32
  E_REFERENCE_PLANE_EQUATION_SGIX                                         =             0x817E_u32
  E_IR_INSTRUMENT1_SGIX                                                   =             0x817F_u32
  E_INSTRUMENT_BUFFER_POINTER_SGIX                                        =             0x8180_u32
  E_INSTRUMENT_MEASUREMENTS_SGIX                                          =             0x8181_u32
  E_LIST_PRIORITY_SGIX                                                    =             0x8182_u32
  E_CALLIGRAPHIC_FRAGMENT_SGIX                                            =             0x8183_u32
  E_PIXEL_TEX_GEN_Q_CEILING_SGIX                                          =             0x8184_u32
  E_PIXEL_TEX_GEN_Q_ROUND_SGIX                                            =             0x8185_u32
  E_PIXEL_TEX_GEN_Q_FLOOR_SGIX                                            =             0x8186_u32
  E_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX                                      =             0x8187_u32
  E_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX                                   =             0x8188_u32
  E_PIXEL_TEX_GEN_ALPHA_LS_SGIX                                           =             0x8189_u32
  E_PIXEL_TEX_GEN_ALPHA_MS_SGIX                                           =             0x818A_u32
  E_FRAMEZOOM_SGIX                                                        =             0x818B_u32
  E_FRAMEZOOM_FACTOR_SGIX                                                 =             0x818C_u32
  E_MAX_FRAMEZOOM_FACTOR_SGIX                                             =             0x818D_u32
  E_TEXTURE_LOD_BIAS_S_SGIX                                               =             0x818E_u32
  E_TEXTURE_LOD_BIAS_T_SGIX                                               =             0x818F_u32
  E_TEXTURE_LOD_BIAS_R_SGIX                                               =             0x8190_u32
  E_GENERATE_MIPMAP                                                       =             0x8191_u32
  E_GENERATE_MIPMAP_SGIS                                                  =             0x8191_u32
  E_GENERATE_MIPMAP_HINT                                                  =             0x8192_u32
  E_GENERATE_MIPMAP_HINT_SGIS                                             =             0x8192_u32
  E_GEOMETRY_DEFORMATION_SGIX                                             =             0x8194_u32
  E_TEXTURE_DEFORMATION_SGIX                                              =             0x8195_u32
  E_DEFORMATIONS_MASK_SGIX                                                =             0x8196_u32
  E_MAX_DEFORMATION_ORDER_SGIX                                            =             0x8197_u32
  E_FOG_OFFSET_SGIX                                                       =             0x8198_u32
  E_FOG_OFFSET_VALUE_SGIX                                                 =             0x8199_u32
  E_TEXTURE_COMPARE_SGIX                                                  =             0x819A_u32
  E_TEXTURE_COMPARE_OPERATOR_SGIX                                         =             0x819B_u32
  E_TEXTURE_LEQUAL_R_SGIX                                                 =             0x819C_u32
  E_TEXTURE_GEQUAL_R_SGIX                                                 =             0x819D_u32
  E_DEPTH_COMPONENT16                                                     =             0x81A5_u32
  E_DEPTH_COMPONENT16_ARB                                                 =             0x81A5_u32
  E_DEPTH_COMPONENT16_OES                                                 =             0x81A5_u32
  E_DEPTH_COMPONENT16_SGIX                                                =             0x81A5_u32
  E_DEPTH_COMPONENT24                                                     =             0x81A6_u32
  E_DEPTH_COMPONENT24_ARB                                                 =             0x81A6_u32
  E_DEPTH_COMPONENT24_OES                                                 =             0x81A6_u32
  E_DEPTH_COMPONENT24_SGIX                                                =             0x81A6_u32
  E_DEPTH_COMPONENT32                                                     =             0x81A7_u32
  E_DEPTH_COMPONENT32_ARB                                                 =             0x81A7_u32
  E_DEPTH_COMPONENT32_OES                                                 =             0x81A7_u32
  E_DEPTH_COMPONENT32_SGIX                                                =             0x81A7_u32
  E_ARRAY_ELEMENT_LOCK_FIRST_EXT                                          =             0x81A8_u32
  E_ARRAY_ELEMENT_LOCK_COUNT_EXT                                          =             0x81A9_u32
  E_CULL_VERTEX_EXT                                                       =             0x81AA_u32
  E_CULL_VERTEX_EYE_POSITION_EXT                                          =             0x81AB_u32
  E_CULL_VERTEX_OBJECT_POSITION_EXT                                       =             0x81AC_u32
  E_IUI_V2F_EXT                                                           =             0x81AD_u32
  E_IUI_V3F_EXT                                                           =             0x81AE_u32
  E_IUI_N3F_V2F_EXT                                                       =             0x81AF_u32
  E_IUI_N3F_V3F_EXT                                                       =             0x81B0_u32
  E_T2F_IUI_V2F_EXT                                                       =             0x81B1_u32
  E_T2F_IUI_V3F_EXT                                                       =             0x81B2_u32
  E_T2F_IUI_N3F_V2F_EXT                                                   =             0x81B3_u32
  E_T2F_IUI_N3F_V3F_EXT                                                   =             0x81B4_u32
  E_INDEX_TEST_EXT                                                        =             0x81B5_u32
  E_INDEX_TEST_FUNC_EXT                                                   =             0x81B6_u32
  E_INDEX_TEST_REF_EXT                                                    =             0x81B7_u32
  E_INDEX_MATERIAL_EXT                                                    =             0x81B8_u32
  E_INDEX_MATERIAL_PARAMETER_EXT                                          =             0x81B9_u32
  E_INDEX_MATERIAL_FACE_EXT                                               =             0x81BA_u32
  E_YCRCB_422_SGIX                                                        =             0x81BB_u32
  E_YCRCB_444_SGIX                                                        =             0x81BC_u32
  E_WRAP_BORDER_SUN                                                       =             0x81D4_u32
  E_UNPACK_CONSTANT_DATA_SUNX                                             =             0x81D5_u32
  E_TEXTURE_CONSTANT_DATA_SUNX                                            =             0x81D6_u32
  E_TRIANGLE_LIST_SUN                                                     =             0x81D7_u32
  E_REPLACEMENT_CODE_SUN                                                  =             0x81D8_u32
  E_GLOBAL_ALPHA_SUN                                                      =             0x81D9_u32
  E_GLOBAL_ALPHA_FACTOR_SUN                                               =             0x81DA_u32
  E_TEXTURE_COLOR_WRITEMASK_SGIS                                          =             0x81EF_u32
  E_EYE_DISTANCE_TO_POINT_SGIS                                            =             0x81F0_u32
  E_OBJECT_DISTANCE_TO_POINT_SGIS                                         =             0x81F1_u32
  E_EYE_DISTANCE_TO_LINE_SGIS                                             =             0x81F2_u32
  E_OBJECT_DISTANCE_TO_LINE_SGIS                                          =             0x81F3_u32
  E_EYE_POINT_SGIS                                                        =             0x81F4_u32
  E_OBJECT_POINT_SGIS                                                     =             0x81F5_u32
  E_EYE_LINE_SGIS                                                         =             0x81F6_u32
  E_OBJECT_LINE_SGIS                                                      =             0x81F7_u32
  E_LIGHT_MODEL_COLOR_CONTROL                                             =             0x81F8_u32
  E_LIGHT_MODEL_COLOR_CONTROL_EXT                                         =             0x81F8_u32
  E_SINGLE_COLOR                                                          =             0x81F9_u32
  E_SINGLE_COLOR_EXT                                                      =             0x81F9_u32
  E_SEPARATE_SPECULAR_COLOR                                               =             0x81FA_u32
  E_SEPARATE_SPECULAR_COLOR_EXT                                           =             0x81FA_u32
  E_SHARED_TEXTURE_PALETTE_EXT                                            =             0x81FB_u32
  E_TEXT_FRAGMENT_SHADER_ATI                                              =             0x8200_u32
  E_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING                                 =             0x8210_u32
  E_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT                             =             0x8210_u32
  E_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE                                 =             0x8211_u32
  E_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT                             =             0x8211_u32
  E_FRAMEBUFFER_ATTACHMENT_RED_SIZE                                       =             0x8212_u32
  E_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE                                     =             0x8213_u32
  E_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE                                      =             0x8214_u32
  E_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE                                     =             0x8215_u32
  E_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE                                     =             0x8216_u32
  E_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE                                   =             0x8217_u32
  E_FRAMEBUFFER_DEFAULT                                                   =             0x8218_u32
  E_FRAMEBUFFER_UNDEFINED                                                 =             0x8219_u32
  E_FRAMEBUFFER_UNDEFINED_OES                                             =             0x8219_u32
  E_DEPTH_STENCIL_ATTACHMENT                                              =             0x821A_u32
  E_MAJOR_VERSION                                                         =             0x821B_u32
  E_MINOR_VERSION                                                         =             0x821C_u32
  E_NUM_EXTENSIONS                                                        =             0x821D_u32
  E_CONTEXT_FLAGS                                                         =             0x821E_u32
  E_BUFFER_IMMUTABLE_STORAGE                                              =             0x821F_u32
  E_BUFFER_IMMUTABLE_STORAGE_EXT                                          =             0x821F_u32
  E_BUFFER_STORAGE_FLAGS                                                  =             0x8220_u32
  E_BUFFER_STORAGE_FLAGS_EXT                                              =             0x8220_u32
  E_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED                               =             0x8221_u32
  E_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES                           =             0x8221_u32
  E_INDEX                                                                 =             0x8222_u32
  E_COMPRESSED_RED                                                        =             0x8225_u32
  E_COMPRESSED_RG                                                         =             0x8226_u32
  E_RG                                                                    =             0x8227_u32
  E_RG_EXT                                                                =             0x8227_u32
  E_RG_INTEGER                                                            =             0x8228_u32
  E_R8                                                                    =             0x8229_u32
  E_R8_EXT                                                                =             0x8229_u32
  E_R16                                                                   =             0x822A_u32
  E_R16_EXT                                                               =             0x822A_u32
  E_RG8                                                                   =             0x822B_u32
  E_RG8_EXT                                                               =             0x822B_u32
  E_RG16                                                                  =             0x822C_u32
  E_RG16_EXT                                                              =             0x822C_u32
  E_R16F                                                                  =             0x822D_u32
  E_R16F_EXT                                                              =             0x822D_u32
  E_R32F                                                                  =             0x822E_u32
  E_R32F_EXT                                                              =             0x822E_u32
  E_RG16F                                                                 =             0x822F_u32
  E_RG16F_EXT                                                             =             0x822F_u32
  E_RG32F                                                                 =             0x8230_u32
  E_RG32F_EXT                                                             =             0x8230_u32
  E_R8I                                                                   =             0x8231_u32
  E_R8UI                                                                  =             0x8232_u32
  E_R16I                                                                  =             0x8233_u32
  E_R16UI                                                                 =             0x8234_u32
  E_R32I                                                                  =             0x8235_u32
  E_R32UI                                                                 =             0x8236_u32
  E_RG8I                                                                  =             0x8237_u32
  E_RG8UI                                                                 =             0x8238_u32
  E_RG16I                                                                 =             0x8239_u32
  E_RG16UI                                                                =             0x823A_u32
  E_RG32I                                                                 =             0x823B_u32
  E_RG32UI                                                                =             0x823C_u32
  E_SYNC_CL_EVENT_ARB                                                     =             0x8240_u32
  E_SYNC_CL_EVENT_COMPLETE_ARB                                            =             0x8241_u32
  E_DEBUG_OUTPUT_SYNCHRONOUS                                              =             0x8242_u32
  E_DEBUG_OUTPUT_SYNCHRONOUS_ARB                                          =             0x8242_u32
  E_DEBUG_OUTPUT_SYNCHRONOUS_KHR                                          =             0x8242_u32
  E_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH                                      =             0x8243_u32
  E_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB                                  =             0x8243_u32
  E_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR                                  =             0x8243_u32
  E_DEBUG_CALLBACK_FUNCTION                                               =             0x8244_u32
  E_DEBUG_CALLBACK_FUNCTION_ARB                                           =             0x8244_u32
  E_DEBUG_CALLBACK_FUNCTION_KHR                                           =             0x8244_u32
  E_DEBUG_CALLBACK_USER_PARAM                                             =             0x8245_u32
  E_DEBUG_CALLBACK_USER_PARAM_ARB                                         =             0x8245_u32
  E_DEBUG_CALLBACK_USER_PARAM_KHR                                         =             0x8245_u32
  E_DEBUG_SOURCE_API                                                      =             0x8246_u32
  E_DEBUG_SOURCE_API_ARB                                                  =             0x8246_u32
  E_DEBUG_SOURCE_API_KHR                                                  =             0x8246_u32
  E_DEBUG_SOURCE_WINDOW_SYSTEM                                            =             0x8247_u32
  E_DEBUG_SOURCE_WINDOW_SYSTEM_ARB                                        =             0x8247_u32
  E_DEBUG_SOURCE_WINDOW_SYSTEM_KHR                                        =             0x8247_u32
  E_DEBUG_SOURCE_SHADER_COMPILER                                          =             0x8248_u32
  E_DEBUG_SOURCE_SHADER_COMPILER_ARB                                      =             0x8248_u32
  E_DEBUG_SOURCE_SHADER_COMPILER_KHR                                      =             0x8248_u32
  E_DEBUG_SOURCE_THIRD_PARTY                                              =             0x8249_u32
  E_DEBUG_SOURCE_THIRD_PARTY_ARB                                          =             0x8249_u32
  E_DEBUG_SOURCE_THIRD_PARTY_KHR                                          =             0x8249_u32
  E_DEBUG_SOURCE_APPLICATION                                              =             0x824A_u32
  E_DEBUG_SOURCE_APPLICATION_ARB                                          =             0x824A_u32
  E_DEBUG_SOURCE_APPLICATION_KHR                                          =             0x824A_u32
  E_DEBUG_SOURCE_OTHER                                                    =             0x824B_u32
  E_DEBUG_SOURCE_OTHER_ARB                                                =             0x824B_u32
  E_DEBUG_SOURCE_OTHER_KHR                                                =             0x824B_u32
  E_DEBUG_TYPE_ERROR                                                      =             0x824C_u32
  E_DEBUG_TYPE_ERROR_ARB                                                  =             0x824C_u32
  E_DEBUG_TYPE_ERROR_KHR                                                  =             0x824C_u32
  E_DEBUG_TYPE_DEPRECATED_BEHAVIOR                                        =             0x824D_u32
  E_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB                                    =             0x824D_u32
  E_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR                                    =             0x824D_u32
  E_DEBUG_TYPE_UNDEFINED_BEHAVIOR                                         =             0x824E_u32
  E_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB                                     =             0x824E_u32
  E_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR                                     =             0x824E_u32
  E_DEBUG_TYPE_PORTABILITY                                                =             0x824F_u32
  E_DEBUG_TYPE_PORTABILITY_ARB                                            =             0x824F_u32
  E_DEBUG_TYPE_PORTABILITY_KHR                                            =             0x824F_u32
  E_DEBUG_TYPE_PERFORMANCE                                                =             0x8250_u32
  E_DEBUG_TYPE_PERFORMANCE_ARB                                            =             0x8250_u32
  E_DEBUG_TYPE_PERFORMANCE_KHR                                            =             0x8250_u32
  E_DEBUG_TYPE_OTHER                                                      =             0x8251_u32
  E_DEBUG_TYPE_OTHER_ARB                                                  =             0x8251_u32
  E_DEBUG_TYPE_OTHER_KHR                                                  =             0x8251_u32
  E_LOSE_CONTEXT_ON_RESET                                                 =             0x8252_u32
  E_LOSE_CONTEXT_ON_RESET_ARB                                             =             0x8252_u32
  E_LOSE_CONTEXT_ON_RESET_EXT                                             =             0x8252_u32
  E_LOSE_CONTEXT_ON_RESET_KHR                                             =             0x8252_u32
  E_GUILTY_CONTEXT_RESET                                                  =             0x8253_u32
  E_GUILTY_CONTEXT_RESET_ARB                                              =             0x8253_u32
  E_GUILTY_CONTEXT_RESET_EXT                                              =             0x8253_u32
  E_GUILTY_CONTEXT_RESET_KHR                                              =             0x8253_u32
  E_INNOCENT_CONTEXT_RESET                                                =             0x8254_u32
  E_INNOCENT_CONTEXT_RESET_ARB                                            =             0x8254_u32
  E_INNOCENT_CONTEXT_RESET_EXT                                            =             0x8254_u32
  E_INNOCENT_CONTEXT_RESET_KHR                                            =             0x8254_u32
  E_UNKNOWN_CONTEXT_RESET                                                 =             0x8255_u32
  E_UNKNOWN_CONTEXT_RESET_ARB                                             =             0x8255_u32
  E_UNKNOWN_CONTEXT_RESET_EXT                                             =             0x8255_u32
  E_UNKNOWN_CONTEXT_RESET_KHR                                             =             0x8255_u32
  E_RESET_NOTIFICATION_STRATEGY                                           =             0x8256_u32
  E_RESET_NOTIFICATION_STRATEGY_ARB                                       =             0x8256_u32
  E_RESET_NOTIFICATION_STRATEGY_EXT                                       =             0x8256_u32
  E_RESET_NOTIFICATION_STRATEGY_KHR                                       =             0x8256_u32
  E_PROGRAM_BINARY_RETRIEVABLE_HINT                                       =             0x8257_u32
  E_PROGRAM_SEPARABLE                                                     =             0x8258_u32
  E_PROGRAM_SEPARABLE_EXT                                                 =             0x8258_u32
  E_ACTIVE_PROGRAM                                                        =             0x8259_u32
  E_PROGRAM_PIPELINE_BINDING                                              =             0x825A_u32
  E_PROGRAM_PIPELINE_BINDING_EXT                                          =             0x825A_u32
  E_MAX_VIEWPORTS                                                         =             0x825B_u32
  E_MAX_VIEWPORTS_NV                                                      =             0x825B_u32
  E_MAX_VIEWPORTS_OES                                                     =             0x825B_u32
  E_VIEWPORT_SUBPIXEL_BITS                                                =             0x825C_u32
  E_VIEWPORT_SUBPIXEL_BITS_EXT                                            =             0x825C_u32
  E_VIEWPORT_SUBPIXEL_BITS_NV                                             =             0x825C_u32
  E_VIEWPORT_SUBPIXEL_BITS_OES                                            =             0x825C_u32
  E_VIEWPORT_BOUNDS_RANGE                                                 =             0x825D_u32
  E_VIEWPORT_BOUNDS_RANGE_EXT                                             =             0x825D_u32
  E_VIEWPORT_BOUNDS_RANGE_NV                                              =             0x825D_u32
  E_VIEWPORT_BOUNDS_RANGE_OES                                             =             0x825D_u32
  E_LAYER_PROVOKING_VERTEX                                                =             0x825E_u32
  E_LAYER_PROVOKING_VERTEX_EXT                                            =             0x825E_u32
  E_LAYER_PROVOKING_VERTEX_OES                                            =             0x825E_u32
  E_VIEWPORT_INDEX_PROVOKING_VERTEX                                       =             0x825F_u32
  E_VIEWPORT_INDEX_PROVOKING_VERTEX_EXT                                   =             0x825F_u32
  E_VIEWPORT_INDEX_PROVOKING_VERTEX_NV                                    =             0x825F_u32
  E_VIEWPORT_INDEX_PROVOKING_VERTEX_OES                                   =             0x825F_u32
  E_UNDEFINED_VERTEX                                                      =             0x8260_u32
  E_UNDEFINED_VERTEX_EXT                                                  =             0x8260_u32
  E_UNDEFINED_VERTEX_OES                                                  =             0x8260_u32
  E_NO_RESET_NOTIFICATION                                                 =             0x8261_u32
  E_NO_RESET_NOTIFICATION_ARB                                             =             0x8261_u32
  E_NO_RESET_NOTIFICATION_EXT                                             =             0x8261_u32
  E_NO_RESET_NOTIFICATION_KHR                                             =             0x8261_u32
  E_MAX_COMPUTE_SHARED_MEMORY_SIZE                                        =             0x8262_u32
  E_MAX_COMPUTE_UNIFORM_COMPONENTS                                        =             0x8263_u32
  E_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS                                    =             0x8264_u32
  E_MAX_COMPUTE_ATOMIC_COUNTERS                                           =             0x8265_u32
  E_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS                               =             0x8266_u32
  E_COMPUTE_WORK_GROUP_SIZE                                               =             0x8267_u32
  E_DEBUG_TYPE_MARKER                                                     =             0x8268_u32
  E_DEBUG_TYPE_MARKER_KHR                                                 =             0x8268_u32
  E_DEBUG_TYPE_PUSH_GROUP                                                 =             0x8269_u32
  E_DEBUG_TYPE_PUSH_GROUP_KHR                                             =             0x8269_u32
  E_DEBUG_TYPE_POP_GROUP                                                  =             0x826A_u32
  E_DEBUG_TYPE_POP_GROUP_KHR                                              =             0x826A_u32
  E_DEBUG_SEVERITY_NOTIFICATION                                           =             0x826B_u32
  E_DEBUG_SEVERITY_NOTIFICATION_KHR                                       =             0x826B_u32
  E_MAX_DEBUG_GROUP_STACK_DEPTH                                           =             0x826C_u32
  E_MAX_DEBUG_GROUP_STACK_DEPTH_KHR                                       =             0x826C_u32
  E_DEBUG_GROUP_STACK_DEPTH                                               =             0x826D_u32
  E_DEBUG_GROUP_STACK_DEPTH_KHR                                           =             0x826D_u32
  E_MAX_UNIFORM_LOCATIONS                                                 =             0x826E_u32
  E_INTERNALFORMAT_SUPPORTED                                              =             0x826F_u32
  E_INTERNALFORMAT_PREFERRED                                              =             0x8270_u32
  E_INTERNALFORMAT_RED_SIZE                                               =             0x8271_u32
  E_INTERNALFORMAT_GREEN_SIZE                                             =             0x8272_u32
  E_INTERNALFORMAT_BLUE_SIZE                                              =             0x8273_u32
  E_INTERNALFORMAT_ALPHA_SIZE                                             =             0x8274_u32
  E_INTERNALFORMAT_DEPTH_SIZE                                             =             0x8275_u32
  E_INTERNALFORMAT_STENCIL_SIZE                                           =             0x8276_u32
  E_INTERNALFORMAT_SHARED_SIZE                                            =             0x8277_u32
  E_INTERNALFORMAT_RED_TYPE                                               =             0x8278_u32
  E_INTERNALFORMAT_GREEN_TYPE                                             =             0x8279_u32
  E_INTERNALFORMAT_BLUE_TYPE                                              =             0x827A_u32
  E_INTERNALFORMAT_ALPHA_TYPE                                             =             0x827B_u32
  E_INTERNALFORMAT_DEPTH_TYPE                                             =             0x827C_u32
  E_INTERNALFORMAT_STENCIL_TYPE                                           =             0x827D_u32
  E_MAX_WIDTH                                                             =             0x827E_u32
  E_MAX_HEIGHT                                                            =             0x827F_u32
  E_MAX_DEPTH                                                             =             0x8280_u32
  E_MAX_LAYERS                                                            =             0x8281_u32
  E_MAX_COMBINED_DIMENSIONS                                               =             0x8282_u32
  E_COLOR_COMPONENTS                                                      =             0x8283_u32
  E_DEPTH_COMPONENTS                                                      =             0x8284_u32
  E_STENCIL_COMPONENTS                                                    =             0x8285_u32
  E_COLOR_RENDERABLE                                                      =             0x8286_u32
  E_DEPTH_RENDERABLE                                                      =             0x8287_u32
  E_STENCIL_RENDERABLE                                                    =             0x8288_u32
  E_FRAMEBUFFER_RENDERABLE                                                =             0x8289_u32
  E_FRAMEBUFFER_RENDERABLE_LAYERED                                        =             0x828A_u32
  E_FRAMEBUFFER_BLEND                                                     =             0x828B_u32
  E_READ_PIXELS                                                           =             0x828C_u32
  E_READ_PIXELS_FORMAT                                                    =             0x828D_u32
  E_READ_PIXELS_TYPE                                                      =             0x828E_u32
  E_TEXTURE_IMAGE_FORMAT                                                  =             0x828F_u32
  E_TEXTURE_IMAGE_TYPE                                                    =             0x8290_u32
  E_GET_TEXTURE_IMAGE_FORMAT                                              =             0x8291_u32
  E_GET_TEXTURE_IMAGE_TYPE                                                =             0x8292_u32
  E_MIPMAP                                                                =             0x8293_u32
  E_MANUAL_GENERATE_MIPMAP                                                =             0x8294_u32
  E_AUTO_GENERATE_MIPMAP                                                  =             0x8295_u32
  E_COLOR_ENCODING                                                        =             0x8296_u32
  E_SRGB_READ                                                             =             0x8297_u32
  E_SRGB_WRITE                                                            =             0x8298_u32
  E_SRGB_DECODE_ARB                                                       =             0x8299_u32
  E_FILTER                                                                =             0x829A_u32
  E_VERTEX_TEXTURE                                                        =             0x829B_u32
  E_TESS_CONTROL_TEXTURE                                                  =             0x829C_u32
  E_TESS_EVALUATION_TEXTURE                                               =             0x829D_u32
  E_GEOMETRY_TEXTURE                                                      =             0x829E_u32
  E_FRAGMENT_TEXTURE                                                      =             0x829F_u32
  E_COMPUTE_TEXTURE                                                       =             0x82A0_u32
  E_TEXTURE_SHADOW                                                        =             0x82A1_u32
  E_TEXTURE_GATHER                                                        =             0x82A2_u32
  E_TEXTURE_GATHER_SHADOW                                                 =             0x82A3_u32
  E_SHADER_IMAGE_LOAD                                                     =             0x82A4_u32
  E_SHADER_IMAGE_STORE                                                    =             0x82A5_u32
  E_SHADER_IMAGE_ATOMIC                                                   =             0x82A6_u32
  E_IMAGE_TEXEL_SIZE                                                      =             0x82A7_u32
  E_IMAGE_COMPATIBILITY_CLASS                                             =             0x82A8_u32
  E_IMAGE_PIXEL_FORMAT                                                    =             0x82A9_u32
  E_IMAGE_PIXEL_TYPE                                                      =             0x82AA_u32
  E_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST                                   =             0x82AC_u32
  E_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST                                 =             0x82AD_u32
  E_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE                                  =             0x82AE_u32
  E_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE                                =             0x82AF_u32
  E_TEXTURE_COMPRESSED_BLOCK_WIDTH                                        =             0x82B1_u32
  E_TEXTURE_COMPRESSED_BLOCK_HEIGHT                                       =             0x82B2_u32
  E_TEXTURE_COMPRESSED_BLOCK_SIZE                                         =             0x82B3_u32
  E_CLEAR_BUFFER                                                          =             0x82B4_u32
  E_TEXTURE_VIEW                                                          =             0x82B5_u32
  E_VIEW_COMPATIBILITY_CLASS                                              =             0x82B6_u32
  E_FULL_SUPPORT                                                          =             0x82B7_u32
  E_CAVEAT_SUPPORT                                                        =             0x82B8_u32
  E_IMAGE_CLASS_4_X_32                                                    =             0x82B9_u32
  E_IMAGE_CLASS_2_X_32                                                    =             0x82BA_u32
  E_IMAGE_CLASS_1_X_32                                                    =             0x82BB_u32
  E_IMAGE_CLASS_4_X_16                                                    =             0x82BC_u32
  E_IMAGE_CLASS_2_X_16                                                    =             0x82BD_u32
  E_IMAGE_CLASS_1_X_16                                                    =             0x82BE_u32
  E_IMAGE_CLASS_4_X_8                                                     =             0x82BF_u32
  E_IMAGE_CLASS_2_X_8                                                     =             0x82C0_u32
  E_IMAGE_CLASS_1_X_8                                                     =             0x82C1_u32
  E_IMAGE_CLASS_11_11_10                                                  =             0x82C2_u32
  E_IMAGE_CLASS_10_10_10_2                                                =             0x82C3_u32
  E_VIEW_CLASS_128_BITS                                                   =             0x82C4_u32
  E_VIEW_CLASS_96_BITS                                                    =             0x82C5_u32
  E_VIEW_CLASS_64_BITS                                                    =             0x82C6_u32
  E_VIEW_CLASS_48_BITS                                                    =             0x82C7_u32
  E_VIEW_CLASS_32_BITS                                                    =             0x82C8_u32
  E_VIEW_CLASS_24_BITS                                                    =             0x82C9_u32
  E_VIEW_CLASS_16_BITS                                                    =             0x82CA_u32
  E_VIEW_CLASS_8_BITS                                                     =             0x82CB_u32
  E_VIEW_CLASS_S3TC_DXT1_RGB                                              =             0x82CC_u32
  E_VIEW_CLASS_S3TC_DXT1_RGBA                                             =             0x82CD_u32
  E_VIEW_CLASS_S3TC_DXT3_RGBA                                             =             0x82CE_u32
  E_VIEW_CLASS_S3TC_DXT5_RGBA                                             =             0x82CF_u32
  E_VIEW_CLASS_RGTC1_RED                                                  =             0x82D0_u32
  E_VIEW_CLASS_RGTC2_RG                                                   =             0x82D1_u32
  E_VIEW_CLASS_BPTC_UNORM                                                 =             0x82D2_u32
  E_VIEW_CLASS_BPTC_FLOAT                                                 =             0x82D3_u32
  E_VERTEX_ATTRIB_BINDING                                                 =             0x82D4_u32
  E_VERTEX_ATTRIB_RELATIVE_OFFSET                                         =             0x82D5_u32
  E_VERTEX_BINDING_DIVISOR                                                =             0x82D6_u32
  E_VERTEX_BINDING_OFFSET                                                 =             0x82D7_u32
  E_VERTEX_BINDING_STRIDE                                                 =             0x82D8_u32
  E_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET                                     =             0x82D9_u32
  E_MAX_VERTEX_ATTRIB_BINDINGS                                            =             0x82DA_u32
  E_TEXTURE_VIEW_MIN_LEVEL                                                =             0x82DB_u32
  E_TEXTURE_VIEW_MIN_LEVEL_EXT                                            =             0x82DB_u32
  E_TEXTURE_VIEW_MIN_LEVEL_OES                                            =             0x82DB_u32
  E_TEXTURE_VIEW_NUM_LEVELS                                               =             0x82DC_u32
  E_TEXTURE_VIEW_NUM_LEVELS_EXT                                           =             0x82DC_u32
  E_TEXTURE_VIEW_NUM_LEVELS_OES                                           =             0x82DC_u32
  E_TEXTURE_VIEW_MIN_LAYER                                                =             0x82DD_u32
  E_TEXTURE_VIEW_MIN_LAYER_EXT                                            =             0x82DD_u32
  E_TEXTURE_VIEW_MIN_LAYER_OES                                            =             0x82DD_u32
  E_TEXTURE_VIEW_NUM_LAYERS                                               =             0x82DE_u32
  E_TEXTURE_VIEW_NUM_LAYERS_EXT                                           =             0x82DE_u32
  E_TEXTURE_VIEW_NUM_LAYERS_OES                                           =             0x82DE_u32
  E_TEXTURE_IMMUTABLE_LEVELS                                              =             0x82DF_u32
  E_BUFFER                                                                =             0x82E0_u32
  E_BUFFER_KHR                                                            =             0x82E0_u32
  E_SHADER                                                                =             0x82E1_u32
  E_SHADER_KHR                                                            =             0x82E1_u32
  E_PROGRAM                                                               =             0x82E2_u32
  E_PROGRAM_KHR                                                           =             0x82E2_u32
  E_QUERY                                                                 =             0x82E3_u32
  E_QUERY_KHR                                                             =             0x82E3_u32
  E_PROGRAM_PIPELINE                                                      =             0x82E4_u32
  E_PROGRAM_PIPELINE_KHR                                                  =             0x82E4_u32
  E_MAX_VERTEX_ATTRIB_STRIDE                                              =             0x82E5_u32
  E_SAMPLER                                                               =             0x82E6_u32
  E_SAMPLER_KHR                                                           =             0x82E6_u32
  E_DISPLAY_LIST                                                          =             0x82E7_u32
  E_MAX_LABEL_LENGTH                                                      =             0x82E8_u32
  E_MAX_LABEL_LENGTH_KHR                                                  =             0x82E8_u32
  E_NUM_SHADING_LANGUAGE_VERSIONS                                         =             0x82E9_u32
  E_QUERY_TARGET                                                          =             0x82EA_u32
  E_TRANSFORM_FEEDBACK_OVERFLOW_ARB                                       =             0x82EC_u32
  E_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB                                =             0x82ED_u32
  E_VERTICES_SUBMITTED_ARB                                                =             0x82EE_u32
  E_PRIMITIVES_SUBMITTED_ARB                                              =             0x82EF_u32
  E_VERTEX_SHADER_INVOCATIONS_ARB                                         =             0x82F0_u32
  E_TESS_CONTROL_SHADER_PATCHES_ARB                                       =             0x82F1_u32
  E_TESS_EVALUATION_SHADER_INVOCATIONS_ARB                                =             0x82F2_u32
  E_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB                                =             0x82F3_u32
  E_FRAGMENT_SHADER_INVOCATIONS_ARB                                       =             0x82F4_u32
  E_COMPUTE_SHADER_INVOCATIONS_ARB                                        =             0x82F5_u32
  E_CLIPPING_INPUT_PRIMITIVES_ARB                                         =             0x82F6_u32
  E_CLIPPING_OUTPUT_PRIMITIVES_ARB                                        =             0x82F7_u32
  E_SPARSE_BUFFER_PAGE_SIZE_ARB                                           =             0x82F8_u32
  E_MAX_CULL_DISTANCES                                                    =             0x82F9_u32
  E_MAX_CULL_DISTANCES_EXT                                                =             0x82F9_u32
  E_MAX_COMBINED_CLIP_AND_CULL_DISTANCES                                  =             0x82FA_u32
  E_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT                              =             0x82FA_u32
  E_CONTEXT_RELEASE_BEHAVIOR                                              =             0x82FB_u32
  E_CONTEXT_RELEASE_BEHAVIOR_KHR                                          =             0x82FB_u32
  E_CONTEXT_RELEASE_BEHAVIOR_FLUSH                                        =             0x82FC_u32
  E_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR                                    =             0x82FC_u32
  E_DEPTH_PASS_INSTRUMENT_SGIX                                            =             0x8310_u32
  E_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX                                   =             0x8311_u32
  E_DEPTH_PASS_INSTRUMENT_MAX_SGIX                                        =             0x8312_u32
  E_FRAGMENTS_INSTRUMENT_SGIX                                             =             0x8313_u32
  E_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX                                    =             0x8314_u32
  E_FRAGMENTS_INSTRUMENT_MAX_SGIX                                         =             0x8315_u32
  E_CONVOLUTION_HINT_SGIX                                                 =             0x8316_u32
  E_YCRCB_SGIX                                                            =             0x8318_u32
  E_YCRCBA_SGIX                                                           =             0x8319_u32
  E_UNPACK_COMPRESSED_SIZE_SGIX                                           =             0x831A_u32
  E_PACK_MAX_COMPRESSED_SIZE_SGIX                                         =             0x831B_u32
  E_PACK_COMPRESSED_SIZE_SGIX                                             =             0x831C_u32
  E_SLIM8U_SGIX                                                           =             0x831D_u32
  E_SLIM10U_SGIX                                                          =             0x831E_u32
  E_SLIM12S_SGIX                                                          =             0x831F_u32
  E_ALPHA_MIN_SGIX                                                        =             0x8320_u32
  E_ALPHA_MAX_SGIX                                                        =             0x8321_u32
  E_SCALEBIAS_HINT_SGIX                                                   =             0x8322_u32
  E_ASYNC_MARKER_SGIX                                                     =             0x8329_u32
  E_PIXEL_TEX_GEN_MODE_SGIX                                               =             0x832B_u32
  E_ASYNC_HISTOGRAM_SGIX                                                  =             0x832C_u32
  E_MAX_ASYNC_HISTOGRAM_SGIX                                              =             0x832D_u32
  E_PIXEL_TRANSFORM_2D_EXT                                                =             0x8330_u32
  E_PIXEL_MAG_FILTER_EXT                                                  =             0x8331_u32
  E_PIXEL_MIN_FILTER_EXT                                                  =             0x8332_u32
  E_PIXEL_CUBIC_WEIGHT_EXT                                                =             0x8333_u32
  E_CUBIC_EXT                                                             =             0x8334_u32
  E_AVERAGE_EXT                                                           =             0x8335_u32
  E_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT                                    =             0x8336_u32
  E_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT                                =             0x8337_u32
  E_PIXEL_TRANSFORM_2D_MATRIX_EXT                                         =             0x8338_u32
  E_FRAGMENT_MATERIAL_EXT                                                 =             0x8349_u32
  E_FRAGMENT_NORMAL_EXT                                                   =             0x834A_u32
  E_FRAGMENT_COLOR_EXT                                                    =             0x834C_u32
  E_ATTENUATION_EXT                                                       =             0x834D_u32
  E_SHADOW_ATTENUATION_EXT                                                =             0x834E_u32
  E_TEXTURE_APPLICATION_MODE_EXT                                          =             0x834F_u32
  E_TEXTURE_LIGHT_EXT                                                     =             0x8350_u32
  E_TEXTURE_MATERIAL_FACE_EXT                                             =             0x8351_u32
  E_TEXTURE_MATERIAL_PARAMETER_EXT                                        =             0x8352_u32
  E_PIXEL_TEXTURE_SGIS                                                    =             0x8353_u32
  E_PIXEL_FRAGMENT_RGB_SOURCE_SGIS                                        =             0x8354_u32
  E_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS                                      =             0x8355_u32
  E_PIXEL_GROUP_COLOR_SGIS                                                =             0x8356_u32
  E_LINE_QUALITY_HINT_SGIX                                                =             0x835B_u32
  E_ASYNC_TEX_IMAGE_SGIX                                                  =             0x835C_u32
  E_ASYNC_DRAW_PIXELS_SGIX                                                =             0x835D_u32
  E_ASYNC_READ_PIXELS_SGIX                                                =             0x835E_u32
  E_MAX_ASYNC_TEX_IMAGE_SGIX                                              =             0x835F_u32
  E_MAX_ASYNC_DRAW_PIXELS_SGIX                                            =             0x8360_u32
  E_MAX_ASYNC_READ_PIXELS_SGIX                                            =             0x8361_u32
  E_UNSIGNED_BYTE_2_3_3_REV                                               =             0x8362_u32
  E_UNSIGNED_BYTE_2_3_3_REV_EXT                                           =             0x8362_u32
  E_UNSIGNED_SHORT_5_6_5                                                  =             0x8363_u32
  E_UNSIGNED_SHORT_5_6_5_EXT                                              =             0x8363_u32
  E_UNSIGNED_SHORT_5_6_5_REV                                              =             0x8364_u32
  E_UNSIGNED_SHORT_5_6_5_REV_EXT                                          =             0x8364_u32
  E_UNSIGNED_SHORT_4_4_4_4_REV                                            =             0x8365_u32
  E_UNSIGNED_SHORT_4_4_4_4_REV_EXT                                        =             0x8365_u32
  E_UNSIGNED_SHORT_4_4_4_4_REV_IMG                                        =             0x8365_u32
  E_UNSIGNED_SHORT_1_5_5_5_REV                                            =             0x8366_u32
  E_UNSIGNED_SHORT_1_5_5_5_REV_EXT                                        =             0x8366_u32
  E_UNSIGNED_INT_8_8_8_8_REV                                              =             0x8367_u32
  E_UNSIGNED_INT_8_8_8_8_REV_EXT                                          =             0x8367_u32
  E_UNSIGNED_INT_2_10_10_10_REV                                           =             0x8368_u32
  E_UNSIGNED_INT_2_10_10_10_REV_EXT                                       =             0x8368_u32
  E_TEXTURE_MAX_CLAMP_S_SGIX                                              =             0x8369_u32
  E_TEXTURE_MAX_CLAMP_T_SGIX                                              =             0x836A_u32
  E_TEXTURE_MAX_CLAMP_R_SGIX                                              =             0x836B_u32
  E_MIRRORED_REPEAT                                                       =             0x8370_u32
  E_MIRRORED_REPEAT_ARB                                                   =             0x8370_u32
  E_MIRRORED_REPEAT_IBM                                                   =             0x8370_u32
  E_MIRRORED_REPEAT_OES                                                   =             0x8370_u32
  E_RGB_S3TC                                                              =             0x83A0_u32
  E_RGB4_S3TC                                                             =             0x83A1_u32
  E_RGBA_S3TC                                                             =             0x83A2_u32
  E_RGBA4_S3TC                                                            =             0x83A3_u32
  E_RGBA_DXT5_S3TC                                                        =             0x83A4_u32
  E_RGBA4_DXT5_S3TC                                                       =             0x83A5_u32
  E_VERTEX_PRECLIP_SGIX                                                   =             0x83EE_u32
  E_VERTEX_PRECLIP_HINT_SGIX                                              =             0x83EF_u32
  E_COMPRESSED_RGB_S3TC_DXT1_EXT                                          =             0x83F0_u32
  E_COMPRESSED_RGBA_S3TC_DXT1_EXT                                         =             0x83F1_u32
  E_COMPRESSED_RGBA_S3TC_DXT3_ANGLE                                       =             0x83F2_u32
  E_COMPRESSED_RGBA_S3TC_DXT3_EXT                                         =             0x83F2_u32
  E_COMPRESSED_RGBA_S3TC_DXT5_ANGLE                                       =             0x83F3_u32
  E_COMPRESSED_RGBA_S3TC_DXT5_EXT                                         =             0x83F3_u32
  E_PARALLEL_ARRAYS_INTEL                                                 =             0x83F4_u32
  E_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL                                  =             0x83F5_u32
  E_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL                                  =             0x83F6_u32
  E_COLOR_ARRAY_PARALLEL_POINTERS_INTEL                                   =             0x83F7_u32
  E_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL                           =             0x83F8_u32
  E_PERFQUERY_DONOT_FLUSH_INTEL                                           =             0x83F9_u32
  E_PERFQUERY_FLUSH_INTEL                                                 =             0x83FA_u32
  E_PERFQUERY_WAIT_INTEL                                                  =             0x83FB_u32
  E_CONSERVATIVE_RASTERIZATION_INTEL                                      =             0x83FE_u32
  E_TEXTURE_MEMORY_LAYOUT_INTEL                                           =             0x83FF_u32
  E_FRAGMENT_LIGHTING_SGIX                                                =             0x8400_u32
  E_FRAGMENT_COLOR_MATERIAL_SGIX                                          =             0x8401_u32
  E_FRAGMENT_COLOR_MATERIAL_FACE_SGIX                                     =             0x8402_u32
  E_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX                                =             0x8403_u32
  E_MAX_FRAGMENT_LIGHTS_SGIX                                              =             0x8404_u32
  E_MAX_ACTIVE_LIGHTS_SGIX                                                =             0x8405_u32
  E_CURRENT_RASTER_NORMAL_SGIX                                            =             0x8406_u32
  E_LIGHT_ENV_MODE_SGIX                                                   =             0x8407_u32
  E_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX                                =             0x8408_u32
  E_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX                                    =             0x8409_u32
  E_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX                                     =             0x840A_u32
  E_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX                        =             0x840B_u32
  E_FRAGMENT_LIGHT0_SGIX                                                  =             0x840C_u32
  E_FRAGMENT_LIGHT1_SGIX                                                  =             0x840D_u32
  E_FRAGMENT_LIGHT2_SGIX                                                  =             0x840E_u32
  E_FRAGMENT_LIGHT3_SGIX                                                  =             0x840F_u32
  E_FRAGMENT_LIGHT4_SGIX                                                  =             0x8410_u32
  E_FRAGMENT_LIGHT5_SGIX                                                  =             0x8411_u32
  E_FRAGMENT_LIGHT6_SGIX                                                  =             0x8412_u32
  E_FRAGMENT_LIGHT7_SGIX                                                  =             0x8413_u32
  E_PACK_RESAMPLE_SGIX                                                    =             0x842E_u32
  E_UNPACK_RESAMPLE_SGIX                                                  =             0x842F_u32
  E_RESAMPLE_DECIMATE_SGIX                                                =             0x8430_u32
  E_RESAMPLE_REPLICATE_SGIX                                               =             0x8433_u32
  E_RESAMPLE_ZERO_FILL_SGIX                                               =             0x8434_u32
  E_TANGENT_ARRAY_EXT                                                     =             0x8439_u32
  E_BINORMAL_ARRAY_EXT                                                    =             0x843A_u32
  E_CURRENT_TANGENT_EXT                                                   =             0x843B_u32
  E_CURRENT_BINORMAL_EXT                                                  =             0x843C_u32
  E_TANGENT_ARRAY_TYPE_EXT                                                =             0x843E_u32
  E_TANGENT_ARRAY_STRIDE_EXT                                              =             0x843F_u32
  E_BINORMAL_ARRAY_TYPE_EXT                                               =             0x8440_u32
  E_BINORMAL_ARRAY_STRIDE_EXT                                             =             0x8441_u32
  E_TANGENT_ARRAY_POINTER_EXT                                             =             0x8442_u32
  E_BINORMAL_ARRAY_POINTER_EXT                                            =             0x8443_u32
  E_MAP1_TANGENT_EXT                                                      =             0x8444_u32
  E_MAP2_TANGENT_EXT                                                      =             0x8445_u32
  E_MAP1_BINORMAL_EXT                                                     =             0x8446_u32
  E_MAP2_BINORMAL_EXT                                                     =             0x8447_u32
  E_NEAREST_CLIPMAP_NEAREST_SGIX                                          =             0x844D_u32
  E_NEAREST_CLIPMAP_LINEAR_SGIX                                           =             0x844E_u32
  E_LINEAR_CLIPMAP_NEAREST_SGIX                                           =             0x844F_u32
  E_FOG_COORDINATE_SOURCE                                                 =             0x8450_u32
  E_FOG_COORDINATE_SOURCE_EXT                                             =             0x8450_u32
  E_FOG_COORD_SRC                                                         =             0x8450_u32
  E_FOG_COORDINATE                                                        =             0x8451_u32
  E_FOG_COORD                                                             =             0x8451_u32
  E_FOG_COORDINATE_EXT                                                    =             0x8451_u32
  E_FRAGMENT_DEPTH                                                        =             0x8452_u32
  E_FRAGMENT_DEPTH_EXT                                                    =             0x8452_u32
  E_CURRENT_FOG_COORDINATE                                                =             0x8453_u32
  E_CURRENT_FOG_COORD                                                     =             0x8453_u32
  E_CURRENT_FOG_COORDINATE_EXT                                            =             0x8453_u32
  E_FOG_COORDINATE_ARRAY_TYPE                                             =             0x8454_u32
  E_FOG_COORDINATE_ARRAY_TYPE_EXT                                         =             0x8454_u32
  E_FOG_COORD_ARRAY_TYPE                                                  =             0x8454_u32
  E_FOG_COORDINATE_ARRAY_STRIDE                                           =             0x8455_u32
  E_FOG_COORDINATE_ARRAY_STRIDE_EXT                                       =             0x8455_u32
  E_FOG_COORD_ARRAY_STRIDE                                                =             0x8455_u32
  E_FOG_COORDINATE_ARRAY_POINTER                                          =             0x8456_u32
  E_FOG_COORDINATE_ARRAY_POINTER_EXT                                      =             0x8456_u32
  E_FOG_COORD_ARRAY_POINTER                                               =             0x8456_u32
  E_FOG_COORDINATE_ARRAY                                                  =             0x8457_u32
  E_FOG_COORDINATE_ARRAY_EXT                                              =             0x8457_u32
  E_FOG_COORD_ARRAY                                                       =             0x8457_u32
  E_COLOR_SUM                                                             =             0x8458_u32
  E_COLOR_SUM_ARB                                                         =             0x8458_u32
  E_COLOR_SUM_EXT                                                         =             0x8458_u32
  E_CURRENT_SECONDARY_COLOR                                               =             0x8459_u32
  E_CURRENT_SECONDARY_COLOR_EXT                                           =             0x8459_u32
  E_SECONDARY_COLOR_ARRAY_SIZE                                            =             0x845A_u32
  E_SECONDARY_COLOR_ARRAY_SIZE_EXT                                        =             0x845A_u32
  E_SECONDARY_COLOR_ARRAY_TYPE                                            =             0x845B_u32
  E_SECONDARY_COLOR_ARRAY_TYPE_EXT                                        =             0x845B_u32
  E_SECONDARY_COLOR_ARRAY_STRIDE                                          =             0x845C_u32
  E_SECONDARY_COLOR_ARRAY_STRIDE_EXT                                      =             0x845C_u32
  E_SECONDARY_COLOR_ARRAY_POINTER                                         =             0x845D_u32
  E_SECONDARY_COLOR_ARRAY_POINTER_EXT                                     =             0x845D_u32
  E_SECONDARY_COLOR_ARRAY                                                 =             0x845E_u32
  E_SECONDARY_COLOR_ARRAY_EXT                                             =             0x845E_u32
  E_CURRENT_RASTER_SECONDARY_COLOR                                        =             0x845F_u32
  E_ALIASED_POINT_SIZE_RANGE                                              =             0x846D_u32
  E_ALIASED_LINE_WIDTH_RANGE                                              =             0x846E_u32
  E_SCREEN_COORDINATES_REND                                               =             0x8490_u32
  E_INVERTED_SCREEN_W_REND                                                =             0x8491_u32
  E_TEXTURE0                                                              =             0x84C0_u32
  E_TEXTURE0_ARB                                                          =             0x84C0_u32
  E_TEXTURE1                                                              =             0x84C1_u32
  E_TEXTURE1_ARB                                                          =             0x84C1_u32
  E_TEXTURE2                                                              =             0x84C2_u32
  E_TEXTURE2_ARB                                                          =             0x84C2_u32
  E_TEXTURE3                                                              =             0x84C3_u32
  E_TEXTURE3_ARB                                                          =             0x84C3_u32
  E_TEXTURE4                                                              =             0x84C4_u32
  E_TEXTURE4_ARB                                                          =             0x84C4_u32
  E_TEXTURE5                                                              =             0x84C5_u32
  E_TEXTURE5_ARB                                                          =             0x84C5_u32
  E_TEXTURE6                                                              =             0x84C6_u32
  E_TEXTURE6_ARB                                                          =             0x84C6_u32
  E_TEXTURE7                                                              =             0x84C7_u32
  E_TEXTURE7_ARB                                                          =             0x84C7_u32
  E_TEXTURE8                                                              =             0x84C8_u32
  E_TEXTURE8_ARB                                                          =             0x84C8_u32
  E_TEXTURE9                                                              =             0x84C9_u32
  E_TEXTURE9_ARB                                                          =             0x84C9_u32
  E_TEXTURE10                                                             =             0x84CA_u32
  E_TEXTURE10_ARB                                                         =             0x84CA_u32
  E_TEXTURE11                                                             =             0x84CB_u32
  E_TEXTURE11_ARB                                                         =             0x84CB_u32
  E_TEXTURE12                                                             =             0x84CC_u32
  E_TEXTURE12_ARB                                                         =             0x84CC_u32
  E_TEXTURE13                                                             =             0x84CD_u32
  E_TEXTURE13_ARB                                                         =             0x84CD_u32
  E_TEXTURE14                                                             =             0x84CE_u32
  E_TEXTURE14_ARB                                                         =             0x84CE_u32
  E_TEXTURE15                                                             =             0x84CF_u32
  E_TEXTURE15_ARB                                                         =             0x84CF_u32
  E_TEXTURE16                                                             =             0x84D0_u32
  E_TEXTURE16_ARB                                                         =             0x84D0_u32
  E_TEXTURE17                                                             =             0x84D1_u32
  E_TEXTURE17_ARB                                                         =             0x84D1_u32
  E_TEXTURE18                                                             =             0x84D2_u32
  E_TEXTURE18_ARB                                                         =             0x84D2_u32
  E_TEXTURE19                                                             =             0x84D3_u32
  E_TEXTURE19_ARB                                                         =             0x84D3_u32
  E_TEXTURE20                                                             =             0x84D4_u32
  E_TEXTURE20_ARB                                                         =             0x84D4_u32
  E_TEXTURE21                                                             =             0x84D5_u32
  E_TEXTURE21_ARB                                                         =             0x84D5_u32
  E_TEXTURE22                                                             =             0x84D6_u32
  E_TEXTURE22_ARB                                                         =             0x84D6_u32
  E_TEXTURE23                                                             =             0x84D7_u32
  E_TEXTURE23_ARB                                                         =             0x84D7_u32
  E_TEXTURE24                                                             =             0x84D8_u32
  E_TEXTURE24_ARB                                                         =             0x84D8_u32
  E_TEXTURE25                                                             =             0x84D9_u32
  E_TEXTURE25_ARB                                                         =             0x84D9_u32
  E_TEXTURE26                                                             =             0x84DA_u32
  E_TEXTURE26_ARB                                                         =             0x84DA_u32
  E_TEXTURE27                                                             =             0x84DB_u32
  E_TEXTURE27_ARB                                                         =             0x84DB_u32
  E_TEXTURE28                                                             =             0x84DC_u32
  E_TEXTURE28_ARB                                                         =             0x84DC_u32
  E_TEXTURE29                                                             =             0x84DD_u32
  E_TEXTURE29_ARB                                                         =             0x84DD_u32
  E_TEXTURE30                                                             =             0x84DE_u32
  E_TEXTURE30_ARB                                                         =             0x84DE_u32
  E_TEXTURE31                                                             =             0x84DF_u32
  E_TEXTURE31_ARB                                                         =             0x84DF_u32
  E_ACTIVE_TEXTURE                                                        =             0x84E0_u32
  E_ACTIVE_TEXTURE_ARB                                                    =             0x84E0_u32
  E_CLIENT_ACTIVE_TEXTURE                                                 =             0x84E1_u32
  E_CLIENT_ACTIVE_TEXTURE_ARB                                             =             0x84E1_u32
  E_MAX_TEXTURE_UNITS                                                     =             0x84E2_u32
  E_MAX_TEXTURE_UNITS_ARB                                                 =             0x84E2_u32
  E_TRANSPOSE_MODELVIEW_MATRIX                                            =             0x84E3_u32
  E_TRANSPOSE_MODELVIEW_MATRIX_ARB                                        =             0x84E3_u32
  E_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV                                    =             0x84E3_u32
  E_TRANSPOSE_PROJECTION_MATRIX                                           =             0x84E4_u32
  E_TRANSPOSE_PROJECTION_MATRIX_ARB                                       =             0x84E4_u32
  E_PATH_TRANSPOSE_PROJECTION_MATRIX_NV                                   =             0x84E4_u32
  E_TRANSPOSE_TEXTURE_MATRIX                                              =             0x84E5_u32
  E_TRANSPOSE_TEXTURE_MATRIX_ARB                                          =             0x84E5_u32
  E_TRANSPOSE_COLOR_MATRIX                                                =             0x84E6_u32
  E_TRANSPOSE_COLOR_MATRIX_ARB                                            =             0x84E6_u32
  E_SUBTRACT                                                              =             0x84E7_u32
  E_SUBTRACT_ARB                                                          =             0x84E7_u32
  E_MAX_RENDERBUFFER_SIZE                                                 =             0x84E8_u32
  E_MAX_RENDERBUFFER_SIZE_EXT                                             =             0x84E8_u32
  E_MAX_RENDERBUFFER_SIZE_OES                                             =             0x84E8_u32
  E_COMPRESSED_ALPHA                                                      =             0x84E9_u32
  E_COMPRESSED_ALPHA_ARB                                                  =             0x84E9_u32
  E_COMPRESSED_LUMINANCE                                                  =             0x84EA_u32
  E_COMPRESSED_LUMINANCE_ARB                                              =             0x84EA_u32
  E_COMPRESSED_LUMINANCE_ALPHA                                            =             0x84EB_u32
  E_COMPRESSED_LUMINANCE_ALPHA_ARB                                        =             0x84EB_u32
  E_COMPRESSED_INTENSITY                                                  =             0x84EC_u32
  E_COMPRESSED_INTENSITY_ARB                                              =             0x84EC_u32
  E_COMPRESSED_RGB                                                        =             0x84ED_u32
  E_COMPRESSED_RGB_ARB                                                    =             0x84ED_u32
  E_COMPRESSED_RGBA                                                       =             0x84EE_u32
  E_COMPRESSED_RGBA_ARB                                                   =             0x84EE_u32
  E_TEXTURE_COMPRESSION_HINT                                              =             0x84EF_u32
  E_TEXTURE_COMPRESSION_HINT_ARB                                          =             0x84EF_u32
  E_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER                       =             0x84F0_u32
  E_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER                    =             0x84F1_u32
  E_ALL_COMPLETED_NV                                                      =             0x84F2_u32
  E_FENCE_STATUS_NV                                                       =             0x84F3_u32
  E_FENCE_CONDITION_NV                                                    =             0x84F4_u32
  E_TEXTURE_RECTANGLE                                                     =             0x84F5_u32
  E_TEXTURE_RECTANGLE_ARB                                                 =             0x84F5_u32
  E_TEXTURE_RECTANGLE_NV                                                  =             0x84F5_u32
  E_TEXTURE_BINDING_RECTANGLE                                             =             0x84F6_u32
  E_TEXTURE_BINDING_RECTANGLE_ARB                                         =             0x84F6_u32
  E_TEXTURE_BINDING_RECTANGLE_NV                                          =             0x84F6_u32
  E_PROXY_TEXTURE_RECTANGLE                                               =             0x84F7_u32
  E_PROXY_TEXTURE_RECTANGLE_ARB                                           =             0x84F7_u32
  E_PROXY_TEXTURE_RECTANGLE_NV                                            =             0x84F7_u32
  E_MAX_RECTANGLE_TEXTURE_SIZE                                            =             0x84F8_u32
  E_MAX_RECTANGLE_TEXTURE_SIZE_ARB                                        =             0x84F8_u32
  E_MAX_RECTANGLE_TEXTURE_SIZE_NV                                         =             0x84F8_u32
  E_DEPTH_STENCIL                                                         =             0x84F9_u32
  E_DEPTH_STENCIL_EXT                                                     =             0x84F9_u32
  E_DEPTH_STENCIL_NV                                                      =             0x84F9_u32
  E_DEPTH_STENCIL_OES                                                     =             0x84F9_u32
  E_UNSIGNED_INT_24_8                                                     =             0x84FA_u32
  E_UNSIGNED_INT_24_8_EXT                                                 =             0x84FA_u32
  E_UNSIGNED_INT_24_8_NV                                                  =             0x84FA_u32
  E_UNSIGNED_INT_24_8_OES                                                 =             0x84FA_u32
  E_MAX_TEXTURE_LOD_BIAS                                                  =             0x84FD_u32
  E_MAX_TEXTURE_LOD_BIAS_EXT                                              =             0x84FD_u32
  E_TEXTURE_MAX_ANISOTROPY_EXT                                            =             0x84FE_u32
  E_MAX_TEXTURE_MAX_ANISOTROPY_EXT                                        =             0x84FF_u32
  E_TEXTURE_FILTER_CONTROL                                                =             0x8500_u32
  E_TEXTURE_FILTER_CONTROL_EXT                                            =             0x8500_u32
  E_TEXTURE_LOD_BIAS                                                      =             0x8501_u32
  E_TEXTURE_LOD_BIAS_EXT                                                  =             0x8501_u32
  E_MODELVIEW1_STACK_DEPTH_EXT                                            =             0x8502_u32
  E_COMBINE4_NV                                                           =             0x8503_u32
  E_MAX_SHININESS_NV                                                      =             0x8504_u32
  E_MAX_SPOT_EXPONENT_NV                                                  =             0x8505_u32
  E_MODELVIEW1_MATRIX_EXT                                                 =             0x8506_u32
  E_INCR_WRAP                                                             =             0x8507_u32
  E_INCR_WRAP_EXT                                                         =             0x8507_u32
  E_INCR_WRAP_OES                                                         =             0x8507_u32
  E_DECR_WRAP                                                             =             0x8508_u32
  E_DECR_WRAP_EXT                                                         =             0x8508_u32
  E_DECR_WRAP_OES                                                         =             0x8508_u32
  E_VERTEX_WEIGHTING_EXT                                                  =             0x8509_u32
  E_MODELVIEW1_ARB                                                        =             0x850A_u32
  E_MODELVIEW1_EXT                                                        =             0x850A_u32
  E_CURRENT_VERTEX_WEIGHT_EXT                                             =             0x850B_u32
  E_VERTEX_WEIGHT_ARRAY_EXT                                               =             0x850C_u32
  E_VERTEX_WEIGHT_ARRAY_SIZE_EXT                                          =             0x850D_u32
  E_VERTEX_WEIGHT_ARRAY_TYPE_EXT                                          =             0x850E_u32
  E_VERTEX_WEIGHT_ARRAY_STRIDE_EXT                                        =             0x850F_u32
  E_VERTEX_WEIGHT_ARRAY_POINTER_EXT                                       =             0x8510_u32
  E_NORMAL_MAP                                                            =             0x8511_u32
  E_NORMAL_MAP_ARB                                                        =             0x8511_u32
  E_NORMAL_MAP_EXT                                                        =             0x8511_u32
  E_NORMAL_MAP_NV                                                         =             0x8511_u32
  E_NORMAL_MAP_OES                                                        =             0x8511_u32
  E_REFLECTION_MAP                                                        =             0x8512_u32
  E_REFLECTION_MAP_ARB                                                    =             0x8512_u32
  E_REFLECTION_MAP_EXT                                                    =             0x8512_u32
  E_REFLECTION_MAP_NV                                                     =             0x8512_u32
  E_REFLECTION_MAP_OES                                                    =             0x8512_u32
  E_TEXTURE_CUBE_MAP                                                      =             0x8513_u32
  E_TEXTURE_CUBE_MAP_ARB                                                  =             0x8513_u32
  E_TEXTURE_CUBE_MAP_EXT                                                  =             0x8513_u32
  E_TEXTURE_CUBE_MAP_OES                                                  =             0x8513_u32
  E_TEXTURE_BINDING_CUBE_MAP                                              =             0x8514_u32
  E_TEXTURE_BINDING_CUBE_MAP_ARB                                          =             0x8514_u32
  E_TEXTURE_BINDING_CUBE_MAP_EXT                                          =             0x8514_u32
  E_TEXTURE_BINDING_CUBE_MAP_OES                                          =             0x8514_u32
  E_TEXTURE_CUBE_MAP_POSITIVE_X                                           =             0x8515_u32
  E_TEXTURE_CUBE_MAP_POSITIVE_X_ARB                                       =             0x8515_u32
  E_TEXTURE_CUBE_MAP_POSITIVE_X_EXT                                       =             0x8515_u32
  E_TEXTURE_CUBE_MAP_POSITIVE_X_OES                                       =             0x8515_u32
  E_TEXTURE_CUBE_MAP_NEGATIVE_X                                           =             0x8516_u32
  E_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB                                       =             0x8516_u32
  E_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT                                       =             0x8516_u32
  E_TEXTURE_CUBE_MAP_NEGATIVE_X_OES                                       =             0x8516_u32
  E_TEXTURE_CUBE_MAP_POSITIVE_Y                                           =             0x8517_u32
  E_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB                                       =             0x8517_u32
  E_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT                                       =             0x8517_u32
  E_TEXTURE_CUBE_MAP_POSITIVE_Y_OES                                       =             0x8517_u32
  E_TEXTURE_CUBE_MAP_NEGATIVE_Y                                           =             0x8518_u32
  E_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB                                       =             0x8518_u32
  E_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT                                       =             0x8518_u32
  E_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES                                       =             0x8518_u32
  E_TEXTURE_CUBE_MAP_POSITIVE_Z                                           =             0x8519_u32
  E_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB                                       =             0x8519_u32
  E_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT                                       =             0x8519_u32
  E_TEXTURE_CUBE_MAP_POSITIVE_Z_OES                                       =             0x8519_u32
  E_TEXTURE_CUBE_MAP_NEGATIVE_Z                                           =             0x851A_u32
  E_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB                                       =             0x851A_u32
  E_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT                                       =             0x851A_u32
  E_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES                                       =             0x851A_u32
  E_PROXY_TEXTURE_CUBE_MAP                                                =             0x851B_u32
  E_PROXY_TEXTURE_CUBE_MAP_ARB                                            =             0x851B_u32
  E_PROXY_TEXTURE_CUBE_MAP_EXT                                            =             0x851B_u32
  E_MAX_CUBE_MAP_TEXTURE_SIZE                                             =             0x851C_u32
  E_MAX_CUBE_MAP_TEXTURE_SIZE_ARB                                         =             0x851C_u32
  E_MAX_CUBE_MAP_TEXTURE_SIZE_EXT                                         =             0x851C_u32
  E_MAX_CUBE_MAP_TEXTURE_SIZE_OES                                         =             0x851C_u32
  E_VERTEX_ARRAY_RANGE_APPLE                                              =             0x851D_u32
  E_VERTEX_ARRAY_RANGE_NV                                                 =             0x851D_u32
  E_VERTEX_ARRAY_RANGE_LENGTH_APPLE                                       =             0x851E_u32
  E_VERTEX_ARRAY_RANGE_LENGTH_NV                                          =             0x851E_u32
  E_VERTEX_ARRAY_RANGE_VALID_NV                                           =             0x851F_u32
  E_VERTEX_ARRAY_STORAGE_HINT_APPLE                                       =             0x851F_u32
  E_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV                                     =             0x8520_u32
  E_VERTEX_ARRAY_RANGE_POINTER_APPLE                                      =             0x8521_u32
  E_VERTEX_ARRAY_RANGE_POINTER_NV                                         =             0x8521_u32
  E_REGISTER_COMBINERS_NV                                                 =             0x8522_u32
  E_VARIABLE_A_NV                                                         =             0x8523_u32
  E_VARIABLE_B_NV                                                         =             0x8524_u32
  E_VARIABLE_C_NV                                                         =             0x8525_u32
  E_VARIABLE_D_NV                                                         =             0x8526_u32
  E_VARIABLE_E_NV                                                         =             0x8527_u32
  E_VARIABLE_F_NV                                                         =             0x8528_u32
  E_VARIABLE_G_NV                                                         =             0x8529_u32
  E_CONSTANT_COLOR0_NV                                                    =             0x852A_u32
  E_CONSTANT_COLOR1_NV                                                    =             0x852B_u32
  E_PRIMARY_COLOR_NV                                                      =             0x852C_u32
  E_SECONDARY_COLOR_NV                                                    =             0x852D_u32
  E_SPARE0_NV                                                             =             0x852E_u32
  E_SPARE1_NV                                                             =             0x852F_u32
  E_DISCARD_NV                                                            =             0x8530_u32
  E_E_TIMES_F_NV                                                          =             0x8531_u32
  E_SPARE0_PLUS_SECONDARY_COLOR_NV                                        =             0x8532_u32
  E_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV                                   =             0x8533_u32
  E_MULTISAMPLE_FILTER_HINT_NV                                            =             0x8534_u32
  E_PER_STAGE_CONSTANTS_NV                                                =             0x8535_u32
  E_UNSIGNED_IDENTITY_NV                                                  =             0x8536_u32
  E_UNSIGNED_INVERT_NV                                                    =             0x8537_u32
  E_EXPAND_NORMAL_NV                                                      =             0x8538_u32
  E_EXPAND_NEGATE_NV                                                      =             0x8539_u32
  E_HALF_BIAS_NORMAL_NV                                                   =             0x853A_u32
  E_HALF_BIAS_NEGATE_NV                                                   =             0x853B_u32
  E_SIGNED_IDENTITY_NV                                                    =             0x853C_u32
  E_SIGNED_NEGATE_NV                                                      =             0x853D_u32
  E_SCALE_BY_TWO_NV                                                       =             0x853E_u32
  E_SCALE_BY_FOUR_NV                                                      =             0x853F_u32
  E_SCALE_BY_ONE_HALF_NV                                                  =             0x8540_u32
  E_BIAS_BY_NEGATIVE_ONE_HALF_NV                                          =             0x8541_u32
  E_COMBINER_INPUT_NV                                                     =             0x8542_u32
  E_COMBINER_MAPPING_NV                                                   =             0x8543_u32
  E_COMBINER_COMPONENT_USAGE_NV                                           =             0x8544_u32
  E_COMBINER_AB_DOT_PRODUCT_NV                                            =             0x8545_u32
  E_COMBINER_CD_DOT_PRODUCT_NV                                            =             0x8546_u32
  E_COMBINER_MUX_SUM_NV                                                   =             0x8547_u32
  E_COMBINER_SCALE_NV                                                     =             0x8548_u32
  E_COMBINER_BIAS_NV                                                      =             0x8549_u32
  E_COMBINER_AB_OUTPUT_NV                                                 =             0x854A_u32
  E_COMBINER_CD_OUTPUT_NV                                                 =             0x854B_u32
  E_COMBINER_SUM_OUTPUT_NV                                                =             0x854C_u32
  E_MAX_GENERAL_COMBINERS_NV                                              =             0x854D_u32
  E_NUM_GENERAL_COMBINERS_NV                                              =             0x854E_u32
  E_COLOR_SUM_CLAMP_NV                                                    =             0x854F_u32
  E_COMBINER0_NV                                                          =             0x8550_u32
  E_COMBINER1_NV                                                          =             0x8551_u32
  E_COMBINER2_NV                                                          =             0x8552_u32
  E_COMBINER3_NV                                                          =             0x8553_u32
  E_COMBINER4_NV                                                          =             0x8554_u32
  E_COMBINER5_NV                                                          =             0x8555_u32
  E_COMBINER6_NV                                                          =             0x8556_u32
  E_COMBINER7_NV                                                          =             0x8557_u32
  E_PRIMITIVE_RESTART_NV                                                  =             0x8558_u32
  E_PRIMITIVE_RESTART_INDEX_NV                                            =             0x8559_u32
  E_FOG_DISTANCE_MODE_NV                                                  =             0x855A_u32
  E_EYE_RADIAL_NV                                                         =             0x855B_u32
  E_EYE_PLANE_ABSOLUTE_NV                                                 =             0x855C_u32
  E_EMBOSS_LIGHT_NV                                                       =             0x855D_u32
  E_EMBOSS_CONSTANT_NV                                                    =             0x855E_u32
  E_EMBOSS_MAP_NV                                                         =             0x855F_u32
  E_RED_MIN_CLAMP_INGR                                                    =             0x8560_u32
  E_GREEN_MIN_CLAMP_INGR                                                  =             0x8561_u32
  E_BLUE_MIN_CLAMP_INGR                                                   =             0x8562_u32
  E_ALPHA_MIN_CLAMP_INGR                                                  =             0x8563_u32
  E_RED_MAX_CLAMP_INGR                                                    =             0x8564_u32
  E_GREEN_MAX_CLAMP_INGR                                                  =             0x8565_u32
  E_BLUE_MAX_CLAMP_INGR                                                   =             0x8566_u32
  E_ALPHA_MAX_CLAMP_INGR                                                  =             0x8567_u32
  E_INTERLACE_READ_INGR                                                   =             0x8568_u32
  E_COMBINE                                                               =             0x8570_u32
  E_COMBINE_ARB                                                           =             0x8570_u32
  E_COMBINE_EXT                                                           =             0x8570_u32
  E_COMBINE_RGB                                                           =             0x8571_u32
  E_COMBINE_RGB_ARB                                                       =             0x8571_u32
  E_COMBINE_RGB_EXT                                                       =             0x8571_u32
  E_COMBINE_ALPHA                                                         =             0x8572_u32
  E_COMBINE_ALPHA_ARB                                                     =             0x8572_u32
  E_COMBINE_ALPHA_EXT                                                     =             0x8572_u32
  E_RGB_SCALE                                                             =             0x8573_u32
  E_RGB_SCALE_ARB                                                         =             0x8573_u32
  E_RGB_SCALE_EXT                                                         =             0x8573_u32
  E_ADD_SIGNED                                                            =             0x8574_u32
  E_ADD_SIGNED_ARB                                                        =             0x8574_u32
  E_ADD_SIGNED_EXT                                                        =             0x8574_u32
  E_INTERPOLATE                                                           =             0x8575_u32
  E_INTERPOLATE_ARB                                                       =             0x8575_u32
  E_INTERPOLATE_EXT                                                       =             0x8575_u32
  E_CONSTANT                                                              =             0x8576_u32
  E_CONSTANT_ARB                                                          =             0x8576_u32
  E_CONSTANT_EXT                                                          =             0x8576_u32
  E_CONSTANT_NV                                                           =             0x8576_u32
  E_PRIMARY_COLOR                                                         =             0x8577_u32
  E_PRIMARY_COLOR_ARB                                                     =             0x8577_u32
  E_PRIMARY_COLOR_EXT                                                     =             0x8577_u32
  E_PREVIOUS                                                              =             0x8578_u32
  E_PREVIOUS_ARB                                                          =             0x8578_u32
  E_PREVIOUS_EXT                                                          =             0x8578_u32
  E_SOURCE0_RGB                                                           =             0x8580_u32
  E_SOURCE0_RGB_ARB                                                       =             0x8580_u32
  E_SOURCE0_RGB_EXT                                                       =             0x8580_u32
  E_SRC0_RGB                                                              =             0x8580_u32
  E_SOURCE1_RGB                                                           =             0x8581_u32
  E_SOURCE1_RGB_ARB                                                       =             0x8581_u32
  E_SOURCE1_RGB_EXT                                                       =             0x8581_u32
  E_SRC1_RGB                                                              =             0x8581_u32
  E_SOURCE2_RGB                                                           =             0x8582_u32
  E_SOURCE2_RGB_ARB                                                       =             0x8582_u32
  E_SOURCE2_RGB_EXT                                                       =             0x8582_u32
  E_SRC2_RGB                                                              =             0x8582_u32
  E_SOURCE3_RGB_NV                                                        =             0x8583_u32
  E_SOURCE0_ALPHA                                                         =             0x8588_u32
  E_SOURCE0_ALPHA_ARB                                                     =             0x8588_u32
  E_SOURCE0_ALPHA_EXT                                                     =             0x8588_u32
  E_SRC0_ALPHA                                                            =             0x8588_u32
  E_SOURCE1_ALPHA                                                         =             0x8589_u32
  E_SOURCE1_ALPHA_ARB                                                     =             0x8589_u32
  E_SOURCE1_ALPHA_EXT                                                     =             0x8589_u32
  E_SRC1_ALPHA                                                            =             0x8589_u32
  E_SRC1_ALPHA_EXT                                                        =             0x8589_u32
  E_SOURCE2_ALPHA                                                         =             0x858A_u32
  E_SOURCE2_ALPHA_ARB                                                     =             0x858A_u32
  E_SOURCE2_ALPHA_EXT                                                     =             0x858A_u32
  E_SRC2_ALPHA                                                            =             0x858A_u32
  E_SOURCE3_ALPHA_NV                                                      =             0x858B_u32
  E_OPERAND0_RGB                                                          =             0x8590_u32
  E_OPERAND0_RGB_ARB                                                      =             0x8590_u32
  E_OPERAND0_RGB_EXT                                                      =             0x8590_u32
  E_OPERAND1_RGB                                                          =             0x8591_u32
  E_OPERAND1_RGB_ARB                                                      =             0x8591_u32
  E_OPERAND1_RGB_EXT                                                      =             0x8591_u32
  E_OPERAND2_RGB                                                          =             0x8592_u32
  E_OPERAND2_RGB_ARB                                                      =             0x8592_u32
  E_OPERAND2_RGB_EXT                                                      =             0x8592_u32
  E_OPERAND3_RGB_NV                                                       =             0x8593_u32
  E_OPERAND0_ALPHA                                                        =             0x8598_u32
  E_OPERAND0_ALPHA_ARB                                                    =             0x8598_u32
  E_OPERAND0_ALPHA_EXT                                                    =             0x8598_u32
  E_OPERAND1_ALPHA                                                        =             0x8599_u32
  E_OPERAND1_ALPHA_ARB                                                    =             0x8599_u32
  E_OPERAND1_ALPHA_EXT                                                    =             0x8599_u32
  E_OPERAND2_ALPHA                                                        =             0x859A_u32
  E_OPERAND2_ALPHA_ARB                                                    =             0x859A_u32
  E_OPERAND2_ALPHA_EXT                                                    =             0x859A_u32
  E_OPERAND3_ALPHA_NV                                                     =             0x859B_u32
  E_PACK_SUBSAMPLE_RATE_SGIX                                              =             0x85A0_u32
  E_UNPACK_SUBSAMPLE_RATE_SGIX                                            =             0x85A1_u32
  E_PIXEL_SUBSAMPLE_4444_SGIX                                             =             0x85A2_u32
  E_PIXEL_SUBSAMPLE_2424_SGIX                                             =             0x85A3_u32
  E_PIXEL_SUBSAMPLE_4242_SGIX                                             =             0x85A4_u32
  E_PERTURB_EXT                                                           =             0x85AE_u32
  E_TEXTURE_NORMAL_EXT                                                    =             0x85AF_u32
  E_LIGHT_MODEL_SPECULAR_VECTOR_APPLE                                     =             0x85B0_u32
  E_TRANSFORM_HINT_APPLE                                                  =             0x85B1_u32
  E_UNPACK_CLIENT_STORAGE_APPLE                                           =             0x85B2_u32
  E_BUFFER_OBJECT_APPLE                                                   =             0x85B3_u32
  E_STORAGE_CLIENT_APPLE                                                  =             0x85B4_u32
  E_VERTEX_ARRAY_BINDING                                                  =             0x85B5_u32
  E_VERTEX_ARRAY_BINDING_APPLE                                            =             0x85B5_u32
  E_VERTEX_ARRAY_BINDING_OES                                              =             0x85B5_u32
  E_TEXTURE_RANGE_LENGTH_APPLE                                            =             0x85B7_u32
  E_TEXTURE_RANGE_POINTER_APPLE                                           =             0x85B8_u32
  E_YCBCR_422_APPLE                                                       =             0x85B9_u32
  E_UNSIGNED_SHORT_8_8_APPLE                                              =             0x85BA_u32
  E_UNSIGNED_SHORT_8_8_MESA                                               =             0x85BA_u32
  E_UNSIGNED_SHORT_8_8_REV_APPLE                                          =             0x85BB_u32
  E_UNSIGNED_SHORT_8_8_REV_MESA                                           =             0x85BB_u32
  E_TEXTURE_STORAGE_HINT_APPLE                                            =             0x85BC_u32
  E_STORAGE_PRIVATE_APPLE                                                 =             0x85BD_u32
  E_STORAGE_CACHED_APPLE                                                  =             0x85BE_u32
  E_STORAGE_SHARED_APPLE                                                  =             0x85BF_u32
  E_REPLACEMENT_CODE_ARRAY_SUN                                            =             0x85C0_u32
  E_REPLACEMENT_CODE_ARRAY_TYPE_SUN                                       =             0x85C1_u32
  E_REPLACEMENT_CODE_ARRAY_STRIDE_SUN                                     =             0x85C2_u32
  E_REPLACEMENT_CODE_ARRAY_POINTER_SUN                                    =             0x85C3_u32
  E_R1UI_V3F_SUN                                                          =             0x85C4_u32
  E_R1UI_C4UB_V3F_SUN                                                     =             0x85C5_u32
  E_R1UI_C3F_V3F_SUN                                                      =             0x85C6_u32
  E_R1UI_N3F_V3F_SUN                                                      =             0x85C7_u32
  E_R1UI_C4F_N3F_V3F_SUN                                                  =             0x85C8_u32
  E_R1UI_T2F_V3F_SUN                                                      =             0x85C9_u32
  E_R1UI_T2F_N3F_V3F_SUN                                                  =             0x85CA_u32
  E_R1UI_T2F_C4F_N3F_V3F_SUN                                              =             0x85CB_u32
  E_SLICE_ACCUM_SUN                                                       =             0x85CC_u32
  E_QUAD_MESH_SUN                                                         =             0x8614_u32
  E_TRIANGLE_MESH_SUN                                                     =             0x8615_u32
  E_VERTEX_PROGRAM_ARB                                                    =             0x8620_u32
  E_VERTEX_PROGRAM_NV                                                     =             0x8620_u32
  E_VERTEX_STATE_PROGRAM_NV                                               =             0x8621_u32
  E_VERTEX_ATTRIB_ARRAY_ENABLED                                           =             0x8622_u32
  E_VERTEX_ATTRIB_ARRAY_ENABLED_ARB                                       =             0x8622_u32
  E_ATTRIB_ARRAY_SIZE_NV                                                  =             0x8623_u32
  E_VERTEX_ATTRIB_ARRAY_SIZE                                              =             0x8623_u32
  E_VERTEX_ATTRIB_ARRAY_SIZE_ARB                                          =             0x8623_u32
  E_ATTRIB_ARRAY_STRIDE_NV                                                =             0x8624_u32
  E_VERTEX_ATTRIB_ARRAY_STRIDE                                            =             0x8624_u32
  E_VERTEX_ATTRIB_ARRAY_STRIDE_ARB                                        =             0x8624_u32
  E_ATTRIB_ARRAY_TYPE_NV                                                  =             0x8625_u32
  E_VERTEX_ATTRIB_ARRAY_TYPE                                              =             0x8625_u32
  E_VERTEX_ATTRIB_ARRAY_TYPE_ARB                                          =             0x8625_u32
  E_CURRENT_ATTRIB_NV                                                     =             0x8626_u32
  E_CURRENT_VERTEX_ATTRIB                                                 =             0x8626_u32
  E_CURRENT_VERTEX_ATTRIB_ARB                                             =             0x8626_u32
  E_PROGRAM_LENGTH_ARB                                                    =             0x8627_u32
  E_PROGRAM_LENGTH_NV                                                     =             0x8627_u32
  E_PROGRAM_STRING_ARB                                                    =             0x8628_u32
  E_PROGRAM_STRING_NV                                                     =             0x8628_u32
  E_MODELVIEW_PROJECTION_NV                                               =             0x8629_u32
  E_IDENTITY_NV                                                           =             0x862A_u32
  E_INVERSE_NV                                                            =             0x862B_u32
  E_TRANSPOSE_NV                                                          =             0x862C_u32
  E_INVERSE_TRANSPOSE_NV                                                  =             0x862D_u32
  E_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB                                    =             0x862E_u32
  E_MAX_TRACK_MATRIX_STACK_DEPTH_NV                                       =             0x862E_u32
  E_MAX_PROGRAM_MATRICES_ARB                                              =             0x862F_u32
  E_MAX_TRACK_MATRICES_NV                                                 =             0x862F_u32
  E_MATRIX0_NV                                                            =             0x8630_u32
  E_MATRIX1_NV                                                            =             0x8631_u32
  E_MATRIX2_NV                                                            =             0x8632_u32
  E_MATRIX3_NV                                                            =             0x8633_u32
  E_MATRIX4_NV                                                            =             0x8634_u32
  E_MATRIX5_NV                                                            =             0x8635_u32
  E_MATRIX6_NV                                                            =             0x8636_u32
  E_MATRIX7_NV                                                            =             0x8637_u32
  E_CURRENT_MATRIX_STACK_DEPTH_ARB                                        =             0x8640_u32
  E_CURRENT_MATRIX_STACK_DEPTH_NV                                         =             0x8640_u32
  E_CURRENT_MATRIX_ARB                                                    =             0x8641_u32
  E_CURRENT_MATRIX_NV                                                     =             0x8641_u32
  E_VERTEX_PROGRAM_POINT_SIZE                                             =             0x8642_u32
  E_VERTEX_PROGRAM_POINT_SIZE_ARB                                         =             0x8642_u32
  E_VERTEX_PROGRAM_POINT_SIZE_NV                                          =             0x8642_u32
  E_PROGRAM_POINT_SIZE                                                    =             0x8642_u32
  E_PROGRAM_POINT_SIZE_ARB                                                =             0x8642_u32
  E_PROGRAM_POINT_SIZE_EXT                                                =             0x8642_u32
  E_VERTEX_PROGRAM_TWO_SIDE                                               =             0x8643_u32
  E_VERTEX_PROGRAM_TWO_SIDE_ARB                                           =             0x8643_u32
  E_VERTEX_PROGRAM_TWO_SIDE_NV                                            =             0x8643_u32
  E_PROGRAM_PARAMETER_NV                                                  =             0x8644_u32
  E_ATTRIB_ARRAY_POINTER_NV                                               =             0x8645_u32
  E_VERTEX_ATTRIB_ARRAY_POINTER                                           =             0x8645_u32
  E_VERTEX_ATTRIB_ARRAY_POINTER_ARB                                       =             0x8645_u32
  E_PROGRAM_TARGET_NV                                                     =             0x8646_u32
  E_PROGRAM_RESIDENT_NV                                                   =             0x8647_u32
  E_TRACK_MATRIX_NV                                                       =             0x8648_u32
  E_TRACK_MATRIX_TRANSFORM_NV                                             =             0x8649_u32
  E_VERTEX_PROGRAM_BINDING_NV                                             =             0x864A_u32
  E_PROGRAM_ERROR_POSITION_ARB                                            =             0x864B_u32
  E_PROGRAM_ERROR_POSITION_NV                                             =             0x864B_u32
  E_OFFSET_TEXTURE_RECTANGLE_NV                                           =             0x864C_u32
  E_OFFSET_TEXTURE_RECTANGLE_SCALE_NV                                     =             0x864D_u32
  E_DOT_PRODUCT_TEXTURE_RECTANGLE_NV                                      =             0x864E_u32
  E_DEPTH_CLAMP                                                           =             0x864F_u32
  E_DEPTH_CLAMP_NV                                                        =             0x864F_u32
  E_VERTEX_ATTRIB_ARRAY0_NV                                               =             0x8650_u32
  E_VERTEX_ATTRIB_ARRAY1_NV                                               =             0x8651_u32
  E_VERTEX_ATTRIB_ARRAY2_NV                                               =             0x8652_u32
  E_VERTEX_ATTRIB_ARRAY3_NV                                               =             0x8653_u32
  E_VERTEX_ATTRIB_ARRAY4_NV                                               =             0x8654_u32
  E_VERTEX_ATTRIB_ARRAY5_NV                                               =             0x8655_u32
  E_VERTEX_ATTRIB_ARRAY6_NV                                               =             0x8656_u32
  E_VERTEX_ATTRIB_ARRAY7_NV                                               =             0x8657_u32
  E_VERTEX_ATTRIB_ARRAY8_NV                                               =             0x8658_u32
  E_VERTEX_ATTRIB_ARRAY9_NV                                               =             0x8659_u32
  E_VERTEX_ATTRIB_ARRAY10_NV                                              =             0x865A_u32
  E_VERTEX_ATTRIB_ARRAY11_NV                                              =             0x865B_u32
  E_VERTEX_ATTRIB_ARRAY12_NV                                              =             0x865C_u32
  E_VERTEX_ATTRIB_ARRAY13_NV                                              =             0x865D_u32
  E_VERTEX_ATTRIB_ARRAY14_NV                                              =             0x865E_u32
  E_VERTEX_ATTRIB_ARRAY15_NV                                              =             0x865F_u32
  E_MAP1_VERTEX_ATTRIB0_4_NV                                              =             0x8660_u32
  E_MAP1_VERTEX_ATTRIB1_4_NV                                              =             0x8661_u32
  E_MAP1_VERTEX_ATTRIB2_4_NV                                              =             0x8662_u32
  E_MAP1_VERTEX_ATTRIB3_4_NV                                              =             0x8663_u32
  E_MAP1_VERTEX_ATTRIB4_4_NV                                              =             0x8664_u32
  E_MAP1_VERTEX_ATTRIB5_4_NV                                              =             0x8665_u32
  E_MAP1_VERTEX_ATTRIB6_4_NV                                              =             0x8666_u32
  E_MAP1_VERTEX_ATTRIB7_4_NV                                              =             0x8667_u32
  E_MAP1_VERTEX_ATTRIB8_4_NV                                              =             0x8668_u32
  E_MAP1_VERTEX_ATTRIB9_4_NV                                              =             0x8669_u32
  E_MAP1_VERTEX_ATTRIB10_4_NV                                             =             0x866A_u32
  E_MAP1_VERTEX_ATTRIB11_4_NV                                             =             0x866B_u32
  E_MAP1_VERTEX_ATTRIB12_4_NV                                             =             0x866C_u32
  E_MAP1_VERTEX_ATTRIB13_4_NV                                             =             0x866D_u32
  E_MAP1_VERTEX_ATTRIB14_4_NV                                             =             0x866E_u32
  E_MAP1_VERTEX_ATTRIB15_4_NV                                             =             0x866F_u32
  E_MAP2_VERTEX_ATTRIB0_4_NV                                              =             0x8670_u32
  E_MAP2_VERTEX_ATTRIB1_4_NV                                              =             0x8671_u32
  E_MAP2_VERTEX_ATTRIB2_4_NV                                              =             0x8672_u32
  E_MAP2_VERTEX_ATTRIB3_4_NV                                              =             0x8673_u32
  E_MAP2_VERTEX_ATTRIB4_4_NV                                              =             0x8674_u32
  E_MAP2_VERTEX_ATTRIB5_4_NV                                              =             0x8675_u32
  E_MAP2_VERTEX_ATTRIB6_4_NV                                              =             0x8676_u32
  E_MAP2_VERTEX_ATTRIB7_4_NV                                              =             0x8677_u32
  E_PROGRAM_BINDING_ARB                                                   =             0x8677_u32
  E_MAP2_VERTEX_ATTRIB8_4_NV                                              =             0x8678_u32
  E_MAP2_VERTEX_ATTRIB9_4_NV                                              =             0x8679_u32
  E_MAP2_VERTEX_ATTRIB10_4_NV                                             =             0x867A_u32
  E_MAP2_VERTEX_ATTRIB11_4_NV                                             =             0x867B_u32
  E_MAP2_VERTEX_ATTRIB12_4_NV                                             =             0x867C_u32
  E_MAP2_VERTEX_ATTRIB13_4_NV                                             =             0x867D_u32
  E_MAP2_VERTEX_ATTRIB14_4_NV                                             =             0x867E_u32
  E_MAP2_VERTEX_ATTRIB15_4_NV                                             =             0x867F_u32
  E_TEXTURE_COMPRESSED_IMAGE_SIZE                                         =             0x86A0_u32
  E_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB                                     =             0x86A0_u32
  E_TEXTURE_COMPRESSED                                                    =             0x86A1_u32
  E_TEXTURE_COMPRESSED_ARB                                                =             0x86A1_u32
  E_NUM_COMPRESSED_TEXTURE_FORMATS                                        =             0x86A2_u32
  E_NUM_COMPRESSED_TEXTURE_FORMATS_ARB                                    =             0x86A2_u32
  E_COMPRESSED_TEXTURE_FORMATS                                            =             0x86A3_u32
  E_COMPRESSED_TEXTURE_FORMATS_ARB                                        =             0x86A3_u32
  E_MAX_VERTEX_UNITS_ARB                                                  =             0x86A4_u32
  E_MAX_VERTEX_UNITS_OES                                                  =             0x86A4_u32
  E_ACTIVE_VERTEX_UNITS_ARB                                               =             0x86A5_u32
  E_WEIGHT_SUM_UNITY_ARB                                                  =             0x86A6_u32
  E_VERTEX_BLEND_ARB                                                      =             0x86A7_u32
  E_CURRENT_WEIGHT_ARB                                                    =             0x86A8_u32
  E_WEIGHT_ARRAY_TYPE_ARB                                                 =             0x86A9_u32
  E_WEIGHT_ARRAY_TYPE_OES                                                 =             0x86A9_u32
  E_WEIGHT_ARRAY_STRIDE_ARB                                               =             0x86AA_u32
  E_WEIGHT_ARRAY_STRIDE_OES                                               =             0x86AA_u32
  E_WEIGHT_ARRAY_SIZE_ARB                                                 =             0x86AB_u32
  E_WEIGHT_ARRAY_SIZE_OES                                                 =             0x86AB_u32
  E_WEIGHT_ARRAY_POINTER_ARB                                              =             0x86AC_u32
  E_WEIGHT_ARRAY_POINTER_OES                                              =             0x86AC_u32
  E_WEIGHT_ARRAY_ARB                                                      =             0x86AD_u32
  E_WEIGHT_ARRAY_OES                                                      =             0x86AD_u32
  E_DOT3_RGB                                                              =             0x86AE_u32
  E_DOT3_RGB_ARB                                                          =             0x86AE_u32
  E_DOT3_RGBA                                                             =             0x86AF_u32
  E_DOT3_RGBA_ARB                                                         =             0x86AF_u32
  E_DOT3_RGBA_IMG                                                         =             0x86AF_u32
  E_COMPRESSED_RGB_FXT1_3DFX                                              =             0x86B0_u32
  E_COMPRESSED_RGBA_FXT1_3DFX                                             =             0x86B1_u32
  E_MULTISAMPLE_3DFX                                                      =             0x86B2_u32
  E_SAMPLE_BUFFERS_3DFX                                                   =             0x86B3_u32
  E_SAMPLES_3DFX                                                          =             0x86B4_u32
  E_EVAL_2D_NV                                                            =             0x86C0_u32
  E_EVAL_TRIANGULAR_2D_NV                                                 =             0x86C1_u32
  E_MAP_TESSELLATION_NV                                                   =             0x86C2_u32
  E_MAP_ATTRIB_U_ORDER_NV                                                 =             0x86C3_u32
  E_MAP_ATTRIB_V_ORDER_NV                                                 =             0x86C4_u32
  E_EVAL_FRACTIONAL_TESSELLATION_NV                                       =             0x86C5_u32
  E_EVAL_VERTEX_ATTRIB0_NV                                                =             0x86C6_u32
  E_EVAL_VERTEX_ATTRIB1_NV                                                =             0x86C7_u32
  E_EVAL_VERTEX_ATTRIB2_NV                                                =             0x86C8_u32
  E_EVAL_VERTEX_ATTRIB3_NV                                                =             0x86C9_u32
  E_EVAL_VERTEX_ATTRIB4_NV                                                =             0x86CA_u32
  E_EVAL_VERTEX_ATTRIB5_NV                                                =             0x86CB_u32
  E_EVAL_VERTEX_ATTRIB6_NV                                                =             0x86CC_u32
  E_EVAL_VERTEX_ATTRIB7_NV                                                =             0x86CD_u32
  E_EVAL_VERTEX_ATTRIB8_NV                                                =             0x86CE_u32
  E_EVAL_VERTEX_ATTRIB9_NV                                                =             0x86CF_u32
  E_EVAL_VERTEX_ATTRIB10_NV                                               =             0x86D0_u32
  E_EVAL_VERTEX_ATTRIB11_NV                                               =             0x86D1_u32
  E_EVAL_VERTEX_ATTRIB12_NV                                               =             0x86D2_u32
  E_EVAL_VERTEX_ATTRIB13_NV                                               =             0x86D3_u32
  E_EVAL_VERTEX_ATTRIB14_NV                                               =             0x86D4_u32
  E_EVAL_VERTEX_ATTRIB15_NV                                               =             0x86D5_u32
  E_MAX_MAP_TESSELLATION_NV                                               =             0x86D6_u32
  E_MAX_RATIONAL_EVAL_ORDER_NV                                            =             0x86D7_u32
  E_MAX_PROGRAM_PATCH_ATTRIBS_NV                                          =             0x86D8_u32
  E_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV                                  =             0x86D9_u32
  E_UNSIGNED_INT_S8_S8_8_8_NV                                             =             0x86DA_u32
  E_UNSIGNED_INT_8_8_S8_S8_REV_NV                                         =             0x86DB_u32
  E_DSDT_MAG_INTENSITY_NV                                                 =             0x86DC_u32
  E_SHADER_CONSISTENT_NV                                                  =             0x86DD_u32
  E_TEXTURE_SHADER_NV                                                     =             0x86DE_u32
  E_SHADER_OPERATION_NV                                                   =             0x86DF_u32
  E_CULL_MODES_NV                                                         =             0x86E0_u32
  E_OFFSET_TEXTURE_MATRIX_NV                                              =             0x86E1_u32
  E_OFFSET_TEXTURE_2D_MATRIX_NV                                           =             0x86E1_u32
  E_OFFSET_TEXTURE_SCALE_NV                                               =             0x86E2_u32
  E_OFFSET_TEXTURE_2D_SCALE_NV                                            =             0x86E2_u32
  E_OFFSET_TEXTURE_BIAS_NV                                                =             0x86E3_u32
  E_OFFSET_TEXTURE_2D_BIAS_NV                                             =             0x86E3_u32
  E_PREVIOUS_TEXTURE_INPUT_NV                                             =             0x86E4_u32
  E_CONST_EYE_NV                                                          =             0x86E5_u32
  E_PASS_THROUGH_NV                                                       =             0x86E6_u32
  E_CULL_FRAGMENT_NV                                                      =             0x86E7_u32
  E_OFFSET_TEXTURE_2D_NV                                                  =             0x86E8_u32
  E_DEPENDENT_AR_TEXTURE_2D_NV                                            =             0x86E9_u32
  E_DEPENDENT_GB_TEXTURE_2D_NV                                            =             0x86EA_u32
  E_SURFACE_STATE_NV                                                      =             0x86EB_u32
  E_DOT_PRODUCT_NV                                                        =             0x86EC_u32
  E_DOT_PRODUCT_DEPTH_REPLACE_NV                                          =             0x86ED_u32
  E_DOT_PRODUCT_TEXTURE_2D_NV                                             =             0x86EE_u32
  E_DOT_PRODUCT_TEXTURE_3D_NV                                             =             0x86EF_u32
  E_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV                                       =             0x86F0_u32
  E_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV                                       =             0x86F1_u32
  E_DOT_PRODUCT_REFLECT_CUBE_MAP_NV                                       =             0x86F2_u32
  E_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV                             =             0x86F3_u32
  E_HILO_NV                                                               =             0x86F4_u32
  E_DSDT_NV                                                               =             0x86F5_u32
  E_DSDT_MAG_NV                                                           =             0x86F6_u32
  E_DSDT_MAG_VIB_NV                                                       =             0x86F7_u32
  E_HILO16_NV                                                             =             0x86F8_u32
  E_SIGNED_HILO_NV                                                        =             0x86F9_u32
  E_SIGNED_HILO16_NV                                                      =             0x86FA_u32
  E_SIGNED_RGBA_NV                                                        =             0x86FB_u32
  E_SIGNED_RGBA8_NV                                                       =             0x86FC_u32
  E_SURFACE_REGISTERED_NV                                                 =             0x86FD_u32
  E_SIGNED_RGB_NV                                                         =             0x86FE_u32
  E_SIGNED_RGB8_NV                                                        =             0x86FF_u32
  E_SURFACE_MAPPED_NV                                                     =             0x8700_u32
  E_SIGNED_LUMINANCE_NV                                                   =             0x8701_u32
  E_SIGNED_LUMINANCE8_NV                                                  =             0x8702_u32
  E_SIGNED_LUMINANCE_ALPHA_NV                                             =             0x8703_u32
  E_SIGNED_LUMINANCE8_ALPHA8_NV                                           =             0x8704_u32
  E_SIGNED_ALPHA_NV                                                       =             0x8705_u32
  E_SIGNED_ALPHA8_NV                                                      =             0x8706_u32
  E_SIGNED_INTENSITY_NV                                                   =             0x8707_u32
  E_SIGNED_INTENSITY8_NV                                                  =             0x8708_u32
  E_DSDT8_NV                                                              =             0x8709_u32
  E_DSDT8_MAG8_NV                                                         =             0x870A_u32
  E_DSDT8_MAG8_INTENSITY8_NV                                              =             0x870B_u32
  E_SIGNED_RGB_UNSIGNED_ALPHA_NV                                          =             0x870C_u32
  E_SIGNED_RGB8_UNSIGNED_ALPHA8_NV                                        =             0x870D_u32
  E_HI_SCALE_NV                                                           =             0x870E_u32
  E_LO_SCALE_NV                                                           =             0x870F_u32
  E_DS_SCALE_NV                                                           =             0x8710_u32
  E_DT_SCALE_NV                                                           =             0x8711_u32
  E_MAGNITUDE_SCALE_NV                                                    =             0x8712_u32
  E_VIBRANCE_SCALE_NV                                                     =             0x8713_u32
  E_HI_BIAS_NV                                                            =             0x8714_u32
  E_LO_BIAS_NV                                                            =             0x8715_u32
  E_DS_BIAS_NV                                                            =             0x8716_u32
  E_DT_BIAS_NV                                                            =             0x8717_u32
  E_MAGNITUDE_BIAS_NV                                                     =             0x8718_u32
  E_VIBRANCE_BIAS_NV                                                      =             0x8719_u32
  E_TEXTURE_BORDER_VALUES_NV                                              =             0x871A_u32
  E_TEXTURE_HI_SIZE_NV                                                    =             0x871B_u32
  E_TEXTURE_LO_SIZE_NV                                                    =             0x871C_u32
  E_TEXTURE_DS_SIZE_NV                                                    =             0x871D_u32
  E_TEXTURE_DT_SIZE_NV                                                    =             0x871E_u32
  E_TEXTURE_MAG_SIZE_NV                                                   =             0x871F_u32
  E_MODELVIEW2_ARB                                                        =             0x8722_u32
  E_MODELVIEW3_ARB                                                        =             0x8723_u32
  E_MODELVIEW4_ARB                                                        =             0x8724_u32
  E_MODELVIEW5_ARB                                                        =             0x8725_u32
  E_MODELVIEW6_ARB                                                        =             0x8726_u32
  E_MODELVIEW7_ARB                                                        =             0x8727_u32
  E_MODELVIEW8_ARB                                                        =             0x8728_u32
  E_MODELVIEW9_ARB                                                        =             0x8729_u32
  E_MODELVIEW10_ARB                                                       =             0x872A_u32
  E_MODELVIEW11_ARB                                                       =             0x872B_u32
  E_MODELVIEW12_ARB                                                       =             0x872C_u32
  E_MODELVIEW13_ARB                                                       =             0x872D_u32
  E_MODELVIEW14_ARB                                                       =             0x872E_u32
  E_MODELVIEW15_ARB                                                       =             0x872F_u32
  E_MODELVIEW16_ARB                                                       =             0x8730_u32
  E_MODELVIEW17_ARB                                                       =             0x8731_u32
  E_MODELVIEW18_ARB                                                       =             0x8732_u32
  E_MODELVIEW19_ARB                                                       =             0x8733_u32
  E_MODELVIEW20_ARB                                                       =             0x8734_u32
  E_MODELVIEW21_ARB                                                       =             0x8735_u32
  E_MODELVIEW22_ARB                                                       =             0x8736_u32
  E_MODELVIEW23_ARB                                                       =             0x8737_u32
  E_MODELVIEW24_ARB                                                       =             0x8738_u32
  E_MODELVIEW25_ARB                                                       =             0x8739_u32
  E_MODELVIEW26_ARB                                                       =             0x873A_u32
  E_MODELVIEW27_ARB                                                       =             0x873B_u32
  E_MODELVIEW28_ARB                                                       =             0x873C_u32
  E_MODELVIEW29_ARB                                                       =             0x873D_u32
  E_MODELVIEW30_ARB                                                       =             0x873E_u32
  E_MODELVIEW31_ARB                                                       =             0x873F_u32
  E_DOT3_RGB_EXT                                                          =             0x8740_u32
  E_Z400_BINARY_AMD                                                       =             0x8740_u32
  E_DOT3_RGBA_EXT                                                         =             0x8741_u32
  E_PROGRAM_BINARY_LENGTH_OES                                             =             0x8741_u32
  E_PROGRAM_BINARY_LENGTH                                                 =             0x8741_u32
  E_MIRROR_CLAMP_ATI                                                      =             0x8742_u32
  E_MIRROR_CLAMP_EXT                                                      =             0x8742_u32
  E_MIRROR_CLAMP_TO_EDGE                                                  =             0x8743_u32
  E_MIRROR_CLAMP_TO_EDGE_ATI                                              =             0x8743_u32
  E_MIRROR_CLAMP_TO_EDGE_EXT                                              =             0x8743_u32
  E_MODULATE_ADD_ATI                                                      =             0x8744_u32
  E_MODULATE_SIGNED_ADD_ATI                                               =             0x8745_u32
  E_MODULATE_SUBTRACT_ATI                                                 =             0x8746_u32
  E_SET_AMD                                                               =             0x874A_u32
  E_REPLACE_VALUE_AMD                                                     =             0x874B_u32
  E_STENCIL_OP_VALUE_AMD                                                  =             0x874C_u32
  E_STENCIL_BACK_OP_VALUE_AMD                                             =             0x874D_u32
  E_VERTEX_ATTRIB_ARRAY_LONG                                              =             0x874E_u32
  E_OCCLUSION_QUERY_EVENT_MASK_AMD                                        =             0x874F_u32
  E_DEPTH_STENCIL_MESA                                                    =             0x8750_u32
  E_UNSIGNED_INT_24_8_MESA                                                =             0x8751_u32
  E_UNSIGNED_INT_8_24_REV_MESA                                            =             0x8752_u32
  E_UNSIGNED_SHORT_15_1_MESA                                              =             0x8753_u32
  E_UNSIGNED_SHORT_1_15_REV_MESA                                          =             0x8754_u32
  E_TRACE_MASK_MESA                                                       =             0x8755_u32
  E_TRACE_NAME_MESA                                                       =             0x8756_u32
  E_YCBCR_MESA                                                            =             0x8757_u32
  E_PACK_INVERT_MESA                                                      =             0x8758_u32
  E_DEBUG_OBJECT_MESA                                                     =             0x8759_u32
  E_TEXTURE_1D_STACK_MESAX                                                =             0x8759_u32
  E_DEBUG_PRINT_MESA                                                      =             0x875A_u32
  E_TEXTURE_2D_STACK_MESAX                                                =             0x875A_u32
  E_DEBUG_ASSERT_MESA                                                     =             0x875B_u32
  E_PROXY_TEXTURE_1D_STACK_MESAX                                          =             0x875B_u32
  E_PROXY_TEXTURE_2D_STACK_MESAX                                          =             0x875C_u32
  E_TEXTURE_1D_STACK_BINDING_MESAX                                        =             0x875D_u32
  E_TEXTURE_2D_STACK_BINDING_MESAX                                        =             0x875E_u32
  E_STATIC_ATI                                                            =             0x8760_u32
  E_DYNAMIC_ATI                                                           =             0x8761_u32
  E_PRESERVE_ATI                                                          =             0x8762_u32
  E_DISCARD_ATI                                                           =             0x8763_u32
  E_BUFFER_SIZE                                                           =             0x8764_u32
  E_BUFFER_SIZE_ARB                                                       =             0x8764_u32
  E_OBJECT_BUFFER_SIZE_ATI                                                =             0x8764_u32
  E_BUFFER_USAGE                                                          =             0x8765_u32
  E_BUFFER_USAGE_ARB                                                      =             0x8765_u32
  E_OBJECT_BUFFER_USAGE_ATI                                               =             0x8765_u32
  E_ARRAY_OBJECT_BUFFER_ATI                                               =             0x8766_u32
  E_ARRAY_OBJECT_OFFSET_ATI                                               =             0x8767_u32
  E_ELEMENT_ARRAY_ATI                                                     =             0x8768_u32
  E_ELEMENT_ARRAY_TYPE_ATI                                                =             0x8769_u32
  E_ELEMENT_ARRAY_POINTER_ATI                                             =             0x876A_u32
  E_MAX_VERTEX_STREAMS_ATI                                                =             0x876B_u32
  E_VERTEX_STREAM0_ATI                                                    =             0x876C_u32
  E_VERTEX_STREAM1_ATI                                                    =             0x876D_u32
  E_VERTEX_STREAM2_ATI                                                    =             0x876E_u32
  E_VERTEX_STREAM3_ATI                                                    =             0x876F_u32
  E_VERTEX_STREAM4_ATI                                                    =             0x8770_u32
  E_VERTEX_STREAM5_ATI                                                    =             0x8771_u32
  E_VERTEX_STREAM6_ATI                                                    =             0x8772_u32
  E_VERTEX_STREAM7_ATI                                                    =             0x8773_u32
  E_VERTEX_SOURCE_ATI                                                     =             0x8774_u32
  E_BUMP_ROT_MATRIX_ATI                                                   =             0x8775_u32
  E_BUMP_ROT_MATRIX_SIZE_ATI                                              =             0x8776_u32
  E_BUMP_NUM_TEX_UNITS_ATI                                                =             0x8777_u32
  E_BUMP_TEX_UNITS_ATI                                                    =             0x8778_u32
  E_DUDV_ATI                                                              =             0x8779_u32
  E_DU8DV8_ATI                                                            =             0x877A_u32
  E_BUMP_ENVMAP_ATI                                                       =             0x877B_u32
  E_BUMP_TARGET_ATI                                                       =             0x877C_u32
  E_VERTEX_SHADER_EXT                                                     =             0x8780_u32
  E_VERTEX_SHADER_BINDING_EXT                                             =             0x8781_u32
  E_OP_INDEX_EXT                                                          =             0x8782_u32
  E_OP_NEGATE_EXT                                                         =             0x8783_u32
  E_OP_DOT3_EXT                                                           =             0x8784_u32
  E_OP_DOT4_EXT                                                           =             0x8785_u32
  E_OP_MUL_EXT                                                            =             0x8786_u32
  E_OP_ADD_EXT                                                            =             0x8787_u32
  E_OP_MADD_EXT                                                           =             0x8788_u32
  E_OP_FRAC_EXT                                                           =             0x8789_u32
  E_OP_MAX_EXT                                                            =             0x878A_u32
  E_OP_MIN_EXT                                                            =             0x878B_u32
  E_OP_SET_GE_EXT                                                         =             0x878C_u32
  E_OP_SET_LT_EXT                                                         =             0x878D_u32
  E_OP_CLAMP_EXT                                                          =             0x878E_u32
  E_OP_FLOOR_EXT                                                          =             0x878F_u32
  E_OP_ROUND_EXT                                                          =             0x8790_u32
  E_OP_EXP_BASE_2_EXT                                                     =             0x8791_u32
  E_OP_LOG_BASE_2_EXT                                                     =             0x8792_u32
  E_OP_POWER_EXT                                                          =             0x8793_u32
  E_OP_RECIP_EXT                                                          =             0x8794_u32
  E_OP_RECIP_SQRT_EXT                                                     =             0x8795_u32
  E_OP_SUB_EXT                                                            =             0x8796_u32
  E_OP_CROSS_PRODUCT_EXT                                                  =             0x8797_u32
  E_OP_MULTIPLY_MATRIX_EXT                                                =             0x8798_u32
  E_OP_MOV_EXT                                                            =             0x8799_u32
  E_OUTPUT_VERTEX_EXT                                                     =             0x879A_u32
  E_OUTPUT_COLOR0_EXT                                                     =             0x879B_u32
  E_OUTPUT_COLOR1_EXT                                                     =             0x879C_u32
  E_OUTPUT_TEXTURE_COORD0_EXT                                             =             0x879D_u32
  E_OUTPUT_TEXTURE_COORD1_EXT                                             =             0x879E_u32
  E_OUTPUT_TEXTURE_COORD2_EXT                                             =             0x879F_u32
  E_OUTPUT_TEXTURE_COORD3_EXT                                             =             0x87A0_u32
  E_OUTPUT_TEXTURE_COORD4_EXT                                             =             0x87A1_u32
  E_OUTPUT_TEXTURE_COORD5_EXT                                             =             0x87A2_u32
  E_OUTPUT_TEXTURE_COORD6_EXT                                             =             0x87A3_u32
  E_OUTPUT_TEXTURE_COORD7_EXT                                             =             0x87A4_u32
  E_OUTPUT_TEXTURE_COORD8_EXT                                             =             0x87A5_u32
  E_OUTPUT_TEXTURE_COORD9_EXT                                             =             0x87A6_u32
  E_OUTPUT_TEXTURE_COORD10_EXT                                            =             0x87A7_u32
  E_OUTPUT_TEXTURE_COORD11_EXT                                            =             0x87A8_u32
  E_OUTPUT_TEXTURE_COORD12_EXT                                            =             0x87A9_u32
  E_OUTPUT_TEXTURE_COORD13_EXT                                            =             0x87AA_u32
  E_OUTPUT_TEXTURE_COORD14_EXT                                            =             0x87AB_u32
  E_OUTPUT_TEXTURE_COORD15_EXT                                            =             0x87AC_u32
  E_OUTPUT_TEXTURE_COORD16_EXT                                            =             0x87AD_u32
  E_OUTPUT_TEXTURE_COORD17_EXT                                            =             0x87AE_u32
  E_OUTPUT_TEXTURE_COORD18_EXT                                            =             0x87AF_u32
  E_OUTPUT_TEXTURE_COORD19_EXT                                            =             0x87B0_u32
  E_OUTPUT_TEXTURE_COORD20_EXT                                            =             0x87B1_u32
  E_OUTPUT_TEXTURE_COORD21_EXT                                            =             0x87B2_u32
  E_OUTPUT_TEXTURE_COORD22_EXT                                            =             0x87B3_u32
  E_OUTPUT_TEXTURE_COORD23_EXT                                            =             0x87B4_u32
  E_OUTPUT_TEXTURE_COORD24_EXT                                            =             0x87B5_u32
  E_OUTPUT_TEXTURE_COORD25_EXT                                            =             0x87B6_u32
  E_OUTPUT_TEXTURE_COORD26_EXT                                            =             0x87B7_u32
  E_OUTPUT_TEXTURE_COORD27_EXT                                            =             0x87B8_u32
  E_OUTPUT_TEXTURE_COORD28_EXT                                            =             0x87B9_u32
  E_OUTPUT_TEXTURE_COORD29_EXT                                            =             0x87BA_u32
  E_OUTPUT_TEXTURE_COORD30_EXT                                            =             0x87BB_u32
  E_OUTPUT_TEXTURE_COORD31_EXT                                            =             0x87BC_u32
  E_OUTPUT_FOG_EXT                                                        =             0x87BD_u32
  E_SCALAR_EXT                                                            =             0x87BE_u32
  E_VECTOR_EXT                                                            =             0x87BF_u32
  E_MATRIX_EXT                                                            =             0x87C0_u32
  E_VARIANT_EXT                                                           =             0x87C1_u32
  E_INVARIANT_EXT                                                         =             0x87C2_u32
  E_LOCAL_CONSTANT_EXT                                                    =             0x87C3_u32
  E_LOCAL_EXT                                                             =             0x87C4_u32
  E_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT                                    =             0x87C5_u32
  E_MAX_VERTEX_SHADER_VARIANTS_EXT                                        =             0x87C6_u32
  E_MAX_VERTEX_SHADER_INVARIANTS_EXT                                      =             0x87C7_u32
  E_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT                                 =             0x87C8_u32
  E_MAX_VERTEX_SHADER_LOCALS_EXT                                          =             0x87C9_u32
  E_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT                          =             0x87CA_u32
  E_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT                              =             0x87CB_u32
  E_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT                       =             0x87CC_u32
  E_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT                            =             0x87CD_u32
  E_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT                                =             0x87CE_u32
  E_VERTEX_SHADER_INSTRUCTIONS_EXT                                        =             0x87CF_u32
  E_VERTEX_SHADER_VARIANTS_EXT                                            =             0x87D0_u32
  E_VERTEX_SHADER_INVARIANTS_EXT                                          =             0x87D1_u32
  E_VERTEX_SHADER_LOCAL_CONSTANTS_EXT                                     =             0x87D2_u32
  E_VERTEX_SHADER_LOCALS_EXT                                              =             0x87D3_u32
  E_VERTEX_SHADER_OPTIMIZED_EXT                                           =             0x87D4_u32
  E_X_EXT                                                                 =             0x87D5_u32
  E_Y_EXT                                                                 =             0x87D6_u32
  E_Z_EXT                                                                 =             0x87D7_u32
  E_W_EXT                                                                 =             0x87D8_u32
  E_NEGATIVE_X_EXT                                                        =             0x87D9_u32
  E_NEGATIVE_Y_EXT                                                        =             0x87DA_u32
  E_NEGATIVE_Z_EXT                                                        =             0x87DB_u32
  E_NEGATIVE_W_EXT                                                        =             0x87DC_u32
  E_ZERO_EXT                                                              =             0x87DD_u32
  E_ONE_EXT                                                               =             0x87DE_u32
  E_NEGATIVE_ONE_EXT                                                      =             0x87DF_u32
  E_NORMALIZED_RANGE_EXT                                                  =             0x87E0_u32
  E_FULL_RANGE_EXT                                                        =             0x87E1_u32
  E_CURRENT_VERTEX_EXT                                                    =             0x87E2_u32
  E_MVP_MATRIX_EXT                                                        =             0x87E3_u32
  E_VARIANT_VALUE_EXT                                                     =             0x87E4_u32
  E_VARIANT_DATATYPE_EXT                                                  =             0x87E5_u32
  E_VARIANT_ARRAY_STRIDE_EXT                                              =             0x87E6_u32
  E_VARIANT_ARRAY_TYPE_EXT                                                =             0x87E7_u32
  E_VARIANT_ARRAY_EXT                                                     =             0x87E8_u32
  E_VARIANT_ARRAY_POINTER_EXT                                             =             0x87E9_u32
  E_INVARIANT_VALUE_EXT                                                   =             0x87EA_u32
  E_INVARIANT_DATATYPE_EXT                                                =             0x87EB_u32
  E_LOCAL_CONSTANT_VALUE_EXT                                              =             0x87EC_u32
  E_LOCAL_CONSTANT_DATATYPE_EXT                                           =             0x87ED_u32
  E_ATC_RGBA_INTERPOLATED_ALPHA_AMD                                       =             0x87EE_u32
  E_PN_TRIANGLES_ATI                                                      =             0x87F0_u32
  E_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI                                =             0x87F1_u32
  E_PN_TRIANGLES_POINT_MODE_ATI                                           =             0x87F2_u32
  E_PN_TRIANGLES_NORMAL_MODE_ATI                                          =             0x87F3_u32
  E_PN_TRIANGLES_TESSELATION_LEVEL_ATI                                    =             0x87F4_u32
  E_PN_TRIANGLES_POINT_MODE_LINEAR_ATI                                    =             0x87F5_u32
  E_PN_TRIANGLES_POINT_MODE_CUBIC_ATI                                     =             0x87F6_u32
  E_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI                                   =             0x87F7_u32
  E_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI                                =             0x87F8_u32
  E_3DC_X_AMD                                                             =             0x87F9_u32
  E_3DC_XY_AMD                                                            =             0x87FA_u32
  E_VBO_FREE_MEMORY_ATI                                                   =             0x87FB_u32
  E_TEXTURE_FREE_MEMORY_ATI                                               =             0x87FC_u32
  E_RENDERBUFFER_FREE_MEMORY_ATI                                          =             0x87FD_u32
  E_NUM_PROGRAM_BINARY_FORMATS                                            =             0x87FE_u32
  E_NUM_PROGRAM_BINARY_FORMATS_OES                                        =             0x87FE_u32
  E_PROGRAM_BINARY_FORMATS                                                =             0x87FF_u32
  E_PROGRAM_BINARY_FORMATS_OES                                            =             0x87FF_u32
  E_STENCIL_BACK_FUNC                                                     =             0x8800_u32
  E_STENCIL_BACK_FUNC_ATI                                                 =             0x8800_u32
  E_STENCIL_BACK_FAIL                                                     =             0x8801_u32
  E_STENCIL_BACK_FAIL_ATI                                                 =             0x8801_u32
  E_STENCIL_BACK_PASS_DEPTH_FAIL                                          =             0x8802_u32
  E_STENCIL_BACK_PASS_DEPTH_FAIL_ATI                                      =             0x8802_u32
  E_STENCIL_BACK_PASS_DEPTH_PASS                                          =             0x8803_u32
  E_STENCIL_BACK_PASS_DEPTH_PASS_ATI                                      =             0x8803_u32
  E_FRAGMENT_PROGRAM_ARB                                                  =             0x8804_u32
  E_PROGRAM_ALU_INSTRUCTIONS_ARB                                          =             0x8805_u32
  E_PROGRAM_TEX_INSTRUCTIONS_ARB                                          =             0x8806_u32
  E_PROGRAM_TEX_INDIRECTIONS_ARB                                          =             0x8807_u32
  E_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB                                   =             0x8808_u32
  E_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB                                   =             0x8809_u32
  E_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB                                   =             0x880A_u32
  E_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB                                      =             0x880B_u32
  E_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB                                      =             0x880C_u32
  E_MAX_PROGRAM_TEX_INDIRECTIONS_ARB                                      =             0x880D_u32
  E_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB                               =             0x880E_u32
  E_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB                               =             0x880F_u32
  E_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB                               =             0x8810_u32
  E_RGBA32F                                                               =             0x8814_u32
  E_RGBA32F_ARB                                                           =             0x8814_u32
  E_RGBA32F_EXT                                                           =             0x8814_u32
  E_RGBA_FLOAT32_APPLE                                                    =             0x8814_u32
  E_RGBA_FLOAT32_ATI                                                      =             0x8814_u32
  E_RGB32F                                                                =             0x8815_u32
  E_RGB32F_ARB                                                            =             0x8815_u32
  E_RGB32F_EXT                                                            =             0x8815_u32
  E_RGB_FLOAT32_APPLE                                                     =             0x8815_u32
  E_RGB_FLOAT32_ATI                                                       =             0x8815_u32
  E_ALPHA32F_ARB                                                          =             0x8816_u32
  E_ALPHA32F_EXT                                                          =             0x8816_u32
  E_ALPHA_FLOAT32_APPLE                                                   =             0x8816_u32
  E_ALPHA_FLOAT32_ATI                                                     =             0x8816_u32
  E_INTENSITY32F_ARB                                                      =             0x8817_u32
  E_INTENSITY_FLOAT32_APPLE                                               =             0x8817_u32
  E_INTENSITY_FLOAT32_ATI                                                 =             0x8817_u32
  E_LUMINANCE32F_ARB                                                      =             0x8818_u32
  E_LUMINANCE32F_EXT                                                      =             0x8818_u32
  E_LUMINANCE_FLOAT32_APPLE                                               =             0x8818_u32
  E_LUMINANCE_FLOAT32_ATI                                                 =             0x8818_u32
  E_LUMINANCE_ALPHA32F_ARB                                                =             0x8819_u32
  E_LUMINANCE_ALPHA32F_EXT                                                =             0x8819_u32
  E_LUMINANCE_ALPHA_FLOAT32_APPLE                                         =             0x8819_u32
  E_LUMINANCE_ALPHA_FLOAT32_ATI                                           =             0x8819_u32
  E_RGBA16F                                                               =             0x881A_u32
  E_RGBA16F_ARB                                                           =             0x881A_u32
  E_RGBA16F_EXT                                                           =             0x881A_u32
  E_RGBA_FLOAT16_APPLE                                                    =             0x881A_u32
  E_RGBA_FLOAT16_ATI                                                      =             0x881A_u32
  E_RGB16F                                                                =             0x881B_u32
  E_RGB16F_ARB                                                            =             0x881B_u32
  E_RGB16F_EXT                                                            =             0x881B_u32
  E_RGB_FLOAT16_APPLE                                                     =             0x881B_u32
  E_RGB_FLOAT16_ATI                                                       =             0x881B_u32
  E_ALPHA16F_ARB                                                          =             0x881C_u32
  E_ALPHA16F_EXT                                                          =             0x881C_u32
  E_ALPHA_FLOAT16_APPLE                                                   =             0x881C_u32
  E_ALPHA_FLOAT16_ATI                                                     =             0x881C_u32
  E_INTENSITY16F_ARB                                                      =             0x881D_u32
  E_INTENSITY_FLOAT16_APPLE                                               =             0x881D_u32
  E_INTENSITY_FLOAT16_ATI                                                 =             0x881D_u32
  E_LUMINANCE16F_ARB                                                      =             0x881E_u32
  E_LUMINANCE16F_EXT                                                      =             0x881E_u32
  E_LUMINANCE_FLOAT16_APPLE                                               =             0x881E_u32
  E_LUMINANCE_FLOAT16_ATI                                                 =             0x881E_u32
  E_LUMINANCE_ALPHA16F_ARB                                                =             0x881F_u32
  E_LUMINANCE_ALPHA16F_EXT                                                =             0x881F_u32
  E_LUMINANCE_ALPHA_FLOAT16_APPLE                                         =             0x881F_u32
  E_LUMINANCE_ALPHA_FLOAT16_ATI                                           =             0x881F_u32
  E_RGBA_FLOAT_MODE_ARB                                                   =             0x8820_u32
  E_RGBA_FLOAT_MODE_ATI                                                   =             0x8820_u32
  E_WRITEONLY_RENDERING_QCOM                                              =             0x8823_u32
  E_MAX_DRAW_BUFFERS                                                      =             0x8824_u32
  E_MAX_DRAW_BUFFERS_ARB                                                  =             0x8824_u32
  E_MAX_DRAW_BUFFERS_ATI                                                  =             0x8824_u32
  E_MAX_DRAW_BUFFERS_EXT                                                  =             0x8824_u32
  E_MAX_DRAW_BUFFERS_NV                                                   =             0x8824_u32
  E_DRAW_BUFFER0                                                          =             0x8825_u32
  E_DRAW_BUFFER0_ARB                                                      =             0x8825_u32
  E_DRAW_BUFFER0_ATI                                                      =             0x8825_u32
  E_DRAW_BUFFER0_EXT                                                      =             0x8825_u32
  E_DRAW_BUFFER0_NV                                                       =             0x8825_u32
  E_DRAW_BUFFER1                                                          =             0x8826_u32
  E_DRAW_BUFFER1_ARB                                                      =             0x8826_u32
  E_DRAW_BUFFER1_ATI                                                      =             0x8826_u32
  E_DRAW_BUFFER1_EXT                                                      =             0x8826_u32
  E_DRAW_BUFFER1_NV                                                       =             0x8826_u32
  E_DRAW_BUFFER2                                                          =             0x8827_u32
  E_DRAW_BUFFER2_ARB                                                      =             0x8827_u32
  E_DRAW_BUFFER2_ATI                                                      =             0x8827_u32
  E_DRAW_BUFFER2_EXT                                                      =             0x8827_u32
  E_DRAW_BUFFER2_NV                                                       =             0x8827_u32
  E_DRAW_BUFFER3                                                          =             0x8828_u32
  E_DRAW_BUFFER3_ARB                                                      =             0x8828_u32
  E_DRAW_BUFFER3_ATI                                                      =             0x8828_u32
  E_DRAW_BUFFER3_EXT                                                      =             0x8828_u32
  E_DRAW_BUFFER3_NV                                                       =             0x8828_u32
  E_DRAW_BUFFER4                                                          =             0x8829_u32
  E_DRAW_BUFFER4_ARB                                                      =             0x8829_u32
  E_DRAW_BUFFER4_ATI                                                      =             0x8829_u32
  E_DRAW_BUFFER4_EXT                                                      =             0x8829_u32
  E_DRAW_BUFFER4_NV                                                       =             0x8829_u32
  E_DRAW_BUFFER5                                                          =             0x882A_u32
  E_DRAW_BUFFER5_ARB                                                      =             0x882A_u32
  E_DRAW_BUFFER5_ATI                                                      =             0x882A_u32
  E_DRAW_BUFFER5_EXT                                                      =             0x882A_u32
  E_DRAW_BUFFER5_NV                                                       =             0x882A_u32
  E_DRAW_BUFFER6                                                          =             0x882B_u32
  E_DRAW_BUFFER6_ARB                                                      =             0x882B_u32
  E_DRAW_BUFFER6_ATI                                                      =             0x882B_u32
  E_DRAW_BUFFER6_EXT                                                      =             0x882B_u32
  E_DRAW_BUFFER6_NV                                                       =             0x882B_u32
  E_DRAW_BUFFER7                                                          =             0x882C_u32
  E_DRAW_BUFFER7_ARB                                                      =             0x882C_u32
  E_DRAW_BUFFER7_ATI                                                      =             0x882C_u32
  E_DRAW_BUFFER7_EXT                                                      =             0x882C_u32
  E_DRAW_BUFFER7_NV                                                       =             0x882C_u32
  E_DRAW_BUFFER8                                                          =             0x882D_u32
  E_DRAW_BUFFER8_ARB                                                      =             0x882D_u32
  E_DRAW_BUFFER8_ATI                                                      =             0x882D_u32
  E_DRAW_BUFFER8_EXT                                                      =             0x882D_u32
  E_DRAW_BUFFER8_NV                                                       =             0x882D_u32
  E_DRAW_BUFFER9                                                          =             0x882E_u32
  E_DRAW_BUFFER9_ARB                                                      =             0x882E_u32
  E_DRAW_BUFFER9_ATI                                                      =             0x882E_u32
  E_DRAW_BUFFER9_EXT                                                      =             0x882E_u32
  E_DRAW_BUFFER9_NV                                                       =             0x882E_u32
  E_DRAW_BUFFER10                                                         =             0x882F_u32
  E_DRAW_BUFFER10_ARB                                                     =             0x882F_u32
  E_DRAW_BUFFER10_ATI                                                     =             0x882F_u32
  E_DRAW_BUFFER10_EXT                                                     =             0x882F_u32
  E_DRAW_BUFFER10_NV                                                      =             0x882F_u32
  E_DRAW_BUFFER11                                                         =             0x8830_u32
  E_DRAW_BUFFER11_ARB                                                     =             0x8830_u32
  E_DRAW_BUFFER11_ATI                                                     =             0x8830_u32
  E_DRAW_BUFFER11_EXT                                                     =             0x8830_u32
  E_DRAW_BUFFER11_NV                                                      =             0x8830_u32
  E_DRAW_BUFFER12                                                         =             0x8831_u32
  E_DRAW_BUFFER12_ARB                                                     =             0x8831_u32
  E_DRAW_BUFFER12_ATI                                                     =             0x8831_u32
  E_DRAW_BUFFER12_EXT                                                     =             0x8831_u32
  E_DRAW_BUFFER12_NV                                                      =             0x8831_u32
  E_DRAW_BUFFER13                                                         =             0x8832_u32
  E_DRAW_BUFFER13_ARB                                                     =             0x8832_u32
  E_DRAW_BUFFER13_ATI                                                     =             0x8832_u32
  E_DRAW_BUFFER13_EXT                                                     =             0x8832_u32
  E_DRAW_BUFFER13_NV                                                      =             0x8832_u32
  E_DRAW_BUFFER14                                                         =             0x8833_u32
  E_DRAW_BUFFER14_ARB                                                     =             0x8833_u32
  E_DRAW_BUFFER14_ATI                                                     =             0x8833_u32
  E_DRAW_BUFFER14_EXT                                                     =             0x8833_u32
  E_DRAW_BUFFER14_NV                                                      =             0x8833_u32
  E_DRAW_BUFFER15                                                         =             0x8834_u32
  E_DRAW_BUFFER15_ARB                                                     =             0x8834_u32
  E_DRAW_BUFFER15_ATI                                                     =             0x8834_u32
  E_DRAW_BUFFER15_EXT                                                     =             0x8834_u32
  E_DRAW_BUFFER15_NV                                                      =             0x8834_u32
  E_COLOR_CLEAR_UNCLAMPED_VALUE_ATI                                       =             0x8835_u32
  E_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI                                    =             0x8837_u32
  E_BLEND_EQUATION_ALPHA                                                  =             0x883D_u32
  E_BLEND_EQUATION_ALPHA_EXT                                              =             0x883D_u32
  E_BLEND_EQUATION_ALPHA_OES                                              =             0x883D_u32
  E_SUBSAMPLE_DISTANCE_AMD                                                =             0x883F_u32
  E_MATRIX_PALETTE_ARB                                                    =             0x8840_u32
  E_MATRIX_PALETTE_OES                                                    =             0x8840_u32
  E_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB                                    =             0x8841_u32
  E_MAX_PALETTE_MATRICES_ARB                                              =             0x8842_u32
  E_MAX_PALETTE_MATRICES_OES                                              =             0x8842_u32
  E_CURRENT_PALETTE_MATRIX_ARB                                            =             0x8843_u32
  E_CURRENT_PALETTE_MATRIX_OES                                            =             0x8843_u32
  E_MATRIX_INDEX_ARRAY_ARB                                                =             0x8844_u32
  E_MATRIX_INDEX_ARRAY_OES                                                =             0x8844_u32
  E_CURRENT_MATRIX_INDEX_ARB                                              =             0x8845_u32
  E_MATRIX_INDEX_ARRAY_SIZE_ARB                                           =             0x8846_u32
  E_MATRIX_INDEX_ARRAY_SIZE_OES                                           =             0x8846_u32
  E_MATRIX_INDEX_ARRAY_TYPE_ARB                                           =             0x8847_u32
  E_MATRIX_INDEX_ARRAY_TYPE_OES                                           =             0x8847_u32
  E_MATRIX_INDEX_ARRAY_STRIDE_ARB                                         =             0x8848_u32
  E_MATRIX_INDEX_ARRAY_STRIDE_OES                                         =             0x8848_u32
  E_MATRIX_INDEX_ARRAY_POINTER_ARB                                        =             0x8849_u32
  E_MATRIX_INDEX_ARRAY_POINTER_OES                                        =             0x8849_u32
  E_TEXTURE_DEPTH_SIZE                                                    =             0x884A_u32
  E_TEXTURE_DEPTH_SIZE_ARB                                                =             0x884A_u32
  E_DEPTH_TEXTURE_MODE                                                    =             0x884B_u32
  E_DEPTH_TEXTURE_MODE_ARB                                                =             0x884B_u32
  E_TEXTURE_COMPARE_MODE                                                  =             0x884C_u32
  E_TEXTURE_COMPARE_MODE_ARB                                              =             0x884C_u32
  E_TEXTURE_COMPARE_MODE_EXT                                              =             0x884C_u32
  E_TEXTURE_COMPARE_FUNC                                                  =             0x884D_u32
  E_TEXTURE_COMPARE_FUNC_ARB                                              =             0x884D_u32
  E_TEXTURE_COMPARE_FUNC_EXT                                              =             0x884D_u32
  E_COMPARE_R_TO_TEXTURE                                                  =             0x884E_u32
  E_COMPARE_R_TO_TEXTURE_ARB                                              =             0x884E_u32
  E_COMPARE_REF_DEPTH_TO_TEXTURE_EXT                                      =             0x884E_u32
  E_COMPARE_REF_TO_TEXTURE                                                =             0x884E_u32
  E_COMPARE_REF_TO_TEXTURE_EXT                                            =             0x884E_u32
  E_TEXTURE_CUBE_MAP_SEAMLESS                                             =             0x884F_u32
  E_OFFSET_PROJECTIVE_TEXTURE_2D_NV                                       =             0x8850_u32
  E_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV                                 =             0x8851_u32
  E_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV                                =             0x8852_u32
  E_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV                          =             0x8853_u32
  E_OFFSET_HILO_TEXTURE_2D_NV                                             =             0x8854_u32
  E_OFFSET_HILO_TEXTURE_RECTANGLE_NV                                      =             0x8855_u32
  E_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV                                  =             0x8856_u32
  E_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV                           =             0x8857_u32
  E_DEPENDENT_HILO_TEXTURE_2D_NV                                          =             0x8858_u32
  E_DEPENDENT_RGB_TEXTURE_3D_NV                                           =             0x8859_u32
  E_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV                                     =             0x885A_u32
  E_DOT_PRODUCT_PASS_THROUGH_NV                                           =             0x885B_u32
  E_DOT_PRODUCT_TEXTURE_1D_NV                                             =             0x885C_u32
  E_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV                                   =             0x885D_u32
  E_HILO8_NV                                                              =             0x885E_u32
  E_SIGNED_HILO8_NV                                                       =             0x885F_u32
  E_FORCE_BLUE_TO_ONE_NV                                                  =             0x8860_u32
  E_POINT_SPRITE                                                          =             0x8861_u32
  E_POINT_SPRITE_ARB                                                      =             0x8861_u32
  E_POINT_SPRITE_NV                                                       =             0x8861_u32
  E_POINT_SPRITE_OES                                                      =             0x8861_u32
  E_COORD_REPLACE                                                         =             0x8862_u32
  E_COORD_REPLACE_ARB                                                     =             0x8862_u32
  E_COORD_REPLACE_NV                                                      =             0x8862_u32
  E_COORD_REPLACE_OES                                                     =             0x8862_u32
  E_POINT_SPRITE_R_MODE_NV                                                =             0x8863_u32
  E_PIXEL_COUNTER_BITS_NV                                                 =             0x8864_u32
  E_QUERY_COUNTER_BITS                                                    =             0x8864_u32
  E_QUERY_COUNTER_BITS_ARB                                                =             0x8864_u32
  E_QUERY_COUNTER_BITS_EXT                                                =             0x8864_u32
  E_CURRENT_OCCLUSION_QUERY_ID_NV                                         =             0x8865_u32
  E_CURRENT_QUERY                                                         =             0x8865_u32
  E_CURRENT_QUERY_ARB                                                     =             0x8865_u32
  E_CURRENT_QUERY_EXT                                                     =             0x8865_u32
  E_PIXEL_COUNT_NV                                                        =             0x8866_u32
  E_QUERY_RESULT                                                          =             0x8866_u32
  E_QUERY_RESULT_ARB                                                      =             0x8866_u32
  E_QUERY_RESULT_EXT                                                      =             0x8866_u32
  E_PIXEL_COUNT_AVAILABLE_NV                                              =             0x8867_u32
  E_QUERY_RESULT_AVAILABLE                                                =             0x8867_u32
  E_QUERY_RESULT_AVAILABLE_ARB                                            =             0x8867_u32
  E_QUERY_RESULT_AVAILABLE_EXT                                            =             0x8867_u32
  E_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV                              =             0x8868_u32
  E_MAX_VERTEX_ATTRIBS                                                    =             0x8869_u32
  E_MAX_VERTEX_ATTRIBS_ARB                                                =             0x8869_u32
  E_VERTEX_ATTRIB_ARRAY_NORMALIZED                                        =             0x886A_u32
  E_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB                                    =             0x886A_u32
  E_MAX_TESS_CONTROL_INPUT_COMPONENTS                                     =             0x886C_u32
  E_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT                                 =             0x886C_u32
  E_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES                                 =             0x886C_u32
  E_MAX_TESS_EVALUATION_INPUT_COMPONENTS                                  =             0x886D_u32
  E_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT                              =             0x886D_u32
  E_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES                              =             0x886D_u32
  E_DEPTH_STENCIL_TO_RGBA_NV                                              =             0x886E_u32
  E_DEPTH_STENCIL_TO_BGRA_NV                                              =             0x886F_u32
  E_FRAGMENT_PROGRAM_NV                                                   =             0x8870_u32
  E_MAX_TEXTURE_COORDS                                                    =             0x8871_u32
  E_MAX_TEXTURE_COORDS_ARB                                                =             0x8871_u32
  E_MAX_TEXTURE_COORDS_NV                                                 =             0x8871_u32
  E_MAX_TEXTURE_IMAGE_UNITS                                               =             0x8872_u32
  E_MAX_TEXTURE_IMAGE_UNITS_ARB                                           =             0x8872_u32
  E_MAX_TEXTURE_IMAGE_UNITS_NV                                            =             0x8872_u32
  E_FRAGMENT_PROGRAM_BINDING_NV                                           =             0x8873_u32
  E_PROGRAM_ERROR_STRING_ARB                                              =             0x8874_u32
  E_PROGRAM_ERROR_STRING_NV                                               =             0x8874_u32
  E_PROGRAM_FORMAT_ASCII_ARB                                              =             0x8875_u32
  E_PROGRAM_FORMAT_ARB                                                    =             0x8876_u32
  E_WRITE_PIXEL_DATA_RANGE_NV                                             =             0x8878_u32
  E_READ_PIXEL_DATA_RANGE_NV                                              =             0x8879_u32
  E_WRITE_PIXEL_DATA_RANGE_LENGTH_NV                                      =             0x887A_u32
  E_READ_PIXEL_DATA_RANGE_LENGTH_NV                                       =             0x887B_u32
  E_WRITE_PIXEL_DATA_RANGE_POINTER_NV                                     =             0x887C_u32
  E_READ_PIXEL_DATA_RANGE_POINTER_NV                                      =             0x887D_u32
  E_GEOMETRY_SHADER_INVOCATIONS                                           =             0x887F_u32
  E_GEOMETRY_SHADER_INVOCATIONS_EXT                                       =             0x887F_u32
  E_GEOMETRY_SHADER_INVOCATIONS_OES                                       =             0x887F_u32
  E_FLOAT_R_NV                                                            =             0x8880_u32
  E_FLOAT_RG_NV                                                           =             0x8881_u32
  E_FLOAT_RGB_NV                                                          =             0x8882_u32
  E_FLOAT_RGBA_NV                                                         =             0x8883_u32
  E_FLOAT_R16_NV                                                          =             0x8884_u32
  E_FLOAT_R32_NV                                                          =             0x8885_u32
  E_FLOAT_RG16_NV                                                         =             0x8886_u32
  E_FLOAT_RG32_NV                                                         =             0x8887_u32
  E_FLOAT_RGB16_NV                                                        =             0x8888_u32
  E_FLOAT_RGB32_NV                                                        =             0x8889_u32
  E_FLOAT_RGBA16_NV                                                       =             0x888A_u32
  E_FLOAT_RGBA32_NV                                                       =             0x888B_u32
  E_TEXTURE_FLOAT_COMPONENTS_NV                                           =             0x888C_u32
  E_FLOAT_CLEAR_COLOR_VALUE_NV                                            =             0x888D_u32
  E_FLOAT_RGBA_MODE_NV                                                    =             0x888E_u32
  E_TEXTURE_UNSIGNED_REMAP_MODE_NV                                        =             0x888F_u32
  E_DEPTH_BOUNDS_TEST_EXT                                                 =             0x8890_u32
  E_DEPTH_BOUNDS_EXT                                                      =             0x8891_u32
  E_ARRAY_BUFFER                                                          =             0x8892_u32
  E_ARRAY_BUFFER_ARB                                                      =             0x8892_u32
  E_ELEMENT_ARRAY_BUFFER                                                  =             0x8893_u32
  E_ELEMENT_ARRAY_BUFFER_ARB                                              =             0x8893_u32
  E_ARRAY_BUFFER_BINDING                                                  =             0x8894_u32
  E_ARRAY_BUFFER_BINDING_ARB                                              =             0x8894_u32
  E_ELEMENT_ARRAY_BUFFER_BINDING                                          =             0x8895_u32
  E_ELEMENT_ARRAY_BUFFER_BINDING_ARB                                      =             0x8895_u32
  E_VERTEX_ARRAY_BUFFER_BINDING                                           =             0x8896_u32
  E_VERTEX_ARRAY_BUFFER_BINDING_ARB                                       =             0x8896_u32
  E_NORMAL_ARRAY_BUFFER_BINDING                                           =             0x8897_u32
  E_NORMAL_ARRAY_BUFFER_BINDING_ARB                                       =             0x8897_u32
  E_COLOR_ARRAY_BUFFER_BINDING                                            =             0x8898_u32
  E_COLOR_ARRAY_BUFFER_BINDING_ARB                                        =             0x8898_u32
  E_INDEX_ARRAY_BUFFER_BINDING                                            =             0x8899_u32
  E_INDEX_ARRAY_BUFFER_BINDING_ARB                                        =             0x8899_u32
  E_TEXTURE_COORD_ARRAY_BUFFER_BINDING                                    =             0x889A_u32
  E_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB                                =             0x889A_u32
  E_EDGE_FLAG_ARRAY_BUFFER_BINDING                                        =             0x889B_u32
  E_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB                                    =             0x889B_u32
  E_SECONDARY_COLOR_ARRAY_BUFFER_BINDING                                  =             0x889C_u32
  E_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB                              =             0x889C_u32
  E_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB                               =             0x889D_u32
  E_FOG_COORDINATE_ARRAY_BUFFER_BINDING                                   =             0x889D_u32
  E_FOG_COORD_ARRAY_BUFFER_BINDING                                        =             0x889D_u32
  E_WEIGHT_ARRAY_BUFFER_BINDING                                           =             0x889E_u32
  E_WEIGHT_ARRAY_BUFFER_BINDING_ARB                                       =             0x889E_u32
  E_WEIGHT_ARRAY_BUFFER_BINDING_OES                                       =             0x889E_u32
  E_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING                                    =             0x889F_u32
  E_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB                                =             0x889F_u32
  E_PROGRAM_INSTRUCTIONS_ARB                                              =             0x88A0_u32
  E_MAX_PROGRAM_INSTRUCTIONS_ARB                                          =             0x88A1_u32
  E_PROGRAM_NATIVE_INSTRUCTIONS_ARB                                       =             0x88A2_u32
  E_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB                                   =             0x88A3_u32
  E_PROGRAM_TEMPORARIES_ARB                                               =             0x88A4_u32
  E_MAX_PROGRAM_TEMPORARIES_ARB                                           =             0x88A5_u32
  E_PROGRAM_NATIVE_TEMPORARIES_ARB                                        =             0x88A6_u32
  E_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB                                    =             0x88A7_u32
  E_PROGRAM_PARAMETERS_ARB                                                =             0x88A8_u32
  E_MAX_PROGRAM_PARAMETERS_ARB                                            =             0x88A9_u32
  E_PROGRAM_NATIVE_PARAMETERS_ARB                                         =             0x88AA_u32
  E_MAX_PROGRAM_NATIVE_PARAMETERS_ARB                                     =             0x88AB_u32
  E_PROGRAM_ATTRIBS_ARB                                                   =             0x88AC_u32
  E_MAX_PROGRAM_ATTRIBS_ARB                                               =             0x88AD_u32
  E_PROGRAM_NATIVE_ATTRIBS_ARB                                            =             0x88AE_u32
  E_MAX_PROGRAM_NATIVE_ATTRIBS_ARB                                        =             0x88AF_u32
  E_PROGRAM_ADDRESS_REGISTERS_ARB                                         =             0x88B0_u32
  E_MAX_PROGRAM_ADDRESS_REGISTERS_ARB                                     =             0x88B1_u32
  E_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB                                  =             0x88B2_u32
  E_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB                              =             0x88B3_u32
  E_MAX_PROGRAM_LOCAL_PARAMETERS_ARB                                      =             0x88B4_u32
  E_MAX_PROGRAM_ENV_PARAMETERS_ARB                                        =             0x88B5_u32
  E_PROGRAM_UNDER_NATIVE_LIMITS_ARB                                       =             0x88B6_u32
  E_TRANSPOSE_CURRENT_MATRIX_ARB                                          =             0x88B7_u32
  E_READ_ONLY                                                             =             0x88B8_u32
  E_READ_ONLY_ARB                                                         =             0x88B8_u32
  E_WRITE_ONLY                                                            =             0x88B9_u32
  E_WRITE_ONLY_ARB                                                        =             0x88B9_u32
  E_WRITE_ONLY_OES                                                        =             0x88B9_u32
  E_READ_WRITE                                                            =             0x88BA_u32
  E_READ_WRITE_ARB                                                        =             0x88BA_u32
  E_BUFFER_ACCESS                                                         =             0x88BB_u32
  E_BUFFER_ACCESS_ARB                                                     =             0x88BB_u32
  E_BUFFER_ACCESS_OES                                                     =             0x88BB_u32
  E_BUFFER_MAPPED                                                         =             0x88BC_u32
  E_BUFFER_MAPPED_ARB                                                     =             0x88BC_u32
  E_BUFFER_MAPPED_OES                                                     =             0x88BC_u32
  E_BUFFER_MAP_POINTER                                                    =             0x88BD_u32
  E_BUFFER_MAP_POINTER_ARB                                                =             0x88BD_u32
  E_BUFFER_MAP_POINTER_OES                                                =             0x88BD_u32
  E_WRITE_DISCARD_NV                                                      =             0x88BE_u32
  E_TIME_ELAPSED                                                          =             0x88BF_u32
  E_TIME_ELAPSED_EXT                                                      =             0x88BF_u32
  E_MATRIX0_ARB                                                           =             0x88C0_u32
  E_MATRIX1_ARB                                                           =             0x88C1_u32
  E_MATRIX2_ARB                                                           =             0x88C2_u32
  E_MATRIX3_ARB                                                           =             0x88C3_u32
  E_MATRIX4_ARB                                                           =             0x88C4_u32
  E_MATRIX5_ARB                                                           =             0x88C5_u32
  E_MATRIX6_ARB                                                           =             0x88C6_u32
  E_MATRIX7_ARB                                                           =             0x88C7_u32
  E_MATRIX8_ARB                                                           =             0x88C8_u32
  E_MATRIX9_ARB                                                           =             0x88C9_u32
  E_MATRIX10_ARB                                                          =             0x88CA_u32
  E_MATRIX11_ARB                                                          =             0x88CB_u32
  E_MATRIX12_ARB                                                          =             0x88CC_u32
  E_MATRIX13_ARB                                                          =             0x88CD_u32
  E_MATRIX14_ARB                                                          =             0x88CE_u32
  E_MATRIX15_ARB                                                          =             0x88CF_u32
  E_MATRIX16_ARB                                                          =             0x88D0_u32
  E_MATRIX17_ARB                                                          =             0x88D1_u32
  E_MATRIX18_ARB                                                          =             0x88D2_u32
  E_MATRIX19_ARB                                                          =             0x88D3_u32
  E_MATRIX20_ARB                                                          =             0x88D4_u32
  E_MATRIX21_ARB                                                          =             0x88D5_u32
  E_MATRIX22_ARB                                                          =             0x88D6_u32
  E_MATRIX23_ARB                                                          =             0x88D7_u32
  E_MATRIX24_ARB                                                          =             0x88D8_u32
  E_MATRIX25_ARB                                                          =             0x88D9_u32
  E_MATRIX26_ARB                                                          =             0x88DA_u32
  E_MATRIX27_ARB                                                          =             0x88DB_u32
  E_MATRIX28_ARB                                                          =             0x88DC_u32
  E_MATRIX29_ARB                                                          =             0x88DD_u32
  E_MATRIX30_ARB                                                          =             0x88DE_u32
  E_MATRIX31_ARB                                                          =             0x88DF_u32
  E_STREAM_DRAW                                                           =             0x88E0_u32
  E_STREAM_DRAW_ARB                                                       =             0x88E0_u32
  E_STREAM_READ                                                           =             0x88E1_u32
  E_STREAM_READ_ARB                                                       =             0x88E1_u32
  E_STREAM_COPY                                                           =             0x88E2_u32
  E_STREAM_COPY_ARB                                                       =             0x88E2_u32
  E_STATIC_DRAW                                                           =             0x88E4_u32
  E_STATIC_DRAW_ARB                                                       =             0x88E4_u32
  E_STATIC_READ                                                           =             0x88E5_u32
  E_STATIC_READ_ARB                                                       =             0x88E5_u32
  E_STATIC_COPY                                                           =             0x88E6_u32
  E_STATIC_COPY_ARB                                                       =             0x88E6_u32
  E_DYNAMIC_DRAW                                                          =             0x88E8_u32
  E_DYNAMIC_DRAW_ARB                                                      =             0x88E8_u32
  E_DYNAMIC_READ                                                          =             0x88E9_u32
  E_DYNAMIC_READ_ARB                                                      =             0x88E9_u32
  E_DYNAMIC_COPY                                                          =             0x88EA_u32
  E_DYNAMIC_COPY_ARB                                                      =             0x88EA_u32
  E_PIXEL_PACK_BUFFER                                                     =             0x88EB_u32
  E_PIXEL_PACK_BUFFER_ARB                                                 =             0x88EB_u32
  E_PIXEL_PACK_BUFFER_EXT                                                 =             0x88EB_u32
  E_PIXEL_UNPACK_BUFFER                                                   =             0x88EC_u32
  E_PIXEL_UNPACK_BUFFER_ARB                                               =             0x88EC_u32
  E_PIXEL_UNPACK_BUFFER_EXT                                               =             0x88EC_u32
  E_PIXEL_PACK_BUFFER_BINDING                                             =             0x88ED_u32
  E_PIXEL_PACK_BUFFER_BINDING_ARB                                         =             0x88ED_u32
  E_PIXEL_PACK_BUFFER_BINDING_EXT                                         =             0x88ED_u32
  E_ETC1_SRGB8_NV                                                         =             0x88EE_u32
  E_PIXEL_UNPACK_BUFFER_BINDING                                           =             0x88EF_u32
  E_PIXEL_UNPACK_BUFFER_BINDING_ARB                                       =             0x88EF_u32
  E_PIXEL_UNPACK_BUFFER_BINDING_EXT                                       =             0x88EF_u32
  E_DEPTH24_STENCIL8                                                      =             0x88F0_u32
  E_DEPTH24_STENCIL8_EXT                                                  =             0x88F0_u32
  E_DEPTH24_STENCIL8_OES                                                  =             0x88F0_u32
  E_TEXTURE_STENCIL_SIZE                                                  =             0x88F1_u32
  E_TEXTURE_STENCIL_SIZE_EXT                                              =             0x88F1_u32
  E_STENCIL_TAG_BITS_EXT                                                  =             0x88F2_u32
  E_STENCIL_CLEAR_TAG_VALUE_EXT                                           =             0x88F3_u32
  E_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV                                      =             0x88F4_u32
  E_MAX_PROGRAM_CALL_DEPTH_NV                                             =             0x88F5_u32
  E_MAX_PROGRAM_IF_DEPTH_NV                                               =             0x88F6_u32
  E_MAX_PROGRAM_LOOP_DEPTH_NV                                             =             0x88F7_u32
  E_MAX_PROGRAM_LOOP_COUNT_NV                                             =             0x88F8_u32
  E_SRC1_COLOR                                                            =             0x88F9_u32
  E_SRC1_COLOR_EXT                                                        =             0x88F9_u32
  E_ONE_MINUS_SRC1_COLOR                                                  =             0x88FA_u32
  E_ONE_MINUS_SRC1_COLOR_EXT                                              =             0x88FA_u32
  E_ONE_MINUS_SRC1_ALPHA                                                  =             0x88FB_u32
  E_ONE_MINUS_SRC1_ALPHA_EXT                                              =             0x88FB_u32
  E_MAX_DUAL_SOURCE_DRAW_BUFFERS                                          =             0x88FC_u32
  E_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT                                      =             0x88FC_u32
  E_VERTEX_ATTRIB_ARRAY_INTEGER                                           =             0x88FD_u32
  E_VERTEX_ATTRIB_ARRAY_INTEGER_EXT                                       =             0x88FD_u32
  E_VERTEX_ATTRIB_ARRAY_INTEGER_NV                                        =             0x88FD_u32
  E_VERTEX_ATTRIB_ARRAY_DIVISOR                                           =             0x88FE_u32
  E_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE                                     =             0x88FE_u32
  E_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB                                       =             0x88FE_u32
  E_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT                                       =             0x88FE_u32
  E_VERTEX_ATTRIB_ARRAY_DIVISOR_NV                                        =             0x88FE_u32
  E_MAX_ARRAY_TEXTURE_LAYERS                                              =             0x88FF_u32
  E_MAX_ARRAY_TEXTURE_LAYERS_EXT                                          =             0x88FF_u32
  E_MIN_PROGRAM_TEXEL_OFFSET                                              =             0x8904_u32
  E_MIN_PROGRAM_TEXEL_OFFSET_EXT                                          =             0x8904_u32
  E_MIN_PROGRAM_TEXEL_OFFSET_NV                                           =             0x8904_u32
  E_MAX_PROGRAM_TEXEL_OFFSET                                              =             0x8905_u32
  E_MAX_PROGRAM_TEXEL_OFFSET_EXT                                          =             0x8905_u32
  E_MAX_PROGRAM_TEXEL_OFFSET_NV                                           =             0x8905_u32
  E_PROGRAM_ATTRIB_COMPONENTS_NV                                          =             0x8906_u32
  E_PROGRAM_RESULT_COMPONENTS_NV                                          =             0x8907_u32
  E_MAX_PROGRAM_ATTRIB_COMPONENTS_NV                                      =             0x8908_u32
  E_MAX_PROGRAM_RESULT_COMPONENTS_NV                                      =             0x8909_u32
  E_STENCIL_TEST_TWO_SIDE_EXT                                             =             0x8910_u32
  E_ACTIVE_STENCIL_FACE_EXT                                               =             0x8911_u32
  E_MIRROR_CLAMP_TO_BORDER_EXT                                            =             0x8912_u32
  E_SAMPLES_PASSED                                                        =             0x8914_u32
  E_SAMPLES_PASSED_ARB                                                    =             0x8914_u32
  E_GEOMETRY_VERTICES_OUT                                                 =             0x8916_u32
  E_GEOMETRY_LINKED_VERTICES_OUT_EXT                                      =             0x8916_u32
  E_GEOMETRY_LINKED_VERTICES_OUT_OES                                      =             0x8916_u32
  E_GEOMETRY_INPUT_TYPE                                                   =             0x8917_u32
  E_GEOMETRY_LINKED_INPUT_TYPE_EXT                                        =             0x8917_u32
  E_GEOMETRY_LINKED_INPUT_TYPE_OES                                        =             0x8917_u32
  E_GEOMETRY_OUTPUT_TYPE                                                  =             0x8918_u32
  E_GEOMETRY_LINKED_OUTPUT_TYPE_EXT                                       =             0x8918_u32
  E_GEOMETRY_LINKED_OUTPUT_TYPE_OES                                       =             0x8918_u32
  E_SAMPLER_BINDING                                                       =             0x8919_u32
  E_CLAMP_VERTEX_COLOR                                                    =             0x891A_u32
  E_CLAMP_VERTEX_COLOR_ARB                                                =             0x891A_u32
  E_CLAMP_FRAGMENT_COLOR                                                  =             0x891B_u32
  E_CLAMP_FRAGMENT_COLOR_ARB                                              =             0x891B_u32
  E_CLAMP_READ_COLOR                                                      =             0x891C_u32
  E_CLAMP_READ_COLOR_ARB                                                  =             0x891C_u32
  E_FIXED_ONLY                                                            =             0x891D_u32
  E_FIXED_ONLY_ARB                                                        =             0x891D_u32
  E_TESS_CONTROL_PROGRAM_NV                                               =             0x891E_u32
  E_TESS_EVALUATION_PROGRAM_NV                                            =             0x891F_u32
  E_FRAGMENT_SHADER_ATI                                                   =             0x8920_u32
  E_REG_0_ATI                                                             =             0x8921_u32
  E_REG_1_ATI                                                             =             0x8922_u32
  E_REG_2_ATI                                                             =             0x8923_u32
  E_REG_3_ATI                                                             =             0x8924_u32
  E_REG_4_ATI                                                             =             0x8925_u32
  E_REG_5_ATI                                                             =             0x8926_u32
  E_REG_6_ATI                                                             =             0x8927_u32
  E_REG_7_ATI                                                             =             0x8928_u32
  E_REG_8_ATI                                                             =             0x8929_u32
  E_REG_9_ATI                                                             =             0x892A_u32
  E_REG_10_ATI                                                            =             0x892B_u32
  E_REG_11_ATI                                                            =             0x892C_u32
  E_REG_12_ATI                                                            =             0x892D_u32
  E_REG_13_ATI                                                            =             0x892E_u32
  E_REG_14_ATI                                                            =             0x892F_u32
  E_REG_15_ATI                                                            =             0x8930_u32
  E_REG_16_ATI                                                            =             0x8931_u32
  E_REG_17_ATI                                                            =             0x8932_u32
  E_REG_18_ATI                                                            =             0x8933_u32
  E_REG_19_ATI                                                            =             0x8934_u32
  E_REG_20_ATI                                                            =             0x8935_u32
  E_REG_21_ATI                                                            =             0x8936_u32
  E_REG_22_ATI                                                            =             0x8937_u32
  E_REG_23_ATI                                                            =             0x8938_u32
  E_REG_24_ATI                                                            =             0x8939_u32
  E_REG_25_ATI                                                            =             0x893A_u32
  E_REG_26_ATI                                                            =             0x893B_u32
  E_REG_27_ATI                                                            =             0x893C_u32
  E_REG_28_ATI                                                            =             0x893D_u32
  E_REG_29_ATI                                                            =             0x893E_u32
  E_REG_30_ATI                                                            =             0x893F_u32
  E_REG_31_ATI                                                            =             0x8940_u32
  E_CON_0_ATI                                                             =             0x8941_u32
  E_CON_1_ATI                                                             =             0x8942_u32
  E_CON_2_ATI                                                             =             0x8943_u32
  E_CON_3_ATI                                                             =             0x8944_u32
  E_CON_4_ATI                                                             =             0x8945_u32
  E_CON_5_ATI                                                             =             0x8946_u32
  E_CON_6_ATI                                                             =             0x8947_u32
  E_CON_7_ATI                                                             =             0x8948_u32
  E_CON_8_ATI                                                             =             0x8949_u32
  E_CON_9_ATI                                                             =             0x894A_u32
  E_CON_10_ATI                                                            =             0x894B_u32
  E_CON_11_ATI                                                            =             0x894C_u32
  E_CON_12_ATI                                                            =             0x894D_u32
  E_CON_13_ATI                                                            =             0x894E_u32
  E_CON_14_ATI                                                            =             0x894F_u32
  E_CON_15_ATI                                                            =             0x8950_u32
  E_CON_16_ATI                                                            =             0x8951_u32
  E_CON_17_ATI                                                            =             0x8952_u32
  E_CON_18_ATI                                                            =             0x8953_u32
  E_CON_19_ATI                                                            =             0x8954_u32
  E_CON_20_ATI                                                            =             0x8955_u32
  E_CON_21_ATI                                                            =             0x8956_u32
  E_CON_22_ATI                                                            =             0x8957_u32
  E_CON_23_ATI                                                            =             0x8958_u32
  E_CON_24_ATI                                                            =             0x8959_u32
  E_CON_25_ATI                                                            =             0x895A_u32
  E_CON_26_ATI                                                            =             0x895B_u32
  E_CON_27_ATI                                                            =             0x895C_u32
  E_CON_28_ATI                                                            =             0x895D_u32
  E_CON_29_ATI                                                            =             0x895E_u32
  E_CON_30_ATI                                                            =             0x895F_u32
  E_CON_31_ATI                                                            =             0x8960_u32
  E_MOV_ATI                                                               =             0x8961_u32
  E_ADD_ATI                                                               =             0x8963_u32
  E_MUL_ATI                                                               =             0x8964_u32
  E_SUB_ATI                                                               =             0x8965_u32
  E_DOT3_ATI                                                              =             0x8966_u32
  E_DOT4_ATI                                                              =             0x8967_u32
  E_MAD_ATI                                                               =             0x8968_u32
  E_LERP_ATI                                                              =             0x8969_u32
  E_CND_ATI                                                               =             0x896A_u32
  E_CND0_ATI                                                              =             0x896B_u32
  E_DOT2_ADD_ATI                                                          =             0x896C_u32
  E_SECONDARY_INTERPOLATOR_ATI                                            =             0x896D_u32
  E_NUM_FRAGMENT_REGISTERS_ATI                                            =             0x896E_u32
  E_NUM_FRAGMENT_CONSTANTS_ATI                                            =             0x896F_u32
  E_NUM_PASSES_ATI                                                        =             0x8970_u32
  E_NUM_INSTRUCTIONS_PER_PASS_ATI                                         =             0x8971_u32
  E_NUM_INSTRUCTIONS_TOTAL_ATI                                            =             0x8972_u32
  E_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI                                 =             0x8973_u32
  E_NUM_LOOPBACK_COMPONENTS_ATI                                           =             0x8974_u32
  E_COLOR_ALPHA_PAIRING_ATI                                               =             0x8975_u32
  E_SWIZZLE_STR_ATI                                                       =             0x8976_u32
  E_SWIZZLE_STQ_ATI                                                       =             0x8977_u32
  E_SWIZZLE_STR_DR_ATI                                                    =             0x8978_u32
  E_SWIZZLE_STQ_DQ_ATI                                                    =             0x8979_u32
  E_SWIZZLE_STRQ_ATI                                                      =             0x897A_u32
  E_SWIZZLE_STRQ_DQ_ATI                                                   =             0x897B_u32
  E_INTERLACE_OML                                                         =             0x8980_u32
  E_INTERLACE_READ_OML                                                    =             0x8981_u32
  E_FORMAT_SUBSAMPLE_24_24_OML                                            =             0x8982_u32
  E_FORMAT_SUBSAMPLE_244_244_OML                                          =             0x8983_u32
  E_PACK_RESAMPLE_OML                                                     =             0x8984_u32
  E_UNPACK_RESAMPLE_OML                                                   =             0x8985_u32
  E_RESAMPLE_REPLICATE_OML                                                =             0x8986_u32
  E_RESAMPLE_ZERO_FILL_OML                                                =             0x8987_u32
  E_RESAMPLE_AVERAGE_OML                                                  =             0x8988_u32
  E_RESAMPLE_DECIMATE_OML                                                 =             0x8989_u32
  E_POINT_SIZE_ARRAY_TYPE_OES                                             =             0x898A_u32
  E_POINT_SIZE_ARRAY_STRIDE_OES                                           =             0x898B_u32
  E_POINT_SIZE_ARRAY_POINTER_OES                                          =             0x898C_u32
  E_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES                                =             0x898D_u32
  E_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES                               =             0x898E_u32
  E_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES                                  =             0x898F_u32
  E_VERTEX_ATTRIB_MAP1_APPLE                                              =             0x8A00_u32
  E_VERTEX_ATTRIB_MAP2_APPLE                                              =             0x8A01_u32
  E_VERTEX_ATTRIB_MAP1_SIZE_APPLE                                         =             0x8A02_u32
  E_VERTEX_ATTRIB_MAP1_COEFF_APPLE                                        =             0x8A03_u32
  E_VERTEX_ATTRIB_MAP1_ORDER_APPLE                                        =             0x8A04_u32
  E_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE                                       =             0x8A05_u32
  E_VERTEX_ATTRIB_MAP2_SIZE_APPLE                                         =             0x8A06_u32
  E_VERTEX_ATTRIB_MAP2_COEFF_APPLE                                        =             0x8A07_u32
  E_VERTEX_ATTRIB_MAP2_ORDER_APPLE                                        =             0x8A08_u32
  E_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE                                       =             0x8A09_u32
  E_DRAW_PIXELS_APPLE                                                     =             0x8A0A_u32
  E_FENCE_APPLE                                                           =             0x8A0B_u32
  E_ELEMENT_ARRAY_APPLE                                                   =             0x8A0C_u32
  E_ELEMENT_ARRAY_TYPE_APPLE                                              =             0x8A0D_u32
  E_ELEMENT_ARRAY_POINTER_APPLE                                           =             0x8A0E_u32
  E_COLOR_FLOAT_APPLE                                                     =             0x8A0F_u32
  E_UNIFORM_BUFFER                                                        =             0x8A11_u32
  E_BUFFER_SERIALIZED_MODIFY_APPLE                                        =             0x8A12_u32
  E_BUFFER_FLUSHING_UNMAP_APPLE                                           =             0x8A13_u32
  E_AUX_DEPTH_STENCIL_APPLE                                               =             0x8A14_u32
  E_PACK_ROW_BYTES_APPLE                                                  =             0x8A15_u32
  E_UNPACK_ROW_BYTES_APPLE                                                =             0x8A16_u32
  E_RELEASED_APPLE                                                        =             0x8A19_u32
  E_VOLATILE_APPLE                                                        =             0x8A1A_u32
  E_RETAINED_APPLE                                                        =             0x8A1B_u32
  E_UNDEFINED_APPLE                                                       =             0x8A1C_u32
  E_PURGEABLE_APPLE                                                       =             0x8A1D_u32
  E_RGB_422_APPLE                                                         =             0x8A1F_u32
  E_UNIFORM_BUFFER_BINDING                                                =             0x8A28_u32
  E_UNIFORM_BUFFER_START                                                  =             0x8A29_u32
  E_UNIFORM_BUFFER_SIZE                                                   =             0x8A2A_u32
  E_MAX_VERTEX_UNIFORM_BLOCKS                                             =             0x8A2B_u32
  E_MAX_GEOMETRY_UNIFORM_BLOCKS                                           =             0x8A2C_u32
  E_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT                                       =             0x8A2C_u32
  E_MAX_GEOMETRY_UNIFORM_BLOCKS_OES                                       =             0x8A2C_u32
  E_MAX_FRAGMENT_UNIFORM_BLOCKS                                           =             0x8A2D_u32
  E_MAX_COMBINED_UNIFORM_BLOCKS                                           =             0x8A2E_u32
  E_MAX_UNIFORM_BUFFER_BINDINGS                                           =             0x8A2F_u32
  E_MAX_UNIFORM_BLOCK_SIZE                                                =             0x8A30_u32
  E_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS                                =             0x8A31_u32
  E_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS                              =             0x8A32_u32
  E_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT                          =             0x8A32_u32
  E_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES                          =             0x8A32_u32
  E_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS                              =             0x8A33_u32
  E_UNIFORM_BUFFER_OFFSET_ALIGNMENT                                       =             0x8A34_u32
  E_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH                                  =             0x8A35_u32
  E_ACTIVE_UNIFORM_BLOCKS                                                 =             0x8A36_u32
  E_UNIFORM_TYPE                                                          =             0x8A37_u32
  E_UNIFORM_SIZE                                                          =             0x8A38_u32
  E_UNIFORM_NAME_LENGTH                                                   =             0x8A39_u32
  E_UNIFORM_BLOCK_INDEX                                                   =             0x8A3A_u32
  E_UNIFORM_OFFSET                                                        =             0x8A3B_u32
  E_UNIFORM_ARRAY_STRIDE                                                  =             0x8A3C_u32
  E_UNIFORM_MATRIX_STRIDE                                                 =             0x8A3D_u32
  E_UNIFORM_IS_ROW_MAJOR                                                  =             0x8A3E_u32
  E_UNIFORM_BLOCK_BINDING                                                 =             0x8A3F_u32
  E_UNIFORM_BLOCK_DATA_SIZE                                               =             0x8A40_u32
  E_UNIFORM_BLOCK_NAME_LENGTH                                             =             0x8A41_u32
  E_UNIFORM_BLOCK_ACTIVE_UNIFORMS                                         =             0x8A42_u32
  E_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES                                  =             0x8A43_u32
  E_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER                             =             0x8A44_u32
  E_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER                           =             0x8A45_u32
  E_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER                           =             0x8A46_u32
  E_TEXTURE_SRGB_DECODE_EXT                                               =             0x8A48_u32
  E_DECODE_EXT                                                            =             0x8A49_u32
  E_SKIP_DECODE_EXT                                                       =             0x8A4A_u32
  E_PROGRAM_PIPELINE_OBJECT_EXT                                           =             0x8A4F_u32
  E_RGB_RAW_422_APPLE                                                     =             0x8A51_u32
  E_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT                                  =             0x8A52_u32
  E_SYNC_OBJECT_APPLE                                                     =             0x8A53_u32
  E_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT                                      =             0x8A54_u32
  E_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT                                      =             0x8A55_u32
  E_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT                                =             0x8A56_u32
  E_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT                                =             0x8A57_u32
  E_FRAGMENT_SHADER                                                       =             0x8B30_u32
  E_FRAGMENT_SHADER_ARB                                                   =             0x8B30_u32
  E_VERTEX_SHADER                                                         =             0x8B31_u32
  E_VERTEX_SHADER_ARB                                                     =             0x8B31_u32
  E_PROGRAM_OBJECT_ARB                                                    =             0x8B40_u32
  E_PROGRAM_OBJECT_EXT                                                    =             0x8B40_u32
  E_SHADER_OBJECT_ARB                                                     =             0x8B48_u32
  E_SHADER_OBJECT_EXT                                                     =             0x8B48_u32
  E_MAX_FRAGMENT_UNIFORM_COMPONENTS                                       =             0x8B49_u32
  E_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB                                   =             0x8B49_u32
  E_MAX_VERTEX_UNIFORM_COMPONENTS                                         =             0x8B4A_u32
  E_MAX_VERTEX_UNIFORM_COMPONENTS_ARB                                     =             0x8B4A_u32
  E_MAX_VARYING_FLOATS                                                    =             0x8B4B_u32
  E_MAX_VARYING_COMPONENTS                                                =             0x8B4B_u32
  E_MAX_VARYING_COMPONENTS_EXT                                            =             0x8B4B_u32
  E_MAX_VARYING_FLOATS_ARB                                                =             0x8B4B_u32
  E_MAX_VERTEX_TEXTURE_IMAGE_UNITS                                        =             0x8B4C_u32
  E_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB                                    =             0x8B4C_u32
  E_MAX_COMBINED_TEXTURE_IMAGE_UNITS                                      =             0x8B4D_u32
  E_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB                                  =             0x8B4D_u32
  E_OBJECT_TYPE_ARB                                                       =             0x8B4E_u32
  E_SHADER_TYPE                                                           =             0x8B4F_u32
  E_OBJECT_SUBTYPE_ARB                                                    =             0x8B4F_u32
  E_FLOAT_VEC2                                                            =             0x8B50_u32
  E_FLOAT_VEC2_ARB                                                        =             0x8B50_u32
  E_FLOAT_VEC3                                                            =             0x8B51_u32
  E_FLOAT_VEC3_ARB                                                        =             0x8B51_u32
  E_FLOAT_VEC4                                                            =             0x8B52_u32
  E_FLOAT_VEC4_ARB                                                        =             0x8B52_u32
  E_INT_VEC2                                                              =             0x8B53_u32
  E_INT_VEC2_ARB                                                          =             0x8B53_u32
  E_INT_VEC3                                                              =             0x8B54_u32
  E_INT_VEC3_ARB                                                          =             0x8B54_u32
  E_INT_VEC4                                                              =             0x8B55_u32
  E_INT_VEC4_ARB                                                          =             0x8B55_u32
  E_BOOL                                                                  =             0x8B56_u32
  E_BOOL_ARB                                                              =             0x8B56_u32
  E_BOOL_VEC2                                                             =             0x8B57_u32
  E_BOOL_VEC2_ARB                                                         =             0x8B57_u32
  E_BOOL_VEC3                                                             =             0x8B58_u32
  E_BOOL_VEC3_ARB                                                         =             0x8B58_u32
  E_BOOL_VEC4                                                             =             0x8B59_u32
  E_BOOL_VEC4_ARB                                                         =             0x8B59_u32
  E_FLOAT_MAT2                                                            =             0x8B5A_u32
  E_FLOAT_MAT2_ARB                                                        =             0x8B5A_u32
  E_FLOAT_MAT3                                                            =             0x8B5B_u32
  E_FLOAT_MAT3_ARB                                                        =             0x8B5B_u32
  E_FLOAT_MAT4                                                            =             0x8B5C_u32
  E_FLOAT_MAT4_ARB                                                        =             0x8B5C_u32
  E_SAMPLER_1D                                                            =             0x8B5D_u32
  E_SAMPLER_1D_ARB                                                        =             0x8B5D_u32
  E_SAMPLER_2D                                                            =             0x8B5E_u32
  E_SAMPLER_2D_ARB                                                        =             0x8B5E_u32
  E_SAMPLER_3D                                                            =             0x8B5F_u32
  E_SAMPLER_3D_ARB                                                        =             0x8B5F_u32
  E_SAMPLER_3D_OES                                                        =             0x8B5F_u32
  E_SAMPLER_CUBE                                                          =             0x8B60_u32
  E_SAMPLER_CUBE_ARB                                                      =             0x8B60_u32
  E_SAMPLER_1D_SHADOW                                                     =             0x8B61_u32
  E_SAMPLER_1D_SHADOW_ARB                                                 =             0x8B61_u32
  E_SAMPLER_2D_SHADOW                                                     =             0x8B62_u32
  E_SAMPLER_2D_SHADOW_ARB                                                 =             0x8B62_u32
  E_SAMPLER_2D_SHADOW_EXT                                                 =             0x8B62_u32
  E_SAMPLER_2D_RECT                                                       =             0x8B63_u32
  E_SAMPLER_2D_RECT_ARB                                                   =             0x8B63_u32
  E_SAMPLER_2D_RECT_SHADOW                                                =             0x8B64_u32
  E_SAMPLER_2D_RECT_SHADOW_ARB                                            =             0x8B64_u32
  E_FLOAT_MAT2x3                                                          =             0x8B65_u32
  E_FLOAT_MAT2x3_NV                                                       =             0x8B65_u32
  E_FLOAT_MAT2x4                                                          =             0x8B66_u32
  E_FLOAT_MAT2x4_NV                                                       =             0x8B66_u32
  E_FLOAT_MAT3x2                                                          =             0x8B67_u32
  E_FLOAT_MAT3x2_NV                                                       =             0x8B67_u32
  E_FLOAT_MAT3x4                                                          =             0x8B68_u32
  E_FLOAT_MAT3x4_NV                                                       =             0x8B68_u32
  E_FLOAT_MAT4x2                                                          =             0x8B69_u32
  E_FLOAT_MAT4x2_NV                                                       =             0x8B69_u32
  E_FLOAT_MAT4x3                                                          =             0x8B6A_u32
  E_FLOAT_MAT4x3_NV                                                       =             0x8B6A_u32
  E_DELETE_STATUS                                                         =             0x8B80_u32
  E_OBJECT_DELETE_STATUS_ARB                                              =             0x8B80_u32
  E_COMPILE_STATUS                                                        =             0x8B81_u32
  E_OBJECT_COMPILE_STATUS_ARB                                             =             0x8B81_u32
  E_LINK_STATUS                                                           =             0x8B82_u32
  E_OBJECT_LINK_STATUS_ARB                                                =             0x8B82_u32
  E_VALIDATE_STATUS                                                       =             0x8B83_u32
  E_OBJECT_VALIDATE_STATUS_ARB                                            =             0x8B83_u32
  E_INFO_LOG_LENGTH                                                       =             0x8B84_u32
  E_OBJECT_INFO_LOG_LENGTH_ARB                                            =             0x8B84_u32
  E_ATTACHED_SHADERS                                                      =             0x8B85_u32
  E_OBJECT_ATTACHED_OBJECTS_ARB                                           =             0x8B85_u32
  E_ACTIVE_UNIFORMS                                                       =             0x8B86_u32
  E_OBJECT_ACTIVE_UNIFORMS_ARB                                            =             0x8B86_u32
  E_ACTIVE_UNIFORM_MAX_LENGTH                                             =             0x8B87_u32
  E_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB                                  =             0x8B87_u32
  E_SHADER_SOURCE_LENGTH                                                  =             0x8B88_u32
  E_OBJECT_SHADER_SOURCE_LENGTH_ARB                                       =             0x8B88_u32
  E_ACTIVE_ATTRIBUTES                                                     =             0x8B89_u32
  E_OBJECT_ACTIVE_ATTRIBUTES_ARB                                          =             0x8B89_u32
  E_ACTIVE_ATTRIBUTE_MAX_LENGTH                                           =             0x8B8A_u32
  E_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB                                =             0x8B8A_u32
  E_FRAGMENT_SHADER_DERIVATIVE_HINT                                       =             0x8B8B_u32
  E_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB                                   =             0x8B8B_u32
  E_FRAGMENT_SHADER_DERIVATIVE_HINT_OES                                   =             0x8B8B_u32
  E_SHADING_LANGUAGE_VERSION                                              =             0x8B8C_u32
  E_SHADING_LANGUAGE_VERSION_ARB                                          =             0x8B8C_u32
  E_CURRENT_PROGRAM                                                       =             0x8B8D_u32
  E_ACTIVE_PROGRAM_EXT                                                    =             0x8B8D_u32
  E_PALETTE4_RGB8_OES                                                     =             0x8B90_u32
  E_PALETTE4_RGBA8_OES                                                    =             0x8B91_u32
  E_PALETTE4_R5_G6_B5_OES                                                 =             0x8B92_u32
  E_PALETTE4_RGBA4_OES                                                    =             0x8B93_u32
  E_PALETTE4_RGB5_A1_OES                                                  =             0x8B94_u32
  E_PALETTE8_RGB8_OES                                                     =             0x8B95_u32
  E_PALETTE8_RGBA8_OES                                                    =             0x8B96_u32
  E_PALETTE8_R5_G6_B5_OES                                                 =             0x8B97_u32
  E_PALETTE8_RGBA4_OES                                                    =             0x8B98_u32
  E_PALETTE8_RGB5_A1_OES                                                  =             0x8B99_u32
  E_IMPLEMENTATION_COLOR_READ_TYPE                                        =             0x8B9A_u32
  E_IMPLEMENTATION_COLOR_READ_TYPE_OES                                    =             0x8B9A_u32
  E_IMPLEMENTATION_COLOR_READ_FORMAT                                      =             0x8B9B_u32
  E_IMPLEMENTATION_COLOR_READ_FORMAT_OES                                  =             0x8B9B_u32
  E_POINT_SIZE_ARRAY_OES                                                  =             0x8B9C_u32
  E_TEXTURE_CROP_RECT_OES                                                 =             0x8B9D_u32
  E_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES                                 =             0x8B9E_u32
  E_POINT_SIZE_ARRAY_BUFFER_BINDING_OES                                   =             0x8B9F_u32
  E_FRAGMENT_PROGRAM_POSITION_MESA                                        =             0x8BB0_u32
  E_FRAGMENT_PROGRAM_CALLBACK_MESA                                        =             0x8BB1_u32
  E_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA                                   =             0x8BB2_u32
  E_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA                                   =             0x8BB3_u32
  E_VERTEX_PROGRAM_POSITION_MESA                                          =             0x8BB4_u32
  E_VERTEX_PROGRAM_CALLBACK_MESA                                          =             0x8BB5_u32
  E_VERTEX_PROGRAM_CALLBACK_FUNC_MESA                                     =             0x8BB6_u32
  E_VERTEX_PROGRAM_CALLBACK_DATA_MESA                                     =             0x8BB7_u32
  E_COUNTER_TYPE_AMD                                                      =             0x8BC0_u32
  E_COUNTER_RANGE_AMD                                                     =             0x8BC1_u32
  E_UNSIGNED_INT64_AMD                                                    =             0x8BC2_u32
  E_PERCENTAGE_AMD                                                        =             0x8BC3_u32
  E_PERFMON_RESULT_AVAILABLE_AMD                                          =             0x8BC4_u32
  E_PERFMON_RESULT_SIZE_AMD                                               =             0x8BC5_u32
  E_PERFMON_RESULT_AMD                                                    =             0x8BC6_u32
  E_TEXTURE_WIDTH_QCOM                                                    =             0x8BD2_u32
  E_TEXTURE_HEIGHT_QCOM                                                   =             0x8BD3_u32
  E_TEXTURE_DEPTH_QCOM                                                    =             0x8BD4_u32
  E_TEXTURE_INTERNAL_FORMAT_QCOM                                          =             0x8BD5_u32
  E_TEXTURE_FORMAT_QCOM                                                   =             0x8BD6_u32
  E_TEXTURE_TYPE_QCOM                                                     =             0x8BD7_u32
  E_TEXTURE_IMAGE_VALID_QCOM                                              =             0x8BD8_u32
  E_TEXTURE_NUM_LEVELS_QCOM                                               =             0x8BD9_u32
  E_TEXTURE_TARGET_QCOM                                                   =             0x8BDA_u32
  E_TEXTURE_OBJECT_VALID_QCOM                                             =             0x8BDB_u32
  E_STATE_RESTORE                                                         =             0x8BDC_u32
  E_SAMPLER_EXTERNAL_2D_Y2Y_EXT                                           =             0x8BE7_u32
  E_TEXTURE_PROTECTED_EXT                                                 =             0x8BFA_u32
  E_COMPRESSED_RGB_PVRTC_4BPPV1_IMG                                       =             0x8C00_u32
  E_COMPRESSED_RGB_PVRTC_2BPPV1_IMG                                       =             0x8C01_u32
  E_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG                                      =             0x8C02_u32
  E_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG                                      =             0x8C03_u32
  E_MODULATE_COLOR_IMG                                                    =             0x8C04_u32
  E_RECIP_ADD_SIGNED_ALPHA_IMG                                            =             0x8C05_u32
  E_TEXTURE_ALPHA_MODULATE_IMG                                            =             0x8C06_u32
  E_FACTOR_ALPHA_MODULATE_IMG                                             =             0x8C07_u32
  E_FRAGMENT_ALPHA_MODULATE_IMG                                           =             0x8C08_u32
  E_ADD_BLEND_IMG                                                         =             0x8C09_u32
  E_SGX_BINARY_IMG                                                        =             0x8C0A_u32
  E_TEXTURE_RED_TYPE                                                      =             0x8C10_u32
  E_TEXTURE_RED_TYPE_ARB                                                  =             0x8C10_u32
  E_TEXTURE_GREEN_TYPE                                                    =             0x8C11_u32
  E_TEXTURE_GREEN_TYPE_ARB                                                =             0x8C11_u32
  E_TEXTURE_BLUE_TYPE                                                     =             0x8C12_u32
  E_TEXTURE_BLUE_TYPE_ARB                                                 =             0x8C12_u32
  E_TEXTURE_ALPHA_TYPE                                                    =             0x8C13_u32
  E_TEXTURE_ALPHA_TYPE_ARB                                                =             0x8C13_u32
  E_TEXTURE_LUMINANCE_TYPE                                                =             0x8C14_u32
  E_TEXTURE_LUMINANCE_TYPE_ARB                                            =             0x8C14_u32
  E_TEXTURE_INTENSITY_TYPE                                                =             0x8C15_u32
  E_TEXTURE_INTENSITY_TYPE_ARB                                            =             0x8C15_u32
  E_TEXTURE_DEPTH_TYPE                                                    =             0x8C16_u32
  E_TEXTURE_DEPTH_TYPE_ARB                                                =             0x8C16_u32
  E_UNSIGNED_NORMALIZED                                                   =             0x8C17_u32
  E_UNSIGNED_NORMALIZED_ARB                                               =             0x8C17_u32
  E_UNSIGNED_NORMALIZED_EXT                                               =             0x8C17_u32
  E_TEXTURE_1D_ARRAY                                                      =             0x8C18_u32
  E_TEXTURE_1D_ARRAY_EXT                                                  =             0x8C18_u32
  E_PROXY_TEXTURE_1D_ARRAY                                                =             0x8C19_u32
  E_PROXY_TEXTURE_1D_ARRAY_EXT                                            =             0x8C19_u32
  E_TEXTURE_2D_ARRAY                                                      =             0x8C1A_u32
  E_TEXTURE_2D_ARRAY_EXT                                                  =             0x8C1A_u32
  E_PROXY_TEXTURE_2D_ARRAY                                                =             0x8C1B_u32
  E_PROXY_TEXTURE_2D_ARRAY_EXT                                            =             0x8C1B_u32
  E_TEXTURE_BINDING_1D_ARRAY                                              =             0x8C1C_u32
  E_TEXTURE_BINDING_1D_ARRAY_EXT                                          =             0x8C1C_u32
  E_TEXTURE_BINDING_2D_ARRAY                                              =             0x8C1D_u32
  E_TEXTURE_BINDING_2D_ARRAY_EXT                                          =             0x8C1D_u32
  E_GEOMETRY_PROGRAM_NV                                                   =             0x8C26_u32
  E_MAX_PROGRAM_OUTPUT_VERTICES_NV                                        =             0x8C27_u32
  E_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV                                =             0x8C28_u32
  E_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS                                      =             0x8C29_u32
  E_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB                                  =             0x8C29_u32
  E_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT                                  =             0x8C29_u32
  E_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES                                  =             0x8C29_u32
  E_TEXTURE_BUFFER                                                        =             0x8C2A_u32
  E_TEXTURE_BUFFER_ARB                                                    =             0x8C2A_u32
  E_TEXTURE_BUFFER_EXT                                                    =             0x8C2A_u32
  E_TEXTURE_BUFFER_OES                                                    =             0x8C2A_u32
  E_TEXTURE_BUFFER_BINDING                                                =             0x8C2A_u32
  E_TEXTURE_BUFFER_BINDING_EXT                                            =             0x8C2A_u32
  E_TEXTURE_BUFFER_BINDING_OES                                            =             0x8C2A_u32
  E_MAX_TEXTURE_BUFFER_SIZE                                               =             0x8C2B_u32
  E_MAX_TEXTURE_BUFFER_SIZE_ARB                                           =             0x8C2B_u32
  E_MAX_TEXTURE_BUFFER_SIZE_EXT                                           =             0x8C2B_u32
  E_MAX_TEXTURE_BUFFER_SIZE_OES                                           =             0x8C2B_u32
  E_TEXTURE_BINDING_BUFFER                                                =             0x8C2C_u32
  E_TEXTURE_BINDING_BUFFER_ARB                                            =             0x8C2C_u32
  E_TEXTURE_BINDING_BUFFER_EXT                                            =             0x8C2C_u32
  E_TEXTURE_BINDING_BUFFER_OES                                            =             0x8C2C_u32
  E_TEXTURE_BUFFER_DATA_STORE_BINDING                                     =             0x8C2D_u32
  E_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB                                 =             0x8C2D_u32
  E_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT                                 =             0x8C2D_u32
  E_TEXTURE_BUFFER_DATA_STORE_BINDING_OES                                 =             0x8C2D_u32
  E_TEXTURE_BUFFER_FORMAT_ARB                                             =             0x8C2E_u32
  E_TEXTURE_BUFFER_FORMAT_EXT                                             =             0x8C2E_u32
  E_ANY_SAMPLES_PASSED                                                    =             0x8C2F_u32
  E_ANY_SAMPLES_PASSED_EXT                                                =             0x8C2F_u32
  E_SAMPLE_SHADING                                                        =             0x8C36_u32
  E_SAMPLE_SHADING_ARB                                                    =             0x8C36_u32
  E_SAMPLE_SHADING_OES                                                    =             0x8C36_u32
  E_MIN_SAMPLE_SHADING_VALUE                                              =             0x8C37_u32
  E_MIN_SAMPLE_SHADING_VALUE_ARB                                          =             0x8C37_u32
  E_MIN_SAMPLE_SHADING_VALUE_OES                                          =             0x8C37_u32
  E_R11F_G11F_B10F                                                        =             0x8C3A_u32
  E_R11F_G11F_B10F_APPLE                                                  =             0x8C3A_u32
  E_R11F_G11F_B10F_EXT                                                    =             0x8C3A_u32
  E_UNSIGNED_INT_10F_11F_11F_REV                                          =             0x8C3B_u32
  E_UNSIGNED_INT_10F_11F_11F_REV_APPLE                                    =             0x8C3B_u32
  E_UNSIGNED_INT_10F_11F_11F_REV_EXT                                      =             0x8C3B_u32
  E_RGBA_SIGNED_COMPONENTS_EXT                                            =             0x8C3C_u32
  E_RGB9_E5                                                               =             0x8C3D_u32
  E_RGB9_E5_APPLE                                                         =             0x8C3D_u32
  E_RGB9_E5_EXT                                                           =             0x8C3D_u32
  E_UNSIGNED_INT_5_9_9_9_REV                                              =             0x8C3E_u32
  E_UNSIGNED_INT_5_9_9_9_REV_APPLE                                        =             0x8C3E_u32
  E_UNSIGNED_INT_5_9_9_9_REV_EXT                                          =             0x8C3E_u32
  E_TEXTURE_SHARED_SIZE                                                   =             0x8C3F_u32
  E_TEXTURE_SHARED_SIZE_EXT                                               =             0x8C3F_u32
  E_SRGB                                                                  =             0x8C40_u32
  E_SRGB_EXT                                                              =             0x8C40_u32
  E_SRGB8                                                                 =             0x8C41_u32
  E_SRGB8_EXT                                                             =             0x8C41_u32
  E_SRGB8_NV                                                              =             0x8C41_u32
  E_SRGB_ALPHA                                                            =             0x8C42_u32
  E_SRGB_ALPHA_EXT                                                        =             0x8C42_u32
  E_SRGB8_ALPHA8                                                          =             0x8C43_u32
  E_SRGB8_ALPHA8_EXT                                                      =             0x8C43_u32
  E_SLUMINANCE_ALPHA                                                      =             0x8C44_u32
  E_SLUMINANCE_ALPHA_EXT                                                  =             0x8C44_u32
  E_SLUMINANCE_ALPHA_NV                                                   =             0x8C44_u32
  E_SLUMINANCE8_ALPHA8                                                    =             0x8C45_u32
  E_SLUMINANCE8_ALPHA8_EXT                                                =             0x8C45_u32
  E_SLUMINANCE8_ALPHA8_NV                                                 =             0x8C45_u32
  E_SLUMINANCE                                                            =             0x8C46_u32
  E_SLUMINANCE_EXT                                                        =             0x8C46_u32
  E_SLUMINANCE_NV                                                         =             0x8C46_u32
  E_SLUMINANCE8                                                           =             0x8C47_u32
  E_SLUMINANCE8_EXT                                                       =             0x8C47_u32
  E_SLUMINANCE8_NV                                                        =             0x8C47_u32
  E_COMPRESSED_SRGB                                                       =             0x8C48_u32
  E_COMPRESSED_SRGB_EXT                                                   =             0x8C48_u32
  E_COMPRESSED_SRGB_ALPHA                                                 =             0x8C49_u32
  E_COMPRESSED_SRGB_ALPHA_EXT                                             =             0x8C49_u32
  E_COMPRESSED_SLUMINANCE                                                 =             0x8C4A_u32
  E_COMPRESSED_SLUMINANCE_EXT                                             =             0x8C4A_u32
  E_COMPRESSED_SLUMINANCE_ALPHA                                           =             0x8C4B_u32
  E_COMPRESSED_SLUMINANCE_ALPHA_EXT                                       =             0x8C4B_u32
  E_COMPRESSED_SRGB_S3TC_DXT1_EXT                                         =             0x8C4C_u32
  E_COMPRESSED_SRGB_S3TC_DXT1_NV                                          =             0x8C4C_u32
  E_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT                                   =             0x8C4D_u32
  E_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV                                    =             0x8C4D_u32
  E_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT                                   =             0x8C4E_u32
  E_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV                                    =             0x8C4E_u32
  E_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT                                   =             0x8C4F_u32
  E_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV                                    =             0x8C4F_u32
  E_COMPRESSED_LUMINANCE_LATC1_EXT                                        =             0x8C70_u32
  E_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT                                 =             0x8C71_u32
  E_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT                                  =             0x8C72_u32
  E_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT                           =             0x8C73_u32
  E_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV                              =             0x8C74_u32
  E_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV                           =             0x8C75_u32
  E_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH                                 =             0x8C76_u32
  E_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT                             =             0x8C76_u32
  E_BACK_PRIMARY_COLOR_NV                                                 =             0x8C77_u32
  E_BACK_SECONDARY_COLOR_NV                                               =             0x8C78_u32
  E_TEXTURE_COORD_NV                                                      =             0x8C79_u32
  E_CLIP_DISTANCE_NV                                                      =             0x8C7A_u32
  E_VERTEX_ID_NV                                                          =             0x8C7B_u32
  E_PRIMITIVE_ID_NV                                                       =             0x8C7C_u32
  E_GENERIC_ATTRIB_NV                                                     =             0x8C7D_u32
  E_TRANSFORM_FEEDBACK_ATTRIBS_NV                                         =             0x8C7E_u32
  E_TRANSFORM_FEEDBACK_BUFFER_MODE                                        =             0x8C7F_u32
  E_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT                                    =             0x8C7F_u32
  E_TRANSFORM_FEEDBACK_BUFFER_MODE_NV                                     =             0x8C7F_u32
  E_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS                            =             0x8C80_u32
  E_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT                        =             0x8C80_u32
  E_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV                         =             0x8C80_u32
  E_ACTIVE_VARYINGS_NV                                                    =             0x8C81_u32
  E_ACTIVE_VARYING_MAX_LENGTH_NV                                          =             0x8C82_u32
  E_TRANSFORM_FEEDBACK_VARYINGS                                           =             0x8C83_u32
  E_TRANSFORM_FEEDBACK_VARYINGS_EXT                                       =             0x8C83_u32
  E_TRANSFORM_FEEDBACK_VARYINGS_NV                                        =             0x8C83_u32
  E_TRANSFORM_FEEDBACK_BUFFER_START                                       =             0x8C84_u32
  E_TRANSFORM_FEEDBACK_BUFFER_START_EXT                                   =             0x8C84_u32
  E_TRANSFORM_FEEDBACK_BUFFER_START_NV                                    =             0x8C84_u32
  E_TRANSFORM_FEEDBACK_BUFFER_SIZE                                        =             0x8C85_u32
  E_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT                                    =             0x8C85_u32
  E_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV                                     =             0x8C85_u32
  E_TRANSFORM_FEEDBACK_RECORD_NV                                          =             0x8C86_u32
  E_PRIMITIVES_GENERATED                                                  =             0x8C87_u32
  E_PRIMITIVES_GENERATED_EXT                                              =             0x8C87_u32
  E_PRIMITIVES_GENERATED_NV                                               =             0x8C87_u32
  E_PRIMITIVES_GENERATED_OES                                              =             0x8C87_u32
  E_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN                                 =             0x8C88_u32
  E_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT                             =             0x8C88_u32
  E_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV                              =             0x8C88_u32
  E_RASTERIZER_DISCARD                                                    =             0x8C89_u32
  E_RASTERIZER_DISCARD_EXT                                                =             0x8C89_u32
  E_RASTERIZER_DISCARD_NV                                                 =             0x8C89_u32
  E_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS                         =             0x8C8A_u32
  E_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT                     =             0x8C8A_u32
  E_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV                      =             0x8C8A_u32
  E_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS                               =             0x8C8B_u32
  E_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT                           =             0x8C8B_u32
  E_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV                            =             0x8C8B_u32
  E_INTERLEAVED_ATTRIBS                                                   =             0x8C8C_u32
  E_INTERLEAVED_ATTRIBS_EXT                                               =             0x8C8C_u32
  E_INTERLEAVED_ATTRIBS_NV                                                =             0x8C8C_u32
  E_SEPARATE_ATTRIBS                                                      =             0x8C8D_u32
  E_SEPARATE_ATTRIBS_EXT                                                  =             0x8C8D_u32
  E_SEPARATE_ATTRIBS_NV                                                   =             0x8C8D_u32
  E_TRANSFORM_FEEDBACK_BUFFER                                             =             0x8C8E_u32
  E_TRANSFORM_FEEDBACK_BUFFER_EXT                                         =             0x8C8E_u32
  E_TRANSFORM_FEEDBACK_BUFFER_NV                                          =             0x8C8E_u32
  E_TRANSFORM_FEEDBACK_BUFFER_BINDING                                     =             0x8C8F_u32
  E_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT                                 =             0x8C8F_u32
  E_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV                                  =             0x8C8F_u32
  E_ATC_RGB_AMD                                                           =             0x8C92_u32
  E_ATC_RGBA_EXPLICIT_ALPHA_AMD                                           =             0x8C93_u32
  E_POINT_SPRITE_COORD_ORIGIN                                             =             0x8CA0_u32
  E_LOWER_LEFT                                                            =             0x8CA1_u32
  E_UPPER_LEFT                                                            =             0x8CA2_u32
  E_STENCIL_BACK_REF                                                      =             0x8CA3_u32
  E_STENCIL_BACK_VALUE_MASK                                               =             0x8CA4_u32
  E_STENCIL_BACK_WRITEMASK                                                =             0x8CA5_u32
  E_DRAW_FRAMEBUFFER_BINDING                                              =             0x8CA6_u32
  E_DRAW_FRAMEBUFFER_BINDING_ANGLE                                        =             0x8CA6_u32
  E_DRAW_FRAMEBUFFER_BINDING_APPLE                                        =             0x8CA6_u32
  E_DRAW_FRAMEBUFFER_BINDING_EXT                                          =             0x8CA6_u32
  E_DRAW_FRAMEBUFFER_BINDING_NV                                           =             0x8CA6_u32
  E_FRAMEBUFFER_BINDING                                                   =             0x8CA6_u32
  E_FRAMEBUFFER_BINDING_ANGLE                                             =             0x8CA6_u32
  E_FRAMEBUFFER_BINDING_EXT                                               =             0x8CA6_u32
  E_FRAMEBUFFER_BINDING_OES                                               =             0x8CA6_u32
  E_RENDERBUFFER_BINDING                                                  =             0x8CA7_u32
  E_RENDERBUFFER_BINDING_ANGLE                                            =             0x8CA7_u32
  E_RENDERBUFFER_BINDING_EXT                                              =             0x8CA7_u32
  E_RENDERBUFFER_BINDING_OES                                              =             0x8CA7_u32
  E_READ_FRAMEBUFFER                                                      =             0x8CA8_u32
  E_READ_FRAMEBUFFER_ANGLE                                                =             0x8CA8_u32
  E_READ_FRAMEBUFFER_APPLE                                                =             0x8CA8_u32
  E_READ_FRAMEBUFFER_EXT                                                  =             0x8CA8_u32
  E_READ_FRAMEBUFFER_NV                                                   =             0x8CA8_u32
  E_DRAW_FRAMEBUFFER                                                      =             0x8CA9_u32
  E_DRAW_FRAMEBUFFER_ANGLE                                                =             0x8CA9_u32
  E_DRAW_FRAMEBUFFER_APPLE                                                =             0x8CA9_u32
  E_DRAW_FRAMEBUFFER_EXT                                                  =             0x8CA9_u32
  E_DRAW_FRAMEBUFFER_NV                                                   =             0x8CA9_u32
  E_READ_FRAMEBUFFER_BINDING                                              =             0x8CAA_u32
  E_READ_FRAMEBUFFER_BINDING_ANGLE                                        =             0x8CAA_u32
  E_READ_FRAMEBUFFER_BINDING_APPLE                                        =             0x8CAA_u32
  E_READ_FRAMEBUFFER_BINDING_EXT                                          =             0x8CAA_u32
  E_READ_FRAMEBUFFER_BINDING_NV                                           =             0x8CAA_u32
  E_RENDERBUFFER_COVERAGE_SAMPLES_NV                                      =             0x8CAB_u32
  E_RENDERBUFFER_SAMPLES                                                  =             0x8CAB_u32
  E_RENDERBUFFER_SAMPLES_ANGLE                                            =             0x8CAB_u32
  E_RENDERBUFFER_SAMPLES_APPLE                                            =             0x8CAB_u32
  E_RENDERBUFFER_SAMPLES_EXT                                              =             0x8CAB_u32
  E_RENDERBUFFER_SAMPLES_NV                                               =             0x8CAB_u32
  E_DEPTH_COMPONENT32F                                                    =             0x8CAC_u32
  E_DEPTH32F_STENCIL8                                                     =             0x8CAD_u32
  E_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE                                    =             0x8CD0_u32
  E_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT                                =             0x8CD0_u32
  E_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES                                =             0x8CD0_u32
  E_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME                                    =             0x8CD1_u32
  E_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT                                =             0x8CD1_u32
  E_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES                                =             0x8CD1_u32
  E_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL                                  =             0x8CD2_u32
  E_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT                              =             0x8CD2_u32
  E_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES                              =             0x8CD2_u32
  E_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE                          =             0x8CD3_u32
  E_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT                      =             0x8CD3_u32
  E_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES                      =             0x8CD3_u32
  E_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT                         =             0x8CD4_u32
  E_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES                         =             0x8CD4_u32
  E_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER                                  =             0x8CD4_u32
  E_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT                              =             0x8CD4_u32
  E_FRAMEBUFFER_COMPLETE                                                  =             0x8CD5_u32
  E_FRAMEBUFFER_COMPLETE_EXT                                              =             0x8CD5_u32
  E_FRAMEBUFFER_COMPLETE_OES                                              =             0x8CD5_u32
  E_FRAMEBUFFER_INCOMPLETE_ATTACHMENT                                     =             0x8CD6_u32
  E_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT                                 =             0x8CD6_u32
  E_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES                                 =             0x8CD6_u32
  E_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT                             =             0x8CD7_u32
  E_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT                         =             0x8CD7_u32
  E_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES                         =             0x8CD7_u32
  E_FRAMEBUFFER_INCOMPLETE_DIMENSIONS                                     =             0x8CD9_u32
  E_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT                                 =             0x8CD9_u32
  E_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES                                 =             0x8CD9_u32
  E_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT                                    =             0x8CDA_u32
  E_FRAMEBUFFER_INCOMPLETE_FORMATS_OES                                    =             0x8CDA_u32
  E_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER                                    =             0x8CDB_u32
  E_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT                                =             0x8CDB_u32
  E_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES                                =             0x8CDB_u32
  E_FRAMEBUFFER_INCOMPLETE_READ_BUFFER                                    =             0x8CDC_u32
  E_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT                                =             0x8CDC_u32
  E_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES                                =             0x8CDC_u32
  E_FRAMEBUFFER_UNSUPPORTED                                               =             0x8CDD_u32
  E_FRAMEBUFFER_UNSUPPORTED_EXT                                           =             0x8CDD_u32
  E_FRAMEBUFFER_UNSUPPORTED_OES                                           =             0x8CDD_u32
  E_MAX_COLOR_ATTACHMENTS                                                 =             0x8CDF_u32
  E_MAX_COLOR_ATTACHMENTS_EXT                                             =             0x8CDF_u32
  E_MAX_COLOR_ATTACHMENTS_NV                                              =             0x8CDF_u32
  E_COLOR_ATTACHMENT0                                                     =             0x8CE0_u32
  E_COLOR_ATTACHMENT0_EXT                                                 =             0x8CE0_u32
  E_COLOR_ATTACHMENT0_NV                                                  =             0x8CE0_u32
  E_COLOR_ATTACHMENT0_OES                                                 =             0x8CE0_u32
  E_COLOR_ATTACHMENT1                                                     =             0x8CE1_u32
  E_COLOR_ATTACHMENT1_EXT                                                 =             0x8CE1_u32
  E_COLOR_ATTACHMENT1_NV                                                  =             0x8CE1_u32
  E_COLOR_ATTACHMENT2                                                     =             0x8CE2_u32
  E_COLOR_ATTACHMENT2_EXT                                                 =             0x8CE2_u32
  E_COLOR_ATTACHMENT2_NV                                                  =             0x8CE2_u32
  E_COLOR_ATTACHMENT3                                                     =             0x8CE3_u32
  E_COLOR_ATTACHMENT3_EXT                                                 =             0x8CE3_u32
  E_COLOR_ATTACHMENT3_NV                                                  =             0x8CE3_u32
  E_COLOR_ATTACHMENT4                                                     =             0x8CE4_u32
  E_COLOR_ATTACHMENT4_EXT                                                 =             0x8CE4_u32
  E_COLOR_ATTACHMENT4_NV                                                  =             0x8CE4_u32
  E_COLOR_ATTACHMENT5                                                     =             0x8CE5_u32
  E_COLOR_ATTACHMENT5_EXT                                                 =             0x8CE5_u32
  E_COLOR_ATTACHMENT5_NV                                                  =             0x8CE5_u32
  E_COLOR_ATTACHMENT6                                                     =             0x8CE6_u32
  E_COLOR_ATTACHMENT6_EXT                                                 =             0x8CE6_u32
  E_COLOR_ATTACHMENT6_NV                                                  =             0x8CE6_u32
  E_COLOR_ATTACHMENT7                                                     =             0x8CE7_u32
  E_COLOR_ATTACHMENT7_EXT                                                 =             0x8CE7_u32
  E_COLOR_ATTACHMENT7_NV                                                  =             0x8CE7_u32
  E_COLOR_ATTACHMENT8                                                     =             0x8CE8_u32
  E_COLOR_ATTACHMENT8_EXT                                                 =             0x8CE8_u32
  E_COLOR_ATTACHMENT8_NV                                                  =             0x8CE8_u32
  E_COLOR_ATTACHMENT9                                                     =             0x8CE9_u32
  E_COLOR_ATTACHMENT9_EXT                                                 =             0x8CE9_u32
  E_COLOR_ATTACHMENT9_NV                                                  =             0x8CE9_u32
  E_COLOR_ATTACHMENT10                                                    =             0x8CEA_u32
  E_COLOR_ATTACHMENT10_EXT                                                =             0x8CEA_u32
  E_COLOR_ATTACHMENT10_NV                                                 =             0x8CEA_u32
  E_COLOR_ATTACHMENT11                                                    =             0x8CEB_u32
  E_COLOR_ATTACHMENT11_EXT                                                =             0x8CEB_u32
  E_COLOR_ATTACHMENT11_NV                                                 =             0x8CEB_u32
  E_COLOR_ATTACHMENT12                                                    =             0x8CEC_u32
  E_COLOR_ATTACHMENT12_EXT                                                =             0x8CEC_u32
  E_COLOR_ATTACHMENT12_NV                                                 =             0x8CEC_u32
  E_COLOR_ATTACHMENT13                                                    =             0x8CED_u32
  E_COLOR_ATTACHMENT13_EXT                                                =             0x8CED_u32
  E_COLOR_ATTACHMENT13_NV                                                 =             0x8CED_u32
  E_COLOR_ATTACHMENT14                                                    =             0x8CEE_u32
  E_COLOR_ATTACHMENT14_EXT                                                =             0x8CEE_u32
  E_COLOR_ATTACHMENT14_NV                                                 =             0x8CEE_u32
  E_COLOR_ATTACHMENT15                                                    =             0x8CEF_u32
  E_COLOR_ATTACHMENT15_EXT                                                =             0x8CEF_u32
  E_COLOR_ATTACHMENT15_NV                                                 =             0x8CEF_u32
  E_COLOR_ATTACHMENT16                                                    =             0x8CF0_u32
  E_COLOR_ATTACHMENT17                                                    =             0x8CF1_u32
  E_COLOR_ATTACHMENT18                                                    =             0x8CF2_u32
  E_COLOR_ATTACHMENT19                                                    =             0x8CF3_u32
  E_COLOR_ATTACHMENT20                                                    =             0x8CF4_u32
  E_COLOR_ATTACHMENT21                                                    =             0x8CF5_u32
  E_COLOR_ATTACHMENT22                                                    =             0x8CF6_u32
  E_COLOR_ATTACHMENT23                                                    =             0x8CF7_u32
  E_COLOR_ATTACHMENT24                                                    =             0x8CF8_u32
  E_COLOR_ATTACHMENT25                                                    =             0x8CF9_u32
  E_COLOR_ATTACHMENT26                                                    =             0x8CFA_u32
  E_COLOR_ATTACHMENT27                                                    =             0x8CFB_u32
  E_COLOR_ATTACHMENT28                                                    =             0x8CFC_u32
  E_COLOR_ATTACHMENT29                                                    =             0x8CFD_u32
  E_COLOR_ATTACHMENT30                                                    =             0x8CFE_u32
  E_COLOR_ATTACHMENT31                                                    =             0x8CFF_u32
  E_DEPTH_ATTACHMENT                                                      =             0x8D00_u32
  E_DEPTH_ATTACHMENT_EXT                                                  =             0x8D00_u32
  E_DEPTH_ATTACHMENT_OES                                                  =             0x8D00_u32
  E_STENCIL_ATTACHMENT                                                    =             0x8D20_u32
  E_STENCIL_ATTACHMENT_EXT                                                =             0x8D20_u32
  E_STENCIL_ATTACHMENT_OES                                                =             0x8D20_u32
  E_FRAMEBUFFER                                                           =             0x8D40_u32
  E_FRAMEBUFFER_EXT                                                       =             0x8D40_u32
  E_FRAMEBUFFER_OES                                                       =             0x8D40_u32
  E_RENDERBUFFER                                                          =             0x8D41_u32
  E_RENDERBUFFER_EXT                                                      =             0x8D41_u32
  E_RENDERBUFFER_OES                                                      =             0x8D41_u32
  E_RENDERBUFFER_WIDTH                                                    =             0x8D42_u32
  E_RENDERBUFFER_WIDTH_EXT                                                =             0x8D42_u32
  E_RENDERBUFFER_WIDTH_OES                                                =             0x8D42_u32
  E_RENDERBUFFER_HEIGHT                                                   =             0x8D43_u32
  E_RENDERBUFFER_HEIGHT_EXT                                               =             0x8D43_u32
  E_RENDERBUFFER_HEIGHT_OES                                               =             0x8D43_u32
  E_RENDERBUFFER_INTERNAL_FORMAT                                          =             0x8D44_u32
  E_RENDERBUFFER_INTERNAL_FORMAT_EXT                                      =             0x8D44_u32
  E_RENDERBUFFER_INTERNAL_FORMAT_OES                                      =             0x8D44_u32
  E_STENCIL_INDEX1                                                        =             0x8D46_u32
  E_STENCIL_INDEX1_EXT                                                    =             0x8D46_u32
  E_STENCIL_INDEX1_OES                                                    =             0x8D46_u32
  E_STENCIL_INDEX4                                                        =             0x8D47_u32
  E_STENCIL_INDEX4_EXT                                                    =             0x8D47_u32
  E_STENCIL_INDEX4_OES                                                    =             0x8D47_u32
  E_STENCIL_INDEX8                                                        =             0x8D48_u32
  E_STENCIL_INDEX8_EXT                                                    =             0x8D48_u32
  E_STENCIL_INDEX8_OES                                                    =             0x8D48_u32
  E_STENCIL_INDEX16                                                       =             0x8D49_u32
  E_STENCIL_INDEX16_EXT                                                   =             0x8D49_u32
  E_RENDERBUFFER_RED_SIZE                                                 =             0x8D50_u32
  E_RENDERBUFFER_RED_SIZE_EXT                                             =             0x8D50_u32
  E_RENDERBUFFER_RED_SIZE_OES                                             =             0x8D50_u32
  E_RENDERBUFFER_GREEN_SIZE                                               =             0x8D51_u32
  E_RENDERBUFFER_GREEN_SIZE_EXT                                           =             0x8D51_u32
  E_RENDERBUFFER_GREEN_SIZE_OES                                           =             0x8D51_u32
  E_RENDERBUFFER_BLUE_SIZE                                                =             0x8D52_u32
  E_RENDERBUFFER_BLUE_SIZE_EXT                                            =             0x8D52_u32
  E_RENDERBUFFER_BLUE_SIZE_OES                                            =             0x8D52_u32
  E_RENDERBUFFER_ALPHA_SIZE                                               =             0x8D53_u32
  E_RENDERBUFFER_ALPHA_SIZE_EXT                                           =             0x8D53_u32
  E_RENDERBUFFER_ALPHA_SIZE_OES                                           =             0x8D53_u32
  E_RENDERBUFFER_DEPTH_SIZE                                               =             0x8D54_u32
  E_RENDERBUFFER_DEPTH_SIZE_EXT                                           =             0x8D54_u32
  E_RENDERBUFFER_DEPTH_SIZE_OES                                           =             0x8D54_u32
  E_RENDERBUFFER_STENCIL_SIZE                                             =             0x8D55_u32
  E_RENDERBUFFER_STENCIL_SIZE_EXT                                         =             0x8D55_u32
  E_RENDERBUFFER_STENCIL_SIZE_OES                                         =             0x8D55_u32
  E_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE                                    =             0x8D56_u32
  E_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE                              =             0x8D56_u32
  E_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE                              =             0x8D56_u32
  E_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT                                =             0x8D56_u32
  E_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV                                 =             0x8D56_u32
  E_MAX_SAMPLES                                                           =             0x8D57_u32
  E_MAX_SAMPLES_ANGLE                                                     =             0x8D57_u32
  E_MAX_SAMPLES_APPLE                                                     =             0x8D57_u32
  E_MAX_SAMPLES_EXT                                                       =             0x8D57_u32
  E_MAX_SAMPLES_NV                                                        =             0x8D57_u32
  E_TEXTURE_GEN_STR_OES                                                   =             0x8D60_u32
  E_HALF_FLOAT_OES                                                        =             0x8D61_u32
  E_RGB565_OES                                                            =             0x8D62_u32
  E_RGB565                                                                =             0x8D62_u32
  E_ETC1_RGB8_OES                                                         =             0x8D64_u32
  E_TEXTURE_EXTERNAL_OES                                                  =             0x8D65_u32
  E_SAMPLER_EXTERNAL_OES                                                  =             0x8D66_u32
  E_TEXTURE_BINDING_EXTERNAL_OES                                          =             0x8D67_u32
  E_REQUIRED_TEXTURE_IMAGE_UNITS_OES                                      =             0x8D68_u32
  E_PRIMITIVE_RESTART_FIXED_INDEX                                         =             0x8D69_u32
  E_ANY_SAMPLES_PASSED_CONSERVATIVE                                       =             0x8D6A_u32
  E_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT                                   =             0x8D6A_u32
  E_MAX_ELEMENT_INDEX                                                     =             0x8D6B_u32
  E_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT                            =             0x8D6C_u32
  E_RGBA32UI                                                              =             0x8D70_u32
  E_RGBA32UI_EXT                                                          =             0x8D70_u32
  E_RGB32UI                                                               =             0x8D71_u32
  E_RGB32UI_EXT                                                           =             0x8D71_u32
  E_ALPHA32UI_EXT                                                         =             0x8D72_u32
  E_INTENSITY32UI_EXT                                                     =             0x8D73_u32
  E_LUMINANCE32UI_EXT                                                     =             0x8D74_u32
  E_LUMINANCE_ALPHA32UI_EXT                                               =             0x8D75_u32
  E_RGBA16UI                                                              =             0x8D76_u32
  E_RGBA16UI_EXT                                                          =             0x8D76_u32
  E_RGB16UI                                                               =             0x8D77_u32
  E_RGB16UI_EXT                                                           =             0x8D77_u32
  E_ALPHA16UI_EXT                                                         =             0x8D78_u32
  E_INTENSITY16UI_EXT                                                     =             0x8D79_u32
  E_LUMINANCE16UI_EXT                                                     =             0x8D7A_u32
  E_LUMINANCE_ALPHA16UI_EXT                                               =             0x8D7B_u32
  E_RGBA8UI                                                               =             0x8D7C_u32
  E_RGBA8UI_EXT                                                           =             0x8D7C_u32
  E_RGB8UI                                                                =             0x8D7D_u32
  E_RGB8UI_EXT                                                            =             0x8D7D_u32
  E_ALPHA8UI_EXT                                                          =             0x8D7E_u32
  E_INTENSITY8UI_EXT                                                      =             0x8D7F_u32
  E_LUMINANCE8UI_EXT                                                      =             0x8D80_u32
  E_LUMINANCE_ALPHA8UI_EXT                                                =             0x8D81_u32
  E_RGBA32I                                                               =             0x8D82_u32
  E_RGBA32I_EXT                                                           =             0x8D82_u32
  E_RGB32I                                                                =             0x8D83_u32
  E_RGB32I_EXT                                                            =             0x8D83_u32
  E_ALPHA32I_EXT                                                          =             0x8D84_u32
  E_INTENSITY32I_EXT                                                      =             0x8D85_u32
  E_LUMINANCE32I_EXT                                                      =             0x8D86_u32
  E_LUMINANCE_ALPHA32I_EXT                                                =             0x8D87_u32
  E_RGBA16I                                                               =             0x8D88_u32
  E_RGBA16I_EXT                                                           =             0x8D88_u32
  E_RGB16I                                                                =             0x8D89_u32
  E_RGB16I_EXT                                                            =             0x8D89_u32
  E_ALPHA16I_EXT                                                          =             0x8D8A_u32
  E_INTENSITY16I_EXT                                                      =             0x8D8B_u32
  E_LUMINANCE16I_EXT                                                      =             0x8D8C_u32
  E_LUMINANCE_ALPHA16I_EXT                                                =             0x8D8D_u32
  E_RGBA8I                                                                =             0x8D8E_u32
  E_RGBA8I_EXT                                                            =             0x8D8E_u32
  E_RGB8I                                                                 =             0x8D8F_u32
  E_RGB8I_EXT                                                             =             0x8D8F_u32
  E_ALPHA8I_EXT                                                           =             0x8D90_u32
  E_INTENSITY8I_EXT                                                       =             0x8D91_u32
  E_LUMINANCE8I_EXT                                                       =             0x8D92_u32
  E_LUMINANCE_ALPHA8I_EXT                                                 =             0x8D93_u32
  E_RED_INTEGER                                                           =             0x8D94_u32
  E_RED_INTEGER_EXT                                                       =             0x8D94_u32
  E_GREEN_INTEGER                                                         =             0x8D95_u32
  E_GREEN_INTEGER_EXT                                                     =             0x8D95_u32
  E_BLUE_INTEGER                                                          =             0x8D96_u32
  E_BLUE_INTEGER_EXT                                                      =             0x8D96_u32
  E_ALPHA_INTEGER                                                         =             0x8D97_u32
  E_ALPHA_INTEGER_EXT                                                     =             0x8D97_u32
  E_RGB_INTEGER                                                           =             0x8D98_u32
  E_RGB_INTEGER_EXT                                                       =             0x8D98_u32
  E_RGBA_INTEGER                                                          =             0x8D99_u32
  E_RGBA_INTEGER_EXT                                                      =             0x8D99_u32
  E_BGR_INTEGER                                                           =             0x8D9A_u32
  E_BGR_INTEGER_EXT                                                       =             0x8D9A_u32
  E_BGRA_INTEGER                                                          =             0x8D9B_u32
  E_BGRA_INTEGER_EXT                                                      =             0x8D9B_u32
  E_LUMINANCE_INTEGER_EXT                                                 =             0x8D9C_u32
  E_LUMINANCE_ALPHA_INTEGER_EXT                                           =             0x8D9D_u32
  E_RGBA_INTEGER_MODE_EXT                                                 =             0x8D9E_u32
  E_INT_2_10_10_10_REV                                                    =             0x8D9F_u32
  E_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV                              =             0x8DA0_u32
  E_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV                                  =             0x8DA1_u32
  E_VERTEX_PROGRAM_PARAMETER_BUFFER_NV                                    =             0x8DA2_u32
  E_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV                                  =             0x8DA3_u32
  E_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV                                  =             0x8DA4_u32
  E_MAX_PROGRAM_GENERIC_ATTRIBS_NV                                        =             0x8DA5_u32
  E_MAX_PROGRAM_GENERIC_RESULTS_NV                                        =             0x8DA6_u32
  E_FRAMEBUFFER_ATTACHMENT_LAYERED                                        =             0x8DA7_u32
  E_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB                                    =             0x8DA7_u32
  E_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT                                    =             0x8DA7_u32
  E_FRAMEBUFFER_ATTACHMENT_LAYERED_OES                                    =             0x8DA7_u32
  E_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS                                  =             0x8DA8_u32
  E_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB                              =             0x8DA8_u32
  E_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT                              =             0x8DA8_u32
  E_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES                              =             0x8DA8_u32
  E_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB                                =             0x8DA9_u32
  E_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT                                =             0x8DA9_u32
  E_LAYER_NV                                                              =             0x8DAA_u32
  E_DEPTH_COMPONENT32F_NV                                                 =             0x8DAB_u32
  E_DEPTH32F_STENCIL8_NV                                                  =             0x8DAC_u32
  E_FLOAT_32_UNSIGNED_INT_24_8_REV                                        =             0x8DAD_u32
  E_FLOAT_32_UNSIGNED_INT_24_8_REV_NV                                     =             0x8DAD_u32
  E_SHADER_INCLUDE_ARB                                                    =             0x8DAE_u32
  E_DEPTH_BUFFER_FLOAT_MODE_NV                                            =             0x8DAF_u32
  E_FRAMEBUFFER_SRGB                                                      =             0x8DB9_u32
  E_FRAMEBUFFER_SRGB_EXT                                                  =             0x8DB9_u32
  E_FRAMEBUFFER_SRGB_CAPABLE_EXT                                          =             0x8DBA_u32
  E_COMPRESSED_RED_RGTC1                                                  =             0x8DBB_u32
  E_COMPRESSED_RED_RGTC1_EXT                                              =             0x8DBB_u32
  E_COMPRESSED_SIGNED_RED_RGTC1                                           =             0x8DBC_u32
  E_COMPRESSED_SIGNED_RED_RGTC1_EXT                                       =             0x8DBC_u32
  E_COMPRESSED_RED_GREEN_RGTC2_EXT                                        =             0x8DBD_u32
  E_COMPRESSED_RG_RGTC2                                                   =             0x8DBD_u32
  E_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT                                 =             0x8DBE_u32
  E_COMPRESSED_SIGNED_RG_RGTC2                                            =             0x8DBE_u32
  E_SAMPLER_1D_ARRAY                                                      =             0x8DC0_u32
  E_SAMPLER_1D_ARRAY_EXT                                                  =             0x8DC0_u32
  E_SAMPLER_2D_ARRAY                                                      =             0x8DC1_u32
  E_SAMPLER_2D_ARRAY_EXT                                                  =             0x8DC1_u32
  E_SAMPLER_BUFFER                                                        =             0x8DC2_u32
  E_SAMPLER_BUFFER_EXT                                                    =             0x8DC2_u32
  E_SAMPLER_BUFFER_OES                                                    =             0x8DC2_u32
  E_SAMPLER_1D_ARRAY_SHADOW                                               =             0x8DC3_u32
  E_SAMPLER_1D_ARRAY_SHADOW_EXT                                           =             0x8DC3_u32
  E_SAMPLER_2D_ARRAY_SHADOW                                               =             0x8DC4_u32
  E_SAMPLER_2D_ARRAY_SHADOW_EXT                                           =             0x8DC4_u32
  E_SAMPLER_2D_ARRAY_SHADOW_NV                                            =             0x8DC4_u32
  E_SAMPLER_CUBE_SHADOW                                                   =             0x8DC5_u32
  E_SAMPLER_CUBE_SHADOW_EXT                                               =             0x8DC5_u32
  E_SAMPLER_CUBE_SHADOW_NV                                                =             0x8DC5_u32
  E_UNSIGNED_INT_VEC2                                                     =             0x8DC6_u32
  E_UNSIGNED_INT_VEC2_EXT                                                 =             0x8DC6_u32
  E_UNSIGNED_INT_VEC3                                                     =             0x8DC7_u32
  E_UNSIGNED_INT_VEC3_EXT                                                 =             0x8DC7_u32
  E_UNSIGNED_INT_VEC4                                                     =             0x8DC8_u32
  E_UNSIGNED_INT_VEC4_EXT                                                 =             0x8DC8_u32
  E_INT_SAMPLER_1D                                                        =             0x8DC9_u32
  E_INT_SAMPLER_1D_EXT                                                    =             0x8DC9_u32
  E_INT_SAMPLER_2D                                                        =             0x8DCA_u32
  E_INT_SAMPLER_2D_EXT                                                    =             0x8DCA_u32
  E_INT_SAMPLER_3D                                                        =             0x8DCB_u32
  E_INT_SAMPLER_3D_EXT                                                    =             0x8DCB_u32
  E_INT_SAMPLER_CUBE                                                      =             0x8DCC_u32
  E_INT_SAMPLER_CUBE_EXT                                                  =             0x8DCC_u32
  E_INT_SAMPLER_2D_RECT                                                   =             0x8DCD_u32
  E_INT_SAMPLER_2D_RECT_EXT                                               =             0x8DCD_u32
  E_INT_SAMPLER_1D_ARRAY                                                  =             0x8DCE_u32
  E_INT_SAMPLER_1D_ARRAY_EXT                                              =             0x8DCE_u32
  E_INT_SAMPLER_2D_ARRAY                                                  =             0x8DCF_u32
  E_INT_SAMPLER_2D_ARRAY_EXT                                              =             0x8DCF_u32
  E_INT_SAMPLER_BUFFER                                                    =             0x8DD0_u32
  E_INT_SAMPLER_BUFFER_EXT                                                =             0x8DD0_u32
  E_INT_SAMPLER_BUFFER_OES                                                =             0x8DD0_u32
  E_UNSIGNED_INT_SAMPLER_1D                                               =             0x8DD1_u32
  E_UNSIGNED_INT_SAMPLER_1D_EXT                                           =             0x8DD1_u32
  E_UNSIGNED_INT_SAMPLER_2D                                               =             0x8DD2_u32
  E_UNSIGNED_INT_SAMPLER_2D_EXT                                           =             0x8DD2_u32
  E_UNSIGNED_INT_SAMPLER_3D                                               =             0x8DD3_u32
  E_UNSIGNED_INT_SAMPLER_3D_EXT                                           =             0x8DD3_u32
  E_UNSIGNED_INT_SAMPLER_CUBE                                             =             0x8DD4_u32
  E_UNSIGNED_INT_SAMPLER_CUBE_EXT                                         =             0x8DD4_u32
  E_UNSIGNED_INT_SAMPLER_2D_RECT                                          =             0x8DD5_u32
  E_UNSIGNED_INT_SAMPLER_2D_RECT_EXT                                      =             0x8DD5_u32
  E_UNSIGNED_INT_SAMPLER_1D_ARRAY                                         =             0x8DD6_u32
  E_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT                                     =             0x8DD6_u32
  E_UNSIGNED_INT_SAMPLER_2D_ARRAY                                         =             0x8DD7_u32
  E_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT                                     =             0x8DD7_u32
  E_UNSIGNED_INT_SAMPLER_BUFFER                                           =             0x8DD8_u32
  E_UNSIGNED_INT_SAMPLER_BUFFER_EXT                                       =             0x8DD8_u32
  E_UNSIGNED_INT_SAMPLER_BUFFER_OES                                       =             0x8DD8_u32
  E_GEOMETRY_SHADER                                                       =             0x8DD9_u32
  E_GEOMETRY_SHADER_ARB                                                   =             0x8DD9_u32
  E_GEOMETRY_SHADER_EXT                                                   =             0x8DD9_u32
  E_GEOMETRY_SHADER_OES                                                   =             0x8DD9_u32
  E_GEOMETRY_VERTICES_OUT_ARB                                             =             0x8DDA_u32
  E_GEOMETRY_VERTICES_OUT_EXT                                             =             0x8DDA_u32
  E_GEOMETRY_INPUT_TYPE_ARB                                               =             0x8DDB_u32
  E_GEOMETRY_INPUT_TYPE_EXT                                               =             0x8DDB_u32
  E_GEOMETRY_OUTPUT_TYPE_ARB                                              =             0x8DDC_u32
  E_GEOMETRY_OUTPUT_TYPE_EXT                                              =             0x8DDC_u32
  E_MAX_GEOMETRY_VARYING_COMPONENTS_ARB                                   =             0x8DDD_u32
  E_MAX_GEOMETRY_VARYING_COMPONENTS_EXT                                   =             0x8DDD_u32
  E_MAX_VERTEX_VARYING_COMPONENTS_ARB                                     =             0x8DDE_u32
  E_MAX_VERTEX_VARYING_COMPONENTS_EXT                                     =             0x8DDE_u32
  E_MAX_GEOMETRY_UNIFORM_COMPONENTS                                       =             0x8DDF_u32
  E_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB                                   =             0x8DDF_u32
  E_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT                                   =             0x8DDF_u32
  E_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES                                   =             0x8DDF_u32
  E_MAX_GEOMETRY_OUTPUT_VERTICES                                          =             0x8DE0_u32
  E_MAX_GEOMETRY_OUTPUT_VERTICES_ARB                                      =             0x8DE0_u32
  E_MAX_GEOMETRY_OUTPUT_VERTICES_EXT                                      =             0x8DE0_u32
  E_MAX_GEOMETRY_OUTPUT_VERTICES_OES                                      =             0x8DE0_u32
  E_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS                                  =             0x8DE1_u32
  E_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB                              =             0x8DE1_u32
  E_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT                              =             0x8DE1_u32
  E_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES                              =             0x8DE1_u32
  E_MAX_VERTEX_BINDABLE_UNIFORMS_EXT                                      =             0x8DE2_u32
  E_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT                                    =             0x8DE3_u32
  E_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT                                    =             0x8DE4_u32
  E_ACTIVE_SUBROUTINES                                                    =             0x8DE5_u32
  E_ACTIVE_SUBROUTINE_UNIFORMS                                            =             0x8DE6_u32
  E_MAX_SUBROUTINES                                                       =             0x8DE7_u32
  E_MAX_SUBROUTINE_UNIFORM_LOCATIONS                                      =             0x8DE8_u32
  E_NAMED_STRING_LENGTH_ARB                                               =             0x8DE9_u32
  E_NAMED_STRING_TYPE_ARB                                                 =             0x8DEA_u32
  E_MAX_BINDABLE_UNIFORM_SIZE_EXT                                         =             0x8DED_u32
  E_UNIFORM_BUFFER_EXT                                                    =             0x8DEE_u32
  E_UNIFORM_BUFFER_BINDING_EXT                                            =             0x8DEF_u32
  E_LOW_FLOAT                                                             =             0x8DF0_u32
  E_MEDIUM_FLOAT                                                          =             0x8DF1_u32
  E_HIGH_FLOAT                                                            =             0x8DF2_u32
  E_LOW_INT                                                               =             0x8DF3_u32
  E_MEDIUM_INT                                                            =             0x8DF4_u32
  E_HIGH_INT                                                              =             0x8DF5_u32
  E_UNSIGNED_INT_10_10_10_2_OES                                           =             0x8DF6_u32
  E_INT_10_10_10_2_OES                                                    =             0x8DF7_u32
  E_SHADER_BINARY_FORMATS                                                 =             0x8DF8_u32
  E_NUM_SHADER_BINARY_FORMATS                                             =             0x8DF9_u32
  E_SHADER_COMPILER                                                       =             0x8DFA_u32
  E_MAX_VERTEX_UNIFORM_VECTORS                                            =             0x8DFB_u32
  E_MAX_VARYING_VECTORS                                                   =             0x8DFC_u32
  E_MAX_FRAGMENT_UNIFORM_VECTORS                                          =             0x8DFD_u32
  E_RENDERBUFFER_COLOR_SAMPLES_NV                                         =             0x8E10_u32
  E_MAX_MULTISAMPLE_COVERAGE_MODES_NV                                     =             0x8E11_u32
  E_MULTISAMPLE_COVERAGE_MODES_NV                                         =             0x8E12_u32
  E_QUERY_WAIT                                                            =             0x8E13_u32
  E_QUERY_WAIT_NV                                                         =             0x8E13_u32
  E_QUERY_NO_WAIT                                                         =             0x8E14_u32
  E_QUERY_NO_WAIT_NV                                                      =             0x8E14_u32
  E_QUERY_BY_REGION_WAIT                                                  =             0x8E15_u32
  E_QUERY_BY_REGION_WAIT_NV                                               =             0x8E15_u32
  E_QUERY_BY_REGION_NO_WAIT                                               =             0x8E16_u32
  E_QUERY_BY_REGION_NO_WAIT_NV                                            =             0x8E16_u32
  E_QUERY_WAIT_INVERTED                                                   =             0x8E17_u32
  E_QUERY_NO_WAIT_INVERTED                                                =             0x8E18_u32
  E_QUERY_BY_REGION_WAIT_INVERTED                                         =             0x8E19_u32
  E_QUERY_BY_REGION_NO_WAIT_INVERTED                                      =             0x8E1A_u32
  E_POLYGON_OFFSET_CLAMP_EXT                                              =             0x8E1B_u32
  E_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS                          =             0x8E1E_u32
  E_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT                      =             0x8E1E_u32
  E_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES                      =             0x8E1E_u32
  E_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS                       =             0x8E1F_u32
  E_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT                   =             0x8E1F_u32
  E_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES                   =             0x8E1F_u32
  E_COLOR_SAMPLES_NV                                                      =             0x8E20_u32
  E_TRANSFORM_FEEDBACK                                                    =             0x8E22_u32
  E_TRANSFORM_FEEDBACK_NV                                                 =             0x8E22_u32
  E_TRANSFORM_FEEDBACK_BUFFER_PAUSED                                      =             0x8E23_u32
  E_TRANSFORM_FEEDBACK_PAUSED                                             =             0x8E23_u32
  E_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV                                   =             0x8E23_u32
  E_TRANSFORM_FEEDBACK_BUFFER_ACTIVE                                      =             0x8E24_u32
  E_TRANSFORM_FEEDBACK_ACTIVE                                             =             0x8E24_u32
  E_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV                                   =             0x8E24_u32
  E_TRANSFORM_FEEDBACK_BINDING                                            =             0x8E25_u32
  E_TRANSFORM_FEEDBACK_BINDING_NV                                         =             0x8E25_u32
  E_FRAME_NV                                                              =             0x8E26_u32
  E_FIELDS_NV                                                             =             0x8E27_u32
  E_CURRENT_TIME_NV                                                       =             0x8E28_u32
  E_TIMESTAMP                                                             =             0x8E28_u32
  E_TIMESTAMP_EXT                                                         =             0x8E28_u32
  E_NUM_FILL_STREAMS_NV                                                   =             0x8E29_u32
  E_PRESENT_TIME_NV                                                       =             0x8E2A_u32
  E_PRESENT_DURATION_NV                                                   =             0x8E2B_u32
  E_DEPTH_COMPONENT16_NONLINEAR_NV                                        =             0x8E2C_u32
  E_PROGRAM_MATRIX_EXT                                                    =             0x8E2D_u32
  E_TRANSPOSE_PROGRAM_MATRIX_EXT                                          =             0x8E2E_u32
  E_PROGRAM_MATRIX_STACK_DEPTH_EXT                                        =             0x8E2F_u32
  E_TEXTURE_SWIZZLE_R                                                     =             0x8E42_u32
  E_TEXTURE_SWIZZLE_R_EXT                                                 =             0x8E42_u32
  E_TEXTURE_SWIZZLE_G                                                     =             0x8E43_u32
  E_TEXTURE_SWIZZLE_G_EXT                                                 =             0x8E43_u32
  E_TEXTURE_SWIZZLE_B                                                     =             0x8E44_u32
  E_TEXTURE_SWIZZLE_B_EXT                                                 =             0x8E44_u32
  E_TEXTURE_SWIZZLE_A                                                     =             0x8E45_u32
  E_TEXTURE_SWIZZLE_A_EXT                                                 =             0x8E45_u32
  E_TEXTURE_SWIZZLE_RGBA                                                  =             0x8E46_u32
  E_TEXTURE_SWIZZLE_RGBA_EXT                                              =             0x8E46_u32
  E_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS                                   =             0x8E47_u32
  E_ACTIVE_SUBROUTINE_MAX_LENGTH                                          =             0x8E48_u32
  E_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH                                  =             0x8E49_u32
  E_NUM_COMPATIBLE_SUBROUTINES                                            =             0x8E4A_u32
  E_COMPATIBLE_SUBROUTINES                                                =             0x8E4B_u32
  E_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION                              =             0x8E4C_u32
  E_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT                          =             0x8E4C_u32
  E_FIRST_VERTEX_CONVENTION                                               =             0x8E4D_u32
  E_FIRST_VERTEX_CONVENTION_EXT                                           =             0x8E4D_u32
  E_FIRST_VERTEX_CONVENTION_OES                                           =             0x8E4D_u32
  E_LAST_VERTEX_CONVENTION                                                =             0x8E4E_u32
  E_LAST_VERTEX_CONVENTION_EXT                                            =             0x8E4E_u32
  E_LAST_VERTEX_CONVENTION_OES                                            =             0x8E4E_u32
  E_PROVOKING_VERTEX                                                      =             0x8E4F_u32
  E_PROVOKING_VERTEX_EXT                                                  =             0x8E4F_u32
  E_SAMPLE_POSITION                                                       =             0x8E50_u32
  E_SAMPLE_POSITION_NV                                                    =             0x8E50_u32
  E_SAMPLE_LOCATION_ARB                                                   =             0x8E50_u32
  E_SAMPLE_LOCATION_NV                                                    =             0x8E50_u32
  E_SAMPLE_MASK                                                           =             0x8E51_u32
  E_SAMPLE_MASK_NV                                                        =             0x8E51_u32
  E_SAMPLE_MASK_VALUE                                                     =             0x8E52_u32
  E_SAMPLE_MASK_VALUE_NV                                                  =             0x8E52_u32
  E_TEXTURE_BINDING_RENDERBUFFER_NV                                       =             0x8E53_u32
  E_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV                            =             0x8E54_u32
  E_TEXTURE_RENDERBUFFER_NV                                               =             0x8E55_u32
  E_SAMPLER_RENDERBUFFER_NV                                               =             0x8E56_u32
  E_INT_SAMPLER_RENDERBUFFER_NV                                           =             0x8E57_u32
  E_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV                                  =             0x8E58_u32
  E_MAX_SAMPLE_MASK_WORDS                                                 =             0x8E59_u32
  E_MAX_SAMPLE_MASK_WORDS_NV                                              =             0x8E59_u32
  E_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV                                   =             0x8E5A_u32
  E_MAX_GEOMETRY_SHADER_INVOCATIONS                                       =             0x8E5A_u32
  E_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT                                   =             0x8E5A_u32
  E_MAX_GEOMETRY_SHADER_INVOCATIONS_OES                                   =             0x8E5A_u32
  E_MIN_FRAGMENT_INTERPOLATION_OFFSET                                     =             0x8E5B_u32
  E_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES                                 =             0x8E5B_u32
  E_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV                                  =             0x8E5B_u32
  E_MAX_FRAGMENT_INTERPOLATION_OFFSET                                     =             0x8E5C_u32
  E_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES                                 =             0x8E5C_u32
  E_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV                                  =             0x8E5C_u32
  E_FRAGMENT_INTERPOLATION_OFFSET_BITS                                    =             0x8E5D_u32
  E_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES                                =             0x8E5D_u32
  E_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV                         =             0x8E5D_u32
  E_MIN_PROGRAM_TEXTURE_GATHER_OFFSET                                     =             0x8E5E_u32
  E_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB                                 =             0x8E5E_u32
  E_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV                                  =             0x8E5E_u32
  E_MAX_PROGRAM_TEXTURE_GATHER_OFFSET                                     =             0x8E5F_u32
  E_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB                                 =             0x8E5F_u32
  E_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV                                  =             0x8E5F_u32
  E_MAX_TRANSFORM_FEEDBACK_BUFFERS                                        =             0x8E70_u32
  E_MAX_VERTEX_STREAMS                                                    =             0x8E71_u32
  E_PATCH_VERTICES                                                        =             0x8E72_u32
  E_PATCH_VERTICES_EXT                                                    =             0x8E72_u32
  E_PATCH_VERTICES_OES                                                    =             0x8E72_u32
  E_PATCH_DEFAULT_INNER_LEVEL                                             =             0x8E73_u32
  E_PATCH_DEFAULT_INNER_LEVEL_EXT                                         =             0x8E73_u32
  E_PATCH_DEFAULT_OUTER_LEVEL                                             =             0x8E74_u32
  E_PATCH_DEFAULT_OUTER_LEVEL_EXT                                         =             0x8E74_u32
  E_TESS_CONTROL_OUTPUT_VERTICES                                          =             0x8E75_u32
  E_TESS_CONTROL_OUTPUT_VERTICES_EXT                                      =             0x8E75_u32
  E_TESS_CONTROL_OUTPUT_VERTICES_OES                                      =             0x8E75_u32
  E_TESS_GEN_MODE                                                         =             0x8E76_u32
  E_TESS_GEN_MODE_EXT                                                     =             0x8E76_u32
  E_TESS_GEN_MODE_OES                                                     =             0x8E76_u32
  E_TESS_GEN_SPACING                                                      =             0x8E77_u32
  E_TESS_GEN_SPACING_EXT                                                  =             0x8E77_u32
  E_TESS_GEN_SPACING_OES                                                  =             0x8E77_u32
  E_TESS_GEN_VERTEX_ORDER                                                 =             0x8E78_u32
  E_TESS_GEN_VERTEX_ORDER_EXT                                             =             0x8E78_u32
  E_TESS_GEN_VERTEX_ORDER_OES                                             =             0x8E78_u32
  E_TESS_GEN_POINT_MODE                                                   =             0x8E79_u32
  E_TESS_GEN_POINT_MODE_EXT                                               =             0x8E79_u32
  E_TESS_GEN_POINT_MODE_OES                                               =             0x8E79_u32
  E_ISOLINES                                                              =             0x8E7A_u32
  E_ISOLINES_EXT                                                          =             0x8E7A_u32
  E_ISOLINES_OES                                                          =             0x8E7A_u32
  E_FRACTIONAL_ODD                                                        =             0x8E7B_u32
  E_FRACTIONAL_ODD_EXT                                                    =             0x8E7B_u32
  E_FRACTIONAL_ODD_OES                                                    =             0x8E7B_u32
  E_FRACTIONAL_EVEN                                                       =             0x8E7C_u32
  E_FRACTIONAL_EVEN_EXT                                                   =             0x8E7C_u32
  E_FRACTIONAL_EVEN_OES                                                   =             0x8E7C_u32
  E_MAX_PATCH_VERTICES                                                    =             0x8E7D_u32
  E_MAX_PATCH_VERTICES_EXT                                                =             0x8E7D_u32
  E_MAX_PATCH_VERTICES_OES                                                =             0x8E7D_u32
  E_MAX_TESS_GEN_LEVEL                                                    =             0x8E7E_u32
  E_MAX_TESS_GEN_LEVEL_EXT                                                =             0x8E7E_u32
  E_MAX_TESS_GEN_LEVEL_OES                                                =             0x8E7E_u32
  E_MAX_TESS_CONTROL_UNIFORM_COMPONENTS                                   =             0x8E7F_u32
  E_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT                               =             0x8E7F_u32
  E_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES                               =             0x8E7F_u32
  E_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS                                =             0x8E80_u32
  E_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT                            =             0x8E80_u32
  E_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES                            =             0x8E80_u32
  E_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS                                  =             0x8E81_u32
  E_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT                              =             0x8E81_u32
  E_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES                              =             0x8E81_u32
  E_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS                               =             0x8E82_u32
  E_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT                           =             0x8E82_u32
  E_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES                           =             0x8E82_u32
  E_MAX_TESS_CONTROL_OUTPUT_COMPONENTS                                    =             0x8E83_u32
  E_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT                                =             0x8E83_u32
  E_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES                                =             0x8E83_u32
  E_MAX_TESS_PATCH_COMPONENTS                                             =             0x8E84_u32
  E_MAX_TESS_PATCH_COMPONENTS_EXT                                         =             0x8E84_u32
  E_MAX_TESS_PATCH_COMPONENTS_OES                                         =             0x8E84_u32
  E_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS                              =             0x8E85_u32
  E_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT                          =             0x8E85_u32
  E_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES                          =             0x8E85_u32
  E_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS                                 =             0x8E86_u32
  E_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT                             =             0x8E86_u32
  E_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES                             =             0x8E86_u32
  E_TESS_EVALUATION_SHADER                                                =             0x8E87_u32
  E_TESS_EVALUATION_SHADER_EXT                                            =             0x8E87_u32
  E_TESS_EVALUATION_SHADER_OES                                            =             0x8E87_u32
  E_TESS_CONTROL_SHADER                                                   =             0x8E88_u32
  E_TESS_CONTROL_SHADER_EXT                                               =             0x8E88_u32
  E_TESS_CONTROL_SHADER_OES                                               =             0x8E88_u32
  E_MAX_TESS_CONTROL_UNIFORM_BLOCKS                                       =             0x8E89_u32
  E_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT                                   =             0x8E89_u32
  E_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES                                   =             0x8E89_u32
  E_MAX_TESS_EVALUATION_UNIFORM_BLOCKS                                    =             0x8E8A_u32
  E_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT                                =             0x8E8A_u32
  E_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES                                =             0x8E8A_u32
  E_COMPRESSED_RGBA_BPTC_UNORM                                            =             0x8E8C_u32
  E_COMPRESSED_RGBA_BPTC_UNORM_ARB                                        =             0x8E8C_u32
  E_COMPRESSED_SRGB_ALPHA_BPTC_UNORM                                      =             0x8E8D_u32
  E_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB                                  =             0x8E8D_u32
  E_COMPRESSED_RGB_BPTC_SIGNED_FLOAT                                      =             0x8E8E_u32
  E_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB                                  =             0x8E8E_u32
  E_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT                                    =             0x8E8F_u32
  E_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB                                =             0x8E8F_u32
  E_COVERAGE_COMPONENT_NV                                                 =             0x8ED0_u32
  E_COVERAGE_COMPONENT4_NV                                                =             0x8ED1_u32
  E_COVERAGE_ATTACHMENT_NV                                                =             0x8ED2_u32
  E_COVERAGE_BUFFERS_NV                                                   =             0x8ED3_u32
  E_COVERAGE_SAMPLES_NV                                                   =             0x8ED4_u32
  E_COVERAGE_ALL_FRAGMENTS_NV                                             =             0x8ED5_u32
  E_COVERAGE_EDGE_FRAGMENTS_NV                                            =             0x8ED6_u32
  E_COVERAGE_AUTOMATIC_NV                                                 =             0x8ED7_u32
  E_INCLUSIVE_EXT                                                         =             0x8F10_u32
  E_EXCLUSIVE_EXT                                                         =             0x8F11_u32
  E_WINDOW_RECTANGLE_EXT                                                  =             0x8F12_u32
  E_WINDOW_RECTANGLE_MODE_EXT                                             =             0x8F13_u32
  E_MAX_WINDOW_RECTANGLES_EXT                                             =             0x8F14_u32
  E_NUM_WINDOW_RECTANGLES_EXT                                             =             0x8F15_u32
  E_BUFFER_GPU_ADDRESS_NV                                                 =             0x8F1D_u32
  E_VERTEX_ATTRIB_ARRAY_UNIFIED_NV                                        =             0x8F1E_u32
  E_ELEMENT_ARRAY_UNIFIED_NV                                              =             0x8F1F_u32
  E_VERTEX_ATTRIB_ARRAY_ADDRESS_NV                                        =             0x8F20_u32
  E_VERTEX_ARRAY_ADDRESS_NV                                               =             0x8F21_u32
  E_NORMAL_ARRAY_ADDRESS_NV                                               =             0x8F22_u32
  E_COLOR_ARRAY_ADDRESS_NV                                                =             0x8F23_u32
  E_INDEX_ARRAY_ADDRESS_NV                                                =             0x8F24_u32
  E_TEXTURE_COORD_ARRAY_ADDRESS_NV                                        =             0x8F25_u32
  E_EDGE_FLAG_ARRAY_ADDRESS_NV                                            =             0x8F26_u32
  E_SECONDARY_COLOR_ARRAY_ADDRESS_NV                                      =             0x8F27_u32
  E_FOG_COORD_ARRAY_ADDRESS_NV                                            =             0x8F28_u32
  E_ELEMENT_ARRAY_ADDRESS_NV                                              =             0x8F29_u32
  E_VERTEX_ATTRIB_ARRAY_LENGTH_NV                                         =             0x8F2A_u32
  E_VERTEX_ARRAY_LENGTH_NV                                                =             0x8F2B_u32
  E_NORMAL_ARRAY_LENGTH_NV                                                =             0x8F2C_u32
  E_COLOR_ARRAY_LENGTH_NV                                                 =             0x8F2D_u32
  E_INDEX_ARRAY_LENGTH_NV                                                 =             0x8F2E_u32
  E_TEXTURE_COORD_ARRAY_LENGTH_NV                                         =             0x8F2F_u32
  E_EDGE_FLAG_ARRAY_LENGTH_NV                                             =             0x8F30_u32
  E_SECONDARY_COLOR_ARRAY_LENGTH_NV                                       =             0x8F31_u32
  E_FOG_COORD_ARRAY_LENGTH_NV                                             =             0x8F32_u32
  E_ELEMENT_ARRAY_LENGTH_NV                                               =             0x8F33_u32
  E_GPU_ADDRESS_NV                                                        =             0x8F34_u32
  E_MAX_SHADER_BUFFER_ADDRESS_NV                                          =             0x8F35_u32
  E_COPY_READ_BUFFER                                                      =             0x8F36_u32
  E_COPY_READ_BUFFER_NV                                                   =             0x8F36_u32
  E_COPY_READ_BUFFER_BINDING                                              =             0x8F36_u32
  E_COPY_WRITE_BUFFER                                                     =             0x8F37_u32
  E_COPY_WRITE_BUFFER_NV                                                  =             0x8F37_u32
  E_COPY_WRITE_BUFFER_BINDING                                             =             0x8F37_u32
  E_MAX_IMAGE_UNITS                                                       =             0x8F38_u32
  E_MAX_IMAGE_UNITS_EXT                                                   =             0x8F38_u32
  E_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS                         =             0x8F39_u32
  E_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT                     =             0x8F39_u32
  E_MAX_COMBINED_SHADER_OUTPUT_RESOURCES                                  =             0x8F39_u32
  E_IMAGE_BINDING_NAME                                                    =             0x8F3A_u32
  E_IMAGE_BINDING_NAME_EXT                                                =             0x8F3A_u32
  E_IMAGE_BINDING_LEVEL                                                   =             0x8F3B_u32
  E_IMAGE_BINDING_LEVEL_EXT                                               =             0x8F3B_u32
  E_IMAGE_BINDING_LAYERED                                                 =             0x8F3C_u32
  E_IMAGE_BINDING_LAYERED_EXT                                             =             0x8F3C_u32
  E_IMAGE_BINDING_LAYER                                                   =             0x8F3D_u32
  E_IMAGE_BINDING_LAYER_EXT                                               =             0x8F3D_u32
  E_IMAGE_BINDING_ACCESS                                                  =             0x8F3E_u32
  E_IMAGE_BINDING_ACCESS_EXT                                              =             0x8F3E_u32
  E_DRAW_INDIRECT_BUFFER                                                  =             0x8F3F_u32
  E_DRAW_INDIRECT_UNIFIED_NV                                              =             0x8F40_u32
  E_DRAW_INDIRECT_ADDRESS_NV                                              =             0x8F41_u32
  E_DRAW_INDIRECT_LENGTH_NV                                               =             0x8F42_u32
  E_DRAW_INDIRECT_BUFFER_BINDING                                          =             0x8F43_u32
  E_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV                                  =             0x8F44_u32
  E_MAX_PROGRAM_SUBROUTINE_NUM_NV                                         =             0x8F45_u32
  E_DOUBLE_MAT2                                                           =             0x8F46_u32
  E_DOUBLE_MAT2_EXT                                                       =             0x8F46_u32
  E_DOUBLE_MAT3                                                           =             0x8F47_u32
  E_DOUBLE_MAT3_EXT                                                       =             0x8F47_u32
  E_DOUBLE_MAT4                                                           =             0x8F48_u32
  E_DOUBLE_MAT4_EXT                                                       =             0x8F48_u32
  E_DOUBLE_MAT2x3                                                         =             0x8F49_u32
  E_DOUBLE_MAT2x3_EXT                                                     =             0x8F49_u32
  E_DOUBLE_MAT2x4                                                         =             0x8F4A_u32
  E_DOUBLE_MAT2x4_EXT                                                     =             0x8F4A_u32
  E_DOUBLE_MAT3x2                                                         =             0x8F4B_u32
  E_DOUBLE_MAT3x2_EXT                                                     =             0x8F4B_u32
  E_DOUBLE_MAT3x4                                                         =             0x8F4C_u32
  E_DOUBLE_MAT3x4_EXT                                                     =             0x8F4C_u32
  E_DOUBLE_MAT4x2                                                         =             0x8F4D_u32
  E_DOUBLE_MAT4x2_EXT                                                     =             0x8F4D_u32
  E_DOUBLE_MAT4x3                                                         =             0x8F4E_u32
  E_DOUBLE_MAT4x3_EXT                                                     =             0x8F4E_u32
  E_VERTEX_BINDING_BUFFER                                                 =             0x8F4F_u32
  E_MALI_SHADER_BINARY_ARM                                                =             0x8F60_u32
  E_MALI_PROGRAM_BINARY_ARM                                               =             0x8F61_u32
  E_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT                          =             0x8F63_u32
  E_SHADER_PIXEL_LOCAL_STORAGE_EXT                                        =             0x8F64_u32
  E_FETCH_PER_SAMPLE_ARM                                                  =             0x8F65_u32
  E_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM                             =             0x8F66_u32
  E_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT                               =             0x8F67_u32
  E_RED_SNORM                                                             =             0x8F90_u32
  E_RG_SNORM                                                              =             0x8F91_u32
  E_RGB_SNORM                                                             =             0x8F92_u32
  E_RGBA_SNORM                                                            =             0x8F93_u32
  E_R8_SNORM                                                              =             0x8F94_u32
  E_RG8_SNORM                                                             =             0x8F95_u32
  E_RGB8_SNORM                                                            =             0x8F96_u32
  E_RGBA8_SNORM                                                           =             0x8F97_u32
  E_R16_SNORM                                                             =             0x8F98_u32
  E_R16_SNORM_EXT                                                         =             0x8F98_u32
  E_RG16_SNORM                                                            =             0x8F99_u32
  E_RG16_SNORM_EXT                                                        =             0x8F99_u32
  E_RGB16_SNORM                                                           =             0x8F9A_u32
  E_RGB16_SNORM_EXT                                                       =             0x8F9A_u32
  E_RGBA16_SNORM                                                          =             0x8F9B_u32
  E_RGBA16_SNORM_EXT                                                      =             0x8F9B_u32
  E_SIGNED_NORMALIZED                                                     =             0x8F9C_u32
  E_PRIMITIVE_RESTART                                                     =             0x8F9D_u32
  E_PRIMITIVE_RESTART_INDEX                                               =             0x8F9E_u32
  E_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB                             =             0x8F9F_u32
  E_PERFMON_GLOBAL_MODE_QCOM                                              =             0x8FA0_u32
  E_BINNING_CONTROL_HINT_QCOM                                             =             0x8FB0_u32
  E_CPU_OPTIMIZED_QCOM                                                    =             0x8FB1_u32
  E_GPU_OPTIMIZED_QCOM                                                    =             0x8FB2_u32
  E_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM                                     =             0x8FB3_u32
  E_GPU_DISJOINT_EXT                                                      =             0x8FBB_u32
  E_SR8_EXT                                                               =             0x8FBD_u32
  E_SRG8_EXT                                                              =             0x8FBE_u32
  E_SHADER_BINARY_VIV                                                     =             0x8FC4_u32
  E_INT8_NV                                                               =             0x8FE0_u32
  E_INT8_VEC2_NV                                                          =             0x8FE1_u32
  E_INT8_VEC3_NV                                                          =             0x8FE2_u32
  E_INT8_VEC4_NV                                                          =             0x8FE3_u32
  E_INT16_NV                                                              =             0x8FE4_u32
  E_INT16_VEC2_NV                                                         =             0x8FE5_u32
  E_INT16_VEC3_NV                                                         =             0x8FE6_u32
  E_INT16_VEC4_NV                                                         =             0x8FE7_u32
  E_INT64_VEC2_ARB                                                        =             0x8FE9_u32
  E_INT64_VEC2_NV                                                         =             0x8FE9_u32
  E_INT64_VEC3_ARB                                                        =             0x8FEA_u32
  E_INT64_VEC3_NV                                                         =             0x8FEA_u32
  E_INT64_VEC4_ARB                                                        =             0x8FEB_u32
  E_INT64_VEC4_NV                                                         =             0x8FEB_u32
  E_UNSIGNED_INT8_NV                                                      =             0x8FEC_u32
  E_UNSIGNED_INT8_VEC2_NV                                                 =             0x8FED_u32
  E_UNSIGNED_INT8_VEC3_NV                                                 =             0x8FEE_u32
  E_UNSIGNED_INT8_VEC4_NV                                                 =             0x8FEF_u32
  E_UNSIGNED_INT16_NV                                                     =             0x8FF0_u32
  E_UNSIGNED_INT16_VEC2_NV                                                =             0x8FF1_u32
  E_UNSIGNED_INT16_VEC3_NV                                                =             0x8FF2_u32
  E_UNSIGNED_INT16_VEC4_NV                                                =             0x8FF3_u32
  E_UNSIGNED_INT64_VEC2_ARB                                               =             0x8FF5_u32
  E_UNSIGNED_INT64_VEC2_NV                                                =             0x8FF5_u32
  E_UNSIGNED_INT64_VEC3_ARB                                               =             0x8FF6_u32
  E_UNSIGNED_INT64_VEC3_NV                                                =             0x8FF6_u32
  E_UNSIGNED_INT64_VEC4_ARB                                               =             0x8FF7_u32
  E_UNSIGNED_INT64_VEC4_NV                                                =             0x8FF7_u32
  E_FLOAT16_NV                                                            =             0x8FF8_u32
  E_FLOAT16_VEC2_NV                                                       =             0x8FF9_u32
  E_FLOAT16_VEC3_NV                                                       =             0x8FFA_u32
  E_FLOAT16_VEC4_NV                                                       =             0x8FFB_u32
  E_DOUBLE_VEC2                                                           =             0x8FFC_u32
  E_DOUBLE_VEC2_EXT                                                       =             0x8FFC_u32
  E_DOUBLE_VEC3                                                           =             0x8FFD_u32
  E_DOUBLE_VEC3_EXT                                                       =             0x8FFD_u32
  E_DOUBLE_VEC4                                                           =             0x8FFE_u32
  E_DOUBLE_VEC4_EXT                                                       =             0x8FFE_u32
  E_SAMPLER_BUFFER_AMD                                                    =             0x9001_u32
  E_INT_SAMPLER_BUFFER_AMD                                                =             0x9002_u32
  E_UNSIGNED_INT_SAMPLER_BUFFER_AMD                                       =             0x9003_u32
  E_TESSELLATION_MODE_AMD                                                 =             0x9004_u32
  E_TESSELLATION_FACTOR_AMD                                               =             0x9005_u32
  E_DISCRETE_AMD                                                          =             0x9006_u32
  E_CONTINUOUS_AMD                                                        =             0x9007_u32
  E_TEXTURE_CUBE_MAP_ARRAY                                                =             0x9009_u32
  E_TEXTURE_CUBE_MAP_ARRAY_ARB                                            =             0x9009_u32
  E_TEXTURE_CUBE_MAP_ARRAY_EXT                                            =             0x9009_u32
  E_TEXTURE_CUBE_MAP_ARRAY_OES                                            =             0x9009_u32
  E_TEXTURE_BINDING_CUBE_MAP_ARRAY                                        =             0x900A_u32
  E_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB                                    =             0x900A_u32
  E_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT                                    =             0x900A_u32
  E_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES                                    =             0x900A_u32
  E_PROXY_TEXTURE_CUBE_MAP_ARRAY                                          =             0x900B_u32
  E_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB                                      =             0x900B_u32
  E_SAMPLER_CUBE_MAP_ARRAY                                                =             0x900C_u32
  E_SAMPLER_CUBE_MAP_ARRAY_ARB                                            =             0x900C_u32
  E_SAMPLER_CUBE_MAP_ARRAY_EXT                                            =             0x900C_u32
  E_SAMPLER_CUBE_MAP_ARRAY_OES                                            =             0x900C_u32
  E_SAMPLER_CUBE_MAP_ARRAY_SHADOW                                         =             0x900D_u32
  E_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB                                     =             0x900D_u32
  E_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT                                     =             0x900D_u32
  E_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES                                     =             0x900D_u32
  E_INT_SAMPLER_CUBE_MAP_ARRAY                                            =             0x900E_u32
  E_INT_SAMPLER_CUBE_MAP_ARRAY_ARB                                        =             0x900E_u32
  E_INT_SAMPLER_CUBE_MAP_ARRAY_EXT                                        =             0x900E_u32
  E_INT_SAMPLER_CUBE_MAP_ARRAY_OES                                        =             0x900E_u32
  E_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY                                   =             0x900F_u32
  E_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB                               =             0x900F_u32
  E_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT                               =             0x900F_u32
  E_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES                               =             0x900F_u32
  E_ALPHA_SNORM                                                           =             0x9010_u32
  E_LUMINANCE_SNORM                                                       =             0x9011_u32
  E_LUMINANCE_ALPHA_SNORM                                                 =             0x9012_u32
  E_INTENSITY_SNORM                                                       =             0x9013_u32
  E_ALPHA8_SNORM                                                          =             0x9014_u32
  E_LUMINANCE8_SNORM                                                      =             0x9015_u32
  E_LUMINANCE8_ALPHA8_SNORM                                               =             0x9016_u32
  E_INTENSITY8_SNORM                                                      =             0x9017_u32
  E_ALPHA16_SNORM                                                         =             0x9018_u32
  E_LUMINANCE16_SNORM                                                     =             0x9019_u32
  E_LUMINANCE16_ALPHA16_SNORM                                             =             0x901A_u32
  E_INTENSITY16_SNORM                                                     =             0x901B_u32
  E_FACTOR_MIN_AMD                                                        =             0x901C_u32
  E_FACTOR_MAX_AMD                                                        =             0x901D_u32
  E_DEPTH_CLAMP_NEAR_AMD                                                  =             0x901E_u32
  E_DEPTH_CLAMP_FAR_AMD                                                   =             0x901F_u32
  E_VIDEO_BUFFER_NV                                                       =             0x9020_u32
  E_VIDEO_BUFFER_BINDING_NV                                               =             0x9021_u32
  E_FIELD_UPPER_NV                                                        =             0x9022_u32
  E_FIELD_LOWER_NV                                                        =             0x9023_u32
  E_NUM_VIDEO_CAPTURE_STREAMS_NV                                          =             0x9024_u32
  E_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV                                   =             0x9025_u32
  E_VIDEO_CAPTURE_TO_422_SUPPORTED_NV                                     =             0x9026_u32
  E_LAST_VIDEO_CAPTURE_STATUS_NV                                          =             0x9027_u32
  E_VIDEO_BUFFER_PITCH_NV                                                 =             0x9028_u32
  E_VIDEO_COLOR_CONVERSION_MATRIX_NV                                      =             0x9029_u32
  E_VIDEO_COLOR_CONVERSION_MAX_NV                                         =             0x902A_u32
  E_VIDEO_COLOR_CONVERSION_MIN_NV                                         =             0x902B_u32
  E_VIDEO_COLOR_CONVERSION_OFFSET_NV                                      =             0x902C_u32
  E_VIDEO_BUFFER_INTERNAL_FORMAT_NV                                       =             0x902D_u32
  E_PARTIAL_SUCCESS_NV                                                    =             0x902E_u32
  E_SUCCESS_NV                                                            =             0x902F_u32
  E_FAILURE_NV                                                            =             0x9030_u32
  E_YCBYCR8_422_NV                                                        =             0x9031_u32
  E_YCBAYCR8A_4224_NV                                                     =             0x9032_u32
  E_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV                                         =             0x9033_u32
  E_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV                              =             0x9034_u32
  E_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV                                         =             0x9035_u32
  E_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV                              =             0x9036_u32
  E_Z4Y12Z4CB12Z4CR12_444_NV                                              =             0x9037_u32
  E_VIDEO_CAPTURE_FRAME_WIDTH_NV                                          =             0x9038_u32
  E_VIDEO_CAPTURE_FRAME_HEIGHT_NV                                         =             0x9039_u32
  E_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV                                   =             0x903A_u32
  E_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV                                   =             0x903B_u32
  E_VIDEO_CAPTURE_SURFACE_ORIGIN_NV                                       =             0x903C_u32
  E_TEXTURE_COVERAGE_SAMPLES_NV                                           =             0x9045_u32
  E_TEXTURE_COLOR_SAMPLES_NV                                              =             0x9046_u32
  E_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX                                  =             0x9047_u32
  E_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX                            =             0x9048_u32
  E_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX                          =             0x9049_u32
  E_GPU_MEMORY_INFO_EVICTION_COUNT_NVX                                    =             0x904A_u32
  E_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX                                    =             0x904B_u32
  E_IMAGE_1D                                                              =             0x904C_u32
  E_IMAGE_1D_EXT                                                          =             0x904C_u32
  E_IMAGE_2D                                                              =             0x904D_u32
  E_IMAGE_2D_EXT                                                          =             0x904D_u32
  E_IMAGE_3D                                                              =             0x904E_u32
  E_IMAGE_3D_EXT                                                          =             0x904E_u32
  E_IMAGE_2D_RECT                                                         =             0x904F_u32
  E_IMAGE_2D_RECT_EXT                                                     =             0x904F_u32
  E_IMAGE_CUBE                                                            =             0x9050_u32
  E_IMAGE_CUBE_EXT                                                        =             0x9050_u32
  E_IMAGE_BUFFER                                                          =             0x9051_u32
  E_IMAGE_BUFFER_EXT                                                      =             0x9051_u32
  E_IMAGE_BUFFER_OES                                                      =             0x9051_u32
  E_IMAGE_1D_ARRAY                                                        =             0x9052_u32
  E_IMAGE_1D_ARRAY_EXT                                                    =             0x9052_u32
  E_IMAGE_2D_ARRAY                                                        =             0x9053_u32
  E_IMAGE_2D_ARRAY_EXT                                                    =             0x9053_u32
  E_IMAGE_CUBE_MAP_ARRAY                                                  =             0x9054_u32
  E_IMAGE_CUBE_MAP_ARRAY_EXT                                              =             0x9054_u32
  E_IMAGE_CUBE_MAP_ARRAY_OES                                              =             0x9054_u32
  E_IMAGE_2D_MULTISAMPLE                                                  =             0x9055_u32
  E_IMAGE_2D_MULTISAMPLE_EXT                                              =             0x9055_u32
  E_IMAGE_2D_MULTISAMPLE_ARRAY                                            =             0x9056_u32
  E_IMAGE_2D_MULTISAMPLE_ARRAY_EXT                                        =             0x9056_u32
  E_INT_IMAGE_1D                                                          =             0x9057_u32
  E_INT_IMAGE_1D_EXT                                                      =             0x9057_u32
  E_INT_IMAGE_2D                                                          =             0x9058_u32
  E_INT_IMAGE_2D_EXT                                                      =             0x9058_u32
  E_INT_IMAGE_3D                                                          =             0x9059_u32
  E_INT_IMAGE_3D_EXT                                                      =             0x9059_u32
  E_INT_IMAGE_2D_RECT                                                     =             0x905A_u32
  E_INT_IMAGE_2D_RECT_EXT                                                 =             0x905A_u32
  E_INT_IMAGE_CUBE                                                        =             0x905B_u32
  E_INT_IMAGE_CUBE_EXT                                                    =             0x905B_u32
  E_INT_IMAGE_BUFFER                                                      =             0x905C_u32
  E_INT_IMAGE_BUFFER_EXT                                                  =             0x905C_u32
  E_INT_IMAGE_BUFFER_OES                                                  =             0x905C_u32
  E_INT_IMAGE_1D_ARRAY                                                    =             0x905D_u32
  E_INT_IMAGE_1D_ARRAY_EXT                                                =             0x905D_u32
  E_INT_IMAGE_2D_ARRAY                                                    =             0x905E_u32
  E_INT_IMAGE_2D_ARRAY_EXT                                                =             0x905E_u32
  E_INT_IMAGE_CUBE_MAP_ARRAY                                              =             0x905F_u32
  E_INT_IMAGE_CUBE_MAP_ARRAY_EXT                                          =             0x905F_u32
  E_INT_IMAGE_CUBE_MAP_ARRAY_OES                                          =             0x905F_u32
  E_INT_IMAGE_2D_MULTISAMPLE                                              =             0x9060_u32
  E_INT_IMAGE_2D_MULTISAMPLE_EXT                                          =             0x9060_u32
  E_INT_IMAGE_2D_MULTISAMPLE_ARRAY                                        =             0x9061_u32
  E_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT                                    =             0x9061_u32
  E_UNSIGNED_INT_IMAGE_1D                                                 =             0x9062_u32
  E_UNSIGNED_INT_IMAGE_1D_EXT                                             =             0x9062_u32
  E_UNSIGNED_INT_IMAGE_2D                                                 =             0x9063_u32
  E_UNSIGNED_INT_IMAGE_2D_EXT                                             =             0x9063_u32
  E_UNSIGNED_INT_IMAGE_3D                                                 =             0x9064_u32
  E_UNSIGNED_INT_IMAGE_3D_EXT                                             =             0x9064_u32
  E_UNSIGNED_INT_IMAGE_2D_RECT                                            =             0x9065_u32
  E_UNSIGNED_INT_IMAGE_2D_RECT_EXT                                        =             0x9065_u32
  E_UNSIGNED_INT_IMAGE_CUBE                                               =             0x9066_u32
  E_UNSIGNED_INT_IMAGE_CUBE_EXT                                           =             0x9066_u32
  E_UNSIGNED_INT_IMAGE_BUFFER                                             =             0x9067_u32
  E_UNSIGNED_INT_IMAGE_BUFFER_EXT                                         =             0x9067_u32
  E_UNSIGNED_INT_IMAGE_BUFFER_OES                                         =             0x9067_u32
  E_UNSIGNED_INT_IMAGE_1D_ARRAY                                           =             0x9068_u32
  E_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT                                       =             0x9068_u32
  E_UNSIGNED_INT_IMAGE_2D_ARRAY                                           =             0x9069_u32
  E_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT                                       =             0x9069_u32
  E_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY                                     =             0x906A_u32
  E_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT                                 =             0x906A_u32
  E_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES                                 =             0x906A_u32
  E_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE                                     =             0x906B_u32
  E_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT                                 =             0x906B_u32
  E_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY                               =             0x906C_u32
  E_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT                           =             0x906C_u32
  E_MAX_IMAGE_SAMPLES                                                     =             0x906D_u32
  E_MAX_IMAGE_SAMPLES_EXT                                                 =             0x906D_u32
  E_IMAGE_BINDING_FORMAT                                                  =             0x906E_u32
  E_IMAGE_BINDING_FORMAT_EXT                                              =             0x906E_u32
  E_RGB10_A2UI                                                            =             0x906F_u32
  E_PATH_FORMAT_SVG_NV                                                    =             0x9070_u32
  E_PATH_FORMAT_PS_NV                                                     =             0x9071_u32
  E_STANDARD_FONT_NAME_NV                                                 =             0x9072_u32
  E_SYSTEM_FONT_NAME_NV                                                   =             0x9073_u32
  E_FILE_NAME_NV                                                          =             0x9074_u32
  E_PATH_STROKE_WIDTH_NV                                                  =             0x9075_u32
  E_PATH_END_CAPS_NV                                                      =             0x9076_u32
  E_PATH_INITIAL_END_CAP_NV                                               =             0x9077_u32
  E_PATH_TERMINAL_END_CAP_NV                                              =             0x9078_u32
  E_PATH_JOIN_STYLE_NV                                                    =             0x9079_u32
  E_PATH_MITER_LIMIT_NV                                                   =             0x907A_u32
  E_PATH_DASH_CAPS_NV                                                     =             0x907B_u32
  E_PATH_INITIAL_DASH_CAP_NV                                              =             0x907C_u32
  E_PATH_TERMINAL_DASH_CAP_NV                                             =             0x907D_u32
  E_PATH_DASH_OFFSET_NV                                                   =             0x907E_u32
  E_PATH_CLIENT_LENGTH_NV                                                 =             0x907F_u32
  E_PATH_FILL_MODE_NV                                                     =             0x9080_u32
  E_PATH_FILL_MASK_NV                                                     =             0x9081_u32
  E_PATH_FILL_COVER_MODE_NV                                               =             0x9082_u32
  E_PATH_STROKE_COVER_MODE_NV                                             =             0x9083_u32
  E_PATH_STROKE_MASK_NV                                                   =             0x9084_u32
  E_COUNT_UP_NV                                                           =             0x9088_u32
  E_COUNT_DOWN_NV                                                         =             0x9089_u32
  E_PATH_OBJECT_BOUNDING_BOX_NV                                           =             0x908A_u32
  E_CONVEX_HULL_NV                                                        =             0x908B_u32
  E_BOUNDING_BOX_NV                                                       =             0x908D_u32
  E_TRANSLATE_X_NV                                                        =             0x908E_u32
  E_TRANSLATE_Y_NV                                                        =             0x908F_u32
  E_TRANSLATE_2D_NV                                                       =             0x9090_u32
  E_TRANSLATE_3D_NV                                                       =             0x9091_u32
  E_AFFINE_2D_NV                                                          =             0x9092_u32
  E_AFFINE_3D_NV                                                          =             0x9094_u32
  E_TRANSPOSE_AFFINE_2D_NV                                                =             0x9096_u32
  E_TRANSPOSE_AFFINE_3D_NV                                                =             0x9098_u32
  E_UTF8_NV                                                               =             0x909A_u32
  E_UTF16_NV                                                              =             0x909B_u32
  E_BOUNDING_BOX_OF_BOUNDING_BOXES_NV                                     =             0x909C_u32
  E_PATH_COMMAND_COUNT_NV                                                 =             0x909D_u32
  E_PATH_COORD_COUNT_NV                                                   =             0x909E_u32
  E_PATH_DASH_ARRAY_COUNT_NV                                              =             0x909F_u32
  E_PATH_COMPUTED_LENGTH_NV                                               =             0x90A0_u32
  E_PATH_FILL_BOUNDING_BOX_NV                                             =             0x90A1_u32
  E_PATH_STROKE_BOUNDING_BOX_NV                                           =             0x90A2_u32
  E_SQUARE_NV                                                             =             0x90A3_u32
  E_ROUND_NV                                                              =             0x90A4_u32
  E_TRIANGULAR_NV                                                         =             0x90A5_u32
  E_BEVEL_NV                                                              =             0x90A6_u32
  E_MITER_REVERT_NV                                                       =             0x90A7_u32
  E_MITER_TRUNCATE_NV                                                     =             0x90A8_u32
  E_SKIP_MISSING_GLYPH_NV                                                 =             0x90A9_u32
  E_USE_MISSING_GLYPH_NV                                                  =             0x90AA_u32
  E_PATH_ERROR_POSITION_NV                                                =             0x90AB_u32
  E_PATH_FOG_GEN_MODE_NV                                                  =             0x90AC_u32
  E_ACCUM_ADJACENT_PAIRS_NV                                               =             0x90AD_u32
  E_ADJACENT_PAIRS_NV                                                     =             0x90AE_u32
  E_FIRST_TO_REST_NV                                                      =             0x90AF_u32
  E_PATH_GEN_MODE_NV                                                      =             0x90B0_u32
  E_PATH_GEN_COEFF_NV                                                     =             0x90B1_u32
  E_PATH_GEN_COLOR_FORMAT_NV                                              =             0x90B2_u32
  E_PATH_GEN_COMPONENTS_NV                                                =             0x90B3_u32
  E_PATH_DASH_OFFSET_RESET_NV                                             =             0x90B4_u32
  E_MOVE_TO_RESETS_NV                                                     =             0x90B5_u32
  E_MOVE_TO_CONTINUES_NV                                                  =             0x90B6_u32
  E_PATH_STENCIL_FUNC_NV                                                  =             0x90B7_u32
  E_PATH_STENCIL_REF_NV                                                   =             0x90B8_u32
  E_PATH_STENCIL_VALUE_MASK_NV                                            =             0x90B9_u32
  E_SCALED_RESOLVE_FASTEST_EXT                                            =             0x90BA_u32
  E_SCALED_RESOLVE_NICEST_EXT                                             =             0x90BB_u32
  E_MIN_MAP_BUFFER_ALIGNMENT                                              =             0x90BC_u32
  E_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV                                   =             0x90BD_u32
  E_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV                                    =             0x90BE_u32
  E_PATH_COVER_DEPTH_FUNC_NV                                              =             0x90BF_u32
  E_IMAGE_FORMAT_COMPATIBILITY_TYPE                                       =             0x90C7_u32
  E_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE                                    =             0x90C8_u32
  E_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS                                   =             0x90C9_u32
  E_MAX_VERTEX_IMAGE_UNIFORMS                                             =             0x90CA_u32
  E_MAX_TESS_CONTROL_IMAGE_UNIFORMS                                       =             0x90CB_u32
  E_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT                                   =             0x90CB_u32
  E_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES                                   =             0x90CB_u32
  E_MAX_TESS_EVALUATION_IMAGE_UNIFORMS                                    =             0x90CC_u32
  E_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT                                =             0x90CC_u32
  E_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES                                =             0x90CC_u32
  E_MAX_GEOMETRY_IMAGE_UNIFORMS                                           =             0x90CD_u32
  E_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT                                       =             0x90CD_u32
  E_MAX_GEOMETRY_IMAGE_UNIFORMS_OES                                       =             0x90CD_u32
  E_MAX_FRAGMENT_IMAGE_UNIFORMS                                           =             0x90CE_u32
  E_MAX_COMBINED_IMAGE_UNIFORMS                                           =             0x90CF_u32
  E_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV                                   =             0x90D0_u32
  E_MAX_DEEP_3D_TEXTURE_DEPTH_NV                                          =             0x90D1_u32
  E_SHADER_STORAGE_BUFFER                                                 =             0x90D2_u32
  E_SHADER_STORAGE_BUFFER_BINDING                                         =             0x90D3_u32
  E_SHADER_STORAGE_BUFFER_START                                           =             0x90D4_u32
  E_SHADER_STORAGE_BUFFER_SIZE                                            =             0x90D5_u32
  E_MAX_VERTEX_SHADER_STORAGE_BLOCKS                                      =             0x90D6_u32
  E_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS                                    =             0x90D7_u32
  E_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT                                =             0x90D7_u32
  E_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES                                =             0x90D7_u32
  E_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS                                =             0x90D8_u32
  E_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT                            =             0x90D8_u32
  E_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES                            =             0x90D8_u32
  E_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS                             =             0x90D9_u32
  E_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT                         =             0x90D9_u32
  E_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES                         =             0x90D9_u32
  E_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS                                    =             0x90DA_u32
  E_MAX_COMPUTE_SHADER_STORAGE_BLOCKS                                     =             0x90DB_u32
  E_MAX_COMBINED_SHADER_STORAGE_BLOCKS                                    =             0x90DC_u32
  E_MAX_SHADER_STORAGE_BUFFER_BINDINGS                                    =             0x90DD_u32
  E_MAX_SHADER_STORAGE_BLOCK_SIZE                                         =             0x90DE_u32
  E_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT                                =             0x90DF_u32
  E_SYNC_X11_FENCE_EXT                                                    =             0x90E1_u32
  E_DEPTH_STENCIL_TEXTURE_MODE                                            =             0x90EA_u32
  E_MAX_COMPUTE_WORK_GROUP_INVOCATIONS                                    =             0x90EB_u32
  E_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB                               =             0x90EB_u32
  E_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER                            =             0x90EC_u32
  E_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER                    =             0x90ED_u32
  E_DISPATCH_INDIRECT_BUFFER                                              =             0x90EE_u32
  E_DISPATCH_INDIRECT_BUFFER_BINDING                                      =             0x90EF_u32
  E_COLOR_ATTACHMENT_EXT                                                  =             0x90F0_u32
  E_MULTIVIEW_EXT                                                         =             0x90F1_u32
  E_MAX_MULTIVIEW_BUFFERS_EXT                                             =             0x90F2_u32
  E_CONTEXT_ROBUST_ACCESS                                                 =             0x90F3_u32
  E_CONTEXT_ROBUST_ACCESS_EXT                                             =             0x90F3_u32
  E_CONTEXT_ROBUST_ACCESS_KHR                                             =             0x90F3_u32
  E_COMPUTE_PROGRAM_NV                                                    =             0x90FB_u32
  E_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV                                   =             0x90FC_u32
  E_TEXTURE_2D_MULTISAMPLE                                                =             0x9100_u32
  E_PROXY_TEXTURE_2D_MULTISAMPLE                                          =             0x9101_u32
  E_TEXTURE_2D_MULTISAMPLE_ARRAY                                          =             0x9102_u32
  E_TEXTURE_2D_MULTISAMPLE_ARRAY_OES                                      =             0x9102_u32
  E_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY                                    =             0x9103_u32
  E_TEXTURE_BINDING_2D_MULTISAMPLE                                        =             0x9104_u32
  E_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY                                  =             0x9105_u32
  E_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES                              =             0x9105_u32
  E_TEXTURE_SAMPLES                                                       =             0x9106_u32
  E_TEXTURE_FIXED_SAMPLE_LOCATIONS                                        =             0x9107_u32
  E_SAMPLER_2D_MULTISAMPLE                                                =             0x9108_u32
  E_INT_SAMPLER_2D_MULTISAMPLE                                            =             0x9109_u32
  E_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE                                   =             0x910A_u32
  E_SAMPLER_2D_MULTISAMPLE_ARRAY                                          =             0x910B_u32
  E_SAMPLER_2D_MULTISAMPLE_ARRAY_OES                                      =             0x910B_u32
  E_INT_SAMPLER_2D_MULTISAMPLE_ARRAY                                      =             0x910C_u32
  E_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES                                  =             0x910C_u32
  E_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY                             =             0x910D_u32
  E_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES                         =             0x910D_u32
  E_MAX_COLOR_TEXTURE_SAMPLES                                             =             0x910E_u32
  E_MAX_DEPTH_TEXTURE_SAMPLES                                             =             0x910F_u32
  E_MAX_INTEGER_SAMPLES                                                   =             0x9110_u32
  E_MAX_SERVER_WAIT_TIMEOUT                                               =             0x9111_u32
  E_MAX_SERVER_WAIT_TIMEOUT_APPLE                                         =             0x9111_u32
  E_OBJECT_TYPE                                                           =             0x9112_u32
  E_OBJECT_TYPE_APPLE                                                     =             0x9112_u32
  E_SYNC_CONDITION                                                        =             0x9113_u32
  E_SYNC_CONDITION_APPLE                                                  =             0x9113_u32
  E_SYNC_STATUS                                                           =             0x9114_u32
  E_SYNC_STATUS_APPLE                                                     =             0x9114_u32
  E_SYNC_FLAGS                                                            =             0x9115_u32
  E_SYNC_FLAGS_APPLE                                                      =             0x9115_u32
  E_SYNC_FENCE                                                            =             0x9116_u32
  E_SYNC_FENCE_APPLE                                                      =             0x9116_u32
  E_SYNC_GPU_COMMANDS_COMPLETE                                            =             0x9117_u32
  E_SYNC_GPU_COMMANDS_COMPLETE_APPLE                                      =             0x9117_u32
  E_UNSIGNALED                                                            =             0x9118_u32
  E_UNSIGNALED_APPLE                                                      =             0x9118_u32
  E_SIGNALED                                                              =             0x9119_u32
  E_SIGNALED_APPLE                                                        =             0x9119_u32
  E_ALREADY_SIGNALED                                                      =             0x911A_u32
  E_ALREADY_SIGNALED_APPLE                                                =             0x911A_u32
  E_TIMEOUT_EXPIRED                                                       =             0x911B_u32
  E_TIMEOUT_EXPIRED_APPLE                                                 =             0x911B_u32
  E_CONDITION_SATISFIED                                                   =             0x911C_u32
  E_CONDITION_SATISFIED_APPLE                                             =             0x911C_u32
  E_WAIT_FAILED                                                           =             0x911D_u32
  E_WAIT_FAILED_APPLE                                                     =             0x911D_u32
  E_BUFFER_ACCESS_FLAGS                                                   =             0x911F_u32
  E_BUFFER_MAP_LENGTH                                                     =             0x9120_u32
  E_BUFFER_MAP_OFFSET                                                     =             0x9121_u32
  E_MAX_VERTEX_OUTPUT_COMPONENTS                                          =             0x9122_u32
  E_MAX_GEOMETRY_INPUT_COMPONENTS                                         =             0x9123_u32
  E_MAX_GEOMETRY_INPUT_COMPONENTS_EXT                                     =             0x9123_u32
  E_MAX_GEOMETRY_INPUT_COMPONENTS_OES                                     =             0x9123_u32
  E_MAX_GEOMETRY_OUTPUT_COMPONENTS                                        =             0x9124_u32
  E_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT                                    =             0x9124_u32
  E_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES                                    =             0x9124_u32
  E_MAX_FRAGMENT_INPUT_COMPONENTS                                         =             0x9125_u32
  E_CONTEXT_PROFILE_MASK                                                  =             0x9126_u32
  E_UNPACK_COMPRESSED_BLOCK_WIDTH                                         =             0x9127_u32
  E_UNPACK_COMPRESSED_BLOCK_HEIGHT                                        =             0x9128_u32
  E_UNPACK_COMPRESSED_BLOCK_DEPTH                                         =             0x9129_u32
  E_UNPACK_COMPRESSED_BLOCK_SIZE                                          =             0x912A_u32
  E_PACK_COMPRESSED_BLOCK_WIDTH                                           =             0x912B_u32
  E_PACK_COMPRESSED_BLOCK_HEIGHT                                          =             0x912C_u32
  E_PACK_COMPRESSED_BLOCK_DEPTH                                           =             0x912D_u32
  E_PACK_COMPRESSED_BLOCK_SIZE                                            =             0x912E_u32
  E_TEXTURE_IMMUTABLE_FORMAT                                              =             0x912F_u32
  E_TEXTURE_IMMUTABLE_FORMAT_EXT                                          =             0x912F_u32
  E_SGX_PROGRAM_BINARY_IMG                                                =             0x9130_u32
  E_RENDERBUFFER_SAMPLES_IMG                                              =             0x9133_u32
  E_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG                                =             0x9134_u32
  E_MAX_SAMPLES_IMG                                                       =             0x9135_u32
  E_TEXTURE_SAMPLES_IMG                                                   =             0x9136_u32
  E_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG                                      =             0x9137_u32
  E_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG                                      =             0x9138_u32
  E_CUBIC_IMG                                                             =             0x9139_u32
  E_CUBIC_MIPMAP_NEAREST_IMG                                              =             0x913A_u32
  E_CUBIC_MIPMAP_LINEAR_IMG                                               =             0x913B_u32
  E_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG                 =             0x913C_u32
  E_NUM_DOWNSAMPLE_SCALES_IMG                                             =             0x913D_u32
  E_DOWNSAMPLE_SCALES_IMG                                                 =             0x913E_u32
  E_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG                              =             0x913F_u32
  E_MAX_DEBUG_MESSAGE_LENGTH                                              =             0x9143_u32
  E_MAX_DEBUG_MESSAGE_LENGTH_AMD                                          =             0x9143_u32
  E_MAX_DEBUG_MESSAGE_LENGTH_ARB                                          =             0x9143_u32
  E_MAX_DEBUG_MESSAGE_LENGTH_KHR                                          =             0x9143_u32
  E_MAX_DEBUG_LOGGED_MESSAGES                                             =             0x9144_u32
  E_MAX_DEBUG_LOGGED_MESSAGES_AMD                                         =             0x9144_u32
  E_MAX_DEBUG_LOGGED_MESSAGES_ARB                                         =             0x9144_u32
  E_MAX_DEBUG_LOGGED_MESSAGES_KHR                                         =             0x9144_u32
  E_DEBUG_LOGGED_MESSAGES                                                 =             0x9145_u32
  E_DEBUG_LOGGED_MESSAGES_AMD                                             =             0x9145_u32
  E_DEBUG_LOGGED_MESSAGES_ARB                                             =             0x9145_u32
  E_DEBUG_LOGGED_MESSAGES_KHR                                             =             0x9145_u32
  E_DEBUG_SEVERITY_HIGH                                                   =             0x9146_u32
  E_DEBUG_SEVERITY_HIGH_AMD                                               =             0x9146_u32
  E_DEBUG_SEVERITY_HIGH_ARB                                               =             0x9146_u32
  E_DEBUG_SEVERITY_HIGH_KHR                                               =             0x9146_u32
  E_DEBUG_SEVERITY_MEDIUM                                                 =             0x9147_u32
  E_DEBUG_SEVERITY_MEDIUM_AMD                                             =             0x9147_u32
  E_DEBUG_SEVERITY_MEDIUM_ARB                                             =             0x9147_u32
  E_DEBUG_SEVERITY_MEDIUM_KHR                                             =             0x9147_u32
  E_DEBUG_SEVERITY_LOW                                                    =             0x9148_u32
  E_DEBUG_SEVERITY_LOW_AMD                                                =             0x9148_u32
  E_DEBUG_SEVERITY_LOW_ARB                                                =             0x9148_u32
  E_DEBUG_SEVERITY_LOW_KHR                                                =             0x9148_u32
  E_DEBUG_CATEGORY_API_ERROR_AMD                                          =             0x9149_u32
  E_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD                                      =             0x914A_u32
  E_DEBUG_CATEGORY_DEPRECATION_AMD                                        =             0x914B_u32
  E_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD                                 =             0x914C_u32
  E_DEBUG_CATEGORY_PERFORMANCE_AMD                                        =             0x914D_u32
  E_DEBUG_CATEGORY_SHADER_COMPILER_AMD                                    =             0x914E_u32
  E_DEBUG_CATEGORY_APPLICATION_AMD                                        =             0x914F_u32
  E_DEBUG_CATEGORY_OTHER_AMD                                              =             0x9150_u32
  E_BUFFER_OBJECT_EXT                                                     =             0x9151_u32
  E_DATA_BUFFER_AMD                                                       =             0x9151_u32
  E_PERFORMANCE_MONITOR_AMD                                               =             0x9152_u32
  E_QUERY_OBJECT_AMD                                                      =             0x9153_u32
  E_QUERY_OBJECT_EXT                                                      =             0x9153_u32
  E_VERTEX_ARRAY_OBJECT_AMD                                               =             0x9154_u32
  E_VERTEX_ARRAY_OBJECT_EXT                                               =             0x9154_u32
  E_SAMPLER_OBJECT_AMD                                                    =             0x9155_u32
  E_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD                                    =             0x9160_u32
  E_QUERY_BUFFER                                                          =             0x9192_u32
  E_QUERY_BUFFER_AMD                                                      =             0x9192_u32
  E_QUERY_BUFFER_BINDING                                                  =             0x9193_u32
  E_QUERY_BUFFER_BINDING_AMD                                              =             0x9193_u32
  E_QUERY_RESULT_NO_WAIT                                                  =             0x9194_u32
  E_QUERY_RESULT_NO_WAIT_AMD                                              =             0x9194_u32
  E_VIRTUAL_PAGE_SIZE_X_ARB                                               =             0x9195_u32
  E_VIRTUAL_PAGE_SIZE_X_EXT                                               =             0x9195_u32
  E_VIRTUAL_PAGE_SIZE_X_AMD                                               =             0x9195_u32
  E_VIRTUAL_PAGE_SIZE_Y_ARB                                               =             0x9196_u32
  E_VIRTUAL_PAGE_SIZE_Y_EXT                                               =             0x9196_u32
  E_VIRTUAL_PAGE_SIZE_Y_AMD                                               =             0x9196_u32
  E_VIRTUAL_PAGE_SIZE_Z_ARB                                               =             0x9197_u32
  E_VIRTUAL_PAGE_SIZE_Z_EXT                                               =             0x9197_u32
  E_VIRTUAL_PAGE_SIZE_Z_AMD                                               =             0x9197_u32
  E_MAX_SPARSE_TEXTURE_SIZE_ARB                                           =             0x9198_u32
  E_MAX_SPARSE_TEXTURE_SIZE_EXT                                           =             0x9198_u32
  E_MAX_SPARSE_TEXTURE_SIZE_AMD                                           =             0x9198_u32
  E_MAX_SPARSE_3D_TEXTURE_SIZE_ARB                                        =             0x9199_u32
  E_MAX_SPARSE_3D_TEXTURE_SIZE_EXT                                        =             0x9199_u32
  E_MAX_SPARSE_3D_TEXTURE_SIZE_AMD                                        =             0x9199_u32
  E_MAX_SPARSE_ARRAY_TEXTURE_LAYERS                                       =             0x919A_u32
  E_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB                                   =             0x919A_u32
  E_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT                                   =             0x919A_u32
  E_MIN_SPARSE_LEVEL_AMD                                                  =             0x919B_u32
  E_MIN_LOD_WARNING_AMD                                                   =             0x919C_u32
  E_TEXTURE_BUFFER_OFFSET                                                 =             0x919D_u32
  E_TEXTURE_BUFFER_OFFSET_EXT                                             =             0x919D_u32
  E_TEXTURE_BUFFER_OFFSET_OES                                             =             0x919D_u32
  E_TEXTURE_BUFFER_SIZE                                                   =             0x919E_u32
  E_TEXTURE_BUFFER_SIZE_EXT                                               =             0x919E_u32
  E_TEXTURE_BUFFER_SIZE_OES                                               =             0x919E_u32
  E_TEXTURE_BUFFER_OFFSET_ALIGNMENT                                       =             0x919F_u32
  E_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT                                   =             0x919F_u32
  E_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES                                   =             0x919F_u32
  E_STREAM_RASTERIZATION_AMD                                              =             0x91A0_u32
  E_VERTEX_ELEMENT_SWIZZLE_AMD                                            =             0x91A4_u32
  E_VERTEX_ID_SWIZZLE_AMD                                                 =             0x91A5_u32
  E_TEXTURE_SPARSE_ARB                                                    =             0x91A6_u32
  E_TEXTURE_SPARSE_EXT                                                    =             0x91A6_u32
  E_VIRTUAL_PAGE_SIZE_INDEX_ARB                                           =             0x91A7_u32
  E_VIRTUAL_PAGE_SIZE_INDEX_EXT                                           =             0x91A7_u32
  E_NUM_VIRTUAL_PAGE_SIZES_ARB                                            =             0x91A8_u32
  E_NUM_VIRTUAL_PAGE_SIZES_EXT                                            =             0x91A8_u32
  E_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB                            =             0x91A9_u32
  E_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT                            =             0x91A9_u32
  E_NUM_SPARSE_LEVELS_ARB                                                 =             0x91AA_u32
  E_NUM_SPARSE_LEVELS_EXT                                                 =             0x91AA_u32
  E_MAX_SHADER_COMPILER_THREADS_ARB                                       =             0x91B0_u32
  E_COMPLETION_STATUS_ARB                                                 =             0x91B1_u32
  E_COMPUTE_SHADER                                                        =             0x91B9_u32
  E_MAX_COMPUTE_UNIFORM_BLOCKS                                            =             0x91BB_u32
  E_MAX_COMPUTE_TEXTURE_IMAGE_UNITS                                       =             0x91BC_u32
  E_MAX_COMPUTE_IMAGE_UNIFORMS                                            =             0x91BD_u32
  E_MAX_COMPUTE_WORK_GROUP_COUNT                                          =             0x91BE_u32
  E_MAX_COMPUTE_WORK_GROUP_SIZE                                           =             0x91BF_u32
  E_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB                                      =             0x91BF_u32
  E_FLOAT16_MAT2_AMD                                                      =             0x91C5_u32
  E_FLOAT16_MAT3_AMD                                                      =             0x91C6_u32
  E_FLOAT16_MAT4_AMD                                                      =             0x91C7_u32
  E_FLOAT16_MAT2x3_AMD                                                    =             0x91C8_u32
  E_FLOAT16_MAT2x4_AMD                                                    =             0x91C9_u32
  E_FLOAT16_MAT3x2_AMD                                                    =             0x91CA_u32
  E_FLOAT16_MAT3x4_AMD                                                    =             0x91CB_u32
  E_FLOAT16_MAT4x2_AMD                                                    =             0x91CC_u32
  E_FLOAT16_MAT4x3_AMD                                                    =             0x91CD_u32
  E_UNPACK_FLIP_Y_WEBGL                                                   =             0x9240_u32
  E_UNPACK_PREMULTIPLY_ALPHA_WEBGL                                        =             0x9241_u32
  E_CONTEXT_LOST_WEBGL                                                    =             0x9242_u32
  E_UNPACK_COLORSPACE_CONVERSION_WEBGL                                    =             0x9243_u32
  E_BROWSER_DEFAULT_WEBGL                                                 =             0x9244_u32
  E_SHADER_BINARY_DMP                                                     =             0x9250_u32
  E_SMAPHS30_PROGRAM_BINARY_DMP                                           =             0x9251_u32
  E_SMAPHS_PROGRAM_BINARY_DMP                                             =             0x9252_u32
  E_DMP_PROGRAM_BINARY_DMP                                                =             0x9253_u32
  E_GCCSO_SHADER_BINARY_FJ                                                =             0x9260_u32
  E_COMPRESSED_R11_EAC                                                    =             0x9270_u32
  E_COMPRESSED_R11_EAC_OES                                                =             0x9270_u32
  E_COMPRESSED_SIGNED_R11_EAC                                             =             0x9271_u32
  E_COMPRESSED_SIGNED_R11_EAC_OES                                         =             0x9271_u32
  E_COMPRESSED_RG11_EAC                                                   =             0x9272_u32
  E_COMPRESSED_RG11_EAC_OES                                               =             0x9272_u32
  E_COMPRESSED_SIGNED_RG11_EAC                                            =             0x9273_u32
  E_COMPRESSED_SIGNED_RG11_EAC_OES                                        =             0x9273_u32
  E_COMPRESSED_RGB8_ETC2                                                  =             0x9274_u32
  E_COMPRESSED_RGB8_ETC2_OES                                              =             0x9274_u32
  E_COMPRESSED_SRGB8_ETC2                                                 =             0x9275_u32
  E_COMPRESSED_SRGB8_ETC2_OES                                             =             0x9275_u32
  E_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2                              =             0x9276_u32
  E_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES                          =             0x9276_u32
  E_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2                             =             0x9277_u32
  E_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES                         =             0x9277_u32
  E_COMPRESSED_RGBA8_ETC2_EAC                                             =             0x9278_u32
  E_COMPRESSED_RGBA8_ETC2_EAC_OES                                         =             0x9278_u32
  E_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC                                      =             0x9279_u32
  E_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_OES                                  =             0x9279_u32
  E_BLEND_PREMULTIPLIED_SRC_NV                                            =             0x9280_u32
  E_BLEND_OVERLAP_NV                                                      =             0x9281_u32
  E_UNCORRELATED_NV                                                       =             0x9282_u32
  E_DISJOINT_NV                                                           =             0x9283_u32
  E_CONJOINT_NV                                                           =             0x9284_u32
  E_BLEND_ADVANCED_COHERENT_KHR                                           =             0x9285_u32
  E_BLEND_ADVANCED_COHERENT_NV                                            =             0x9285_u32
  E_SRC_NV                                                                =             0x9286_u32
  E_DST_NV                                                                =             0x9287_u32
  E_SRC_OVER_NV                                                           =             0x9288_u32
  E_DST_OVER_NV                                                           =             0x9289_u32
  E_SRC_IN_NV                                                             =             0x928A_u32
  E_DST_IN_NV                                                             =             0x928B_u32
  E_SRC_OUT_NV                                                            =             0x928C_u32
  E_DST_OUT_NV                                                            =             0x928D_u32
  E_SRC_ATOP_NV                                                           =             0x928E_u32
  E_DST_ATOP_NV                                                           =             0x928F_u32
  E_PLUS_NV                                                               =             0x9291_u32
  E_PLUS_DARKER_NV                                                        =             0x9292_u32
  E_MULTIPLY                                                              =             0x9294_u32
  E_MULTIPLY_KHR                                                          =             0x9294_u32
  E_MULTIPLY_NV                                                           =             0x9294_u32
  E_SCREEN                                                                =             0x9295_u32
  E_SCREEN_KHR                                                            =             0x9295_u32
  E_SCREEN_NV                                                             =             0x9295_u32
  E_OVERLAY                                                               =             0x9296_u32
  E_OVERLAY_KHR                                                           =             0x9296_u32
  E_OVERLAY_NV                                                            =             0x9296_u32
  E_DARKEN                                                                =             0x9297_u32
  E_DARKEN_KHR                                                            =             0x9297_u32
  E_DARKEN_NV                                                             =             0x9297_u32
  E_LIGHTEN                                                               =             0x9298_u32
  E_LIGHTEN_KHR                                                           =             0x9298_u32
  E_LIGHTEN_NV                                                            =             0x9298_u32
  E_COLORDODGE                                                            =             0x9299_u32
  E_COLORDODGE_KHR                                                        =             0x9299_u32
  E_COLORDODGE_NV                                                         =             0x9299_u32
  E_COLORBURN                                                             =             0x929A_u32
  E_COLORBURN_KHR                                                         =             0x929A_u32
  E_COLORBURN_NV                                                          =             0x929A_u32
  E_HARDLIGHT                                                             =             0x929B_u32
  E_HARDLIGHT_KHR                                                         =             0x929B_u32
  E_HARDLIGHT_NV                                                          =             0x929B_u32
  E_SOFTLIGHT                                                             =             0x929C_u32
  E_SOFTLIGHT_KHR                                                         =             0x929C_u32
  E_SOFTLIGHT_NV                                                          =             0x929C_u32
  E_DIFFERENCE                                                            =             0x929E_u32
  E_DIFFERENCE_KHR                                                        =             0x929E_u32
  E_DIFFERENCE_NV                                                         =             0x929E_u32
  E_MINUS_NV                                                              =             0x929F_u32
  E_EXCLUSION                                                             =             0x92A0_u32
  E_EXCLUSION_KHR                                                         =             0x92A0_u32
  E_EXCLUSION_NV                                                          =             0x92A0_u32
  E_CONTRAST_NV                                                           =             0x92A1_u32
  E_INVERT_RGB_NV                                                         =             0x92A3_u32
  E_LINEARDODGE_NV                                                        =             0x92A4_u32
  E_LINEARBURN_NV                                                         =             0x92A5_u32
  E_VIVIDLIGHT_NV                                                         =             0x92A6_u32
  E_LINEARLIGHT_NV                                                        =             0x92A7_u32
  E_PINLIGHT_NV                                                           =             0x92A8_u32
  E_HARDMIX_NV                                                            =             0x92A9_u32
  E_HSL_HUE                                                               =             0x92AD_u32
  E_HSL_HUE_KHR                                                           =             0x92AD_u32
  E_HSL_HUE_NV                                                            =             0x92AD_u32
  E_HSL_SATURATION                                                        =             0x92AE_u32
  E_HSL_SATURATION_KHR                                                    =             0x92AE_u32
  E_HSL_SATURATION_NV                                                     =             0x92AE_u32
  E_HSL_COLOR                                                             =             0x92AF_u32
  E_HSL_COLOR_KHR                                                         =             0x92AF_u32
  E_HSL_COLOR_NV                                                          =             0x92AF_u32
  E_HSL_LUMINOSITY                                                        =             0x92B0_u32
  E_HSL_LUMINOSITY_KHR                                                    =             0x92B0_u32
  E_HSL_LUMINOSITY_NV                                                     =             0x92B0_u32
  E_PLUS_CLAMPED_NV                                                       =             0x92B1_u32
  E_PLUS_CLAMPED_ALPHA_NV                                                 =             0x92B2_u32
  E_MINUS_CLAMPED_NV                                                      =             0x92B3_u32
  E_INVERT_OVG_NV                                                         =             0x92B4_u32
  E_PURGED_CONTEXT_RESET_NV                                               =             0x92BB_u32
  E_PRIMITIVE_BOUNDING_BOX_ARB                                            =             0x92BE_u32
  E_PRIMITIVE_BOUNDING_BOX                                                =             0x92BE_u32
  E_PRIMITIVE_BOUNDING_BOX_EXT                                            =             0x92BE_u32
  E_PRIMITIVE_BOUNDING_BOX_OES                                            =             0x92BE_u32
  E_ATOMIC_COUNTER_BUFFER                                                 =             0x92C0_u32
  E_ATOMIC_COUNTER_BUFFER_BINDING                                         =             0x92C1_u32
  E_ATOMIC_COUNTER_BUFFER_START                                           =             0x92C2_u32
  E_ATOMIC_COUNTER_BUFFER_SIZE                                            =             0x92C3_u32
  E_ATOMIC_COUNTER_BUFFER_DATA_SIZE                                       =             0x92C4_u32
  E_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS                          =             0x92C5_u32
  E_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES                   =             0x92C6_u32
  E_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER                     =             0x92C7_u32
  E_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER               =             0x92C8_u32
  E_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER            =             0x92C9_u32
  E_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER                   =             0x92CA_u32
  E_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER                   =             0x92CB_u32
  E_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS                                     =             0x92CC_u32
  E_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS                               =             0x92CD_u32
  E_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT                           =             0x92CD_u32
  E_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES                           =             0x92CD_u32
  E_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS                            =             0x92CE_u32
  E_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT                        =             0x92CE_u32
  E_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES                        =             0x92CE_u32
  E_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS                                   =             0x92CF_u32
  E_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT                               =             0x92CF_u32
  E_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES                               =             0x92CF_u32
  E_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS                                   =             0x92D0_u32
  E_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS                                   =             0x92D1_u32
  E_MAX_VERTEX_ATOMIC_COUNTERS                                            =             0x92D2_u32
  E_MAX_TESS_CONTROL_ATOMIC_COUNTERS                                      =             0x92D3_u32
  E_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT                                  =             0x92D3_u32
  E_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES                                  =             0x92D3_u32
  E_MAX_TESS_EVALUATION_ATOMIC_COUNTERS                                   =             0x92D4_u32
  E_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT                               =             0x92D4_u32
  E_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES                               =             0x92D4_u32
  E_MAX_GEOMETRY_ATOMIC_COUNTERS                                          =             0x92D5_u32
  E_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT                                      =             0x92D5_u32
  E_MAX_GEOMETRY_ATOMIC_COUNTERS_OES                                      =             0x92D5_u32
  E_MAX_FRAGMENT_ATOMIC_COUNTERS                                          =             0x92D6_u32
  E_MAX_COMBINED_ATOMIC_COUNTERS                                          =             0x92D7_u32
  E_MAX_ATOMIC_COUNTER_BUFFER_SIZE                                        =             0x92D8_u32
  E_ACTIVE_ATOMIC_COUNTER_BUFFERS                                         =             0x92D9_u32
  E_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX                                   =             0x92DA_u32
  E_UNSIGNED_INT_ATOMIC_COUNTER                                           =             0x92DB_u32
  E_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS                                    =             0x92DC_u32
  E_FRAGMENT_COVERAGE_TO_COLOR_NV                                         =             0x92DD_u32
  E_FRAGMENT_COVERAGE_COLOR_NV                                            =             0x92DE_u32
  E_DEBUG_OUTPUT                                                          =             0x92E0_u32
  E_DEBUG_OUTPUT_KHR                                                      =             0x92E0_u32
  E_UNIFORM                                                               =             0x92E1_u32
  E_UNIFORM_BLOCK                                                         =             0x92E2_u32
  E_PROGRAM_INPUT                                                         =             0x92E3_u32
  E_PROGRAM_OUTPUT                                                        =             0x92E4_u32
  E_BUFFER_VARIABLE                                                       =             0x92E5_u32
  E_SHADER_STORAGE_BLOCK                                                  =             0x92E6_u32
  E_IS_PER_PATCH                                                          =             0x92E7_u32
  E_IS_PER_PATCH_EXT                                                      =             0x92E7_u32
  E_IS_PER_PATCH_OES                                                      =             0x92E7_u32
  E_VERTEX_SUBROUTINE                                                     =             0x92E8_u32
  E_TESS_CONTROL_SUBROUTINE                                               =             0x92E9_u32
  E_TESS_EVALUATION_SUBROUTINE                                            =             0x92EA_u32
  E_GEOMETRY_SUBROUTINE                                                   =             0x92EB_u32
  E_FRAGMENT_SUBROUTINE                                                   =             0x92EC_u32
  E_COMPUTE_SUBROUTINE                                                    =             0x92ED_u32
  E_VERTEX_SUBROUTINE_UNIFORM                                             =             0x92EE_u32
  E_TESS_CONTROL_SUBROUTINE_UNIFORM                                       =             0x92EF_u32
  E_TESS_EVALUATION_SUBROUTINE_UNIFORM                                    =             0x92F0_u32
  E_GEOMETRY_SUBROUTINE_UNIFORM                                           =             0x92F1_u32
  E_FRAGMENT_SUBROUTINE_UNIFORM                                           =             0x92F2_u32
  E_COMPUTE_SUBROUTINE_UNIFORM                                            =             0x92F3_u32
  E_TRANSFORM_FEEDBACK_VARYING                                            =             0x92F4_u32
  E_ACTIVE_RESOURCES                                                      =             0x92F5_u32
  E_MAX_NAME_LENGTH                                                       =             0x92F6_u32
  E_MAX_NUM_ACTIVE_VARIABLES                                              =             0x92F7_u32
  E_MAX_NUM_COMPATIBLE_SUBROUTINES                                        =             0x92F8_u32
  E_NAME_LENGTH                                                           =             0x92F9_u32
  E_TYPE                                                                  =             0x92FA_u32
  E_ARRAY_SIZE                                                            =             0x92FB_u32
  E_OFFSET                                                                =             0x92FC_u32
  E_BLOCK_INDEX                                                           =             0x92FD_u32
  E_ARRAY_STRIDE                                                          =             0x92FE_u32
  E_MATRIX_STRIDE                                                         =             0x92FF_u32
  E_IS_ROW_MAJOR                                                          =             0x9300_u32
  E_ATOMIC_COUNTER_BUFFER_INDEX                                           =             0x9301_u32
  E_BUFFER_BINDING                                                        =             0x9302_u32
  E_BUFFER_DATA_SIZE                                                      =             0x9303_u32
  E_NUM_ACTIVE_VARIABLES                                                  =             0x9304_u32
  E_ACTIVE_VARIABLES                                                      =             0x9305_u32
  E_REFERENCED_BY_VERTEX_SHADER                                           =             0x9306_u32
  E_REFERENCED_BY_TESS_CONTROL_SHADER                                     =             0x9307_u32
  E_REFERENCED_BY_TESS_CONTROL_SHADER_EXT                                 =             0x9307_u32
  E_REFERENCED_BY_TESS_CONTROL_SHADER_OES                                 =             0x9307_u32
  E_REFERENCED_BY_TESS_EVALUATION_SHADER                                  =             0x9308_u32
  E_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT                              =             0x9308_u32
  E_REFERENCED_BY_TESS_EVALUATION_SHADER_OES                              =             0x9308_u32
  E_REFERENCED_BY_GEOMETRY_SHADER                                         =             0x9309_u32
  E_REFERENCED_BY_GEOMETRY_SHADER_EXT                                     =             0x9309_u32
  E_REFERENCED_BY_GEOMETRY_SHADER_OES                                     =             0x9309_u32
  E_REFERENCED_BY_FRAGMENT_SHADER                                         =             0x930A_u32
  E_REFERENCED_BY_COMPUTE_SHADER                                          =             0x930B_u32
  E_TOP_LEVEL_ARRAY_SIZE                                                  =             0x930C_u32
  E_TOP_LEVEL_ARRAY_STRIDE                                                =             0x930D_u32
  E_LOCATION                                                              =             0x930E_u32
  E_LOCATION_INDEX                                                        =             0x930F_u32
  E_LOCATION_INDEX_EXT                                                    =             0x930F_u32
  E_FRAMEBUFFER_DEFAULT_WIDTH                                             =             0x9310_u32
  E_FRAMEBUFFER_DEFAULT_HEIGHT                                            =             0x9311_u32
  E_FRAMEBUFFER_DEFAULT_LAYERS                                            =             0x9312_u32
  E_FRAMEBUFFER_DEFAULT_LAYERS_EXT                                        =             0x9312_u32
  E_FRAMEBUFFER_DEFAULT_LAYERS_OES                                        =             0x9312_u32
  E_FRAMEBUFFER_DEFAULT_SAMPLES                                           =             0x9313_u32
  E_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS                            =             0x9314_u32
  E_MAX_FRAMEBUFFER_WIDTH                                                 =             0x9315_u32
  E_MAX_FRAMEBUFFER_HEIGHT                                                =             0x9316_u32
  E_MAX_FRAMEBUFFER_LAYERS                                                =             0x9317_u32
  E_MAX_FRAMEBUFFER_LAYERS_EXT                                            =             0x9317_u32
  E_MAX_FRAMEBUFFER_LAYERS_OES                                            =             0x9317_u32
  E_MAX_FRAMEBUFFER_SAMPLES                                               =             0x9318_u32
  E_RASTER_MULTISAMPLE_EXT                                                =             0x9327_u32
  E_RASTER_SAMPLES_EXT                                                    =             0x9328_u32
  E_MAX_RASTER_SAMPLES_EXT                                                =             0x9329_u32
  E_RASTER_FIXED_SAMPLE_LOCATIONS_EXT                                     =             0x932A_u32
  E_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT                                 =             0x932B_u32
  E_EFFECTIVE_RASTER_SAMPLES_EXT                                          =             0x932C_u32
  E_DEPTH_SAMPLES_NV                                                      =             0x932D_u32
  E_STENCIL_SAMPLES_NV                                                    =             0x932E_u32
  E_MIXED_DEPTH_SAMPLES_SUPPORTED_NV                                      =             0x932F_u32
  E_MIXED_STENCIL_SAMPLES_SUPPORTED_NV                                    =             0x9330_u32
  E_COVERAGE_MODULATION_TABLE_NV                                          =             0x9331_u32
  E_COVERAGE_MODULATION_NV                                                =             0x9332_u32
  E_COVERAGE_MODULATION_TABLE_SIZE_NV                                     =             0x9333_u32
  E_WARP_SIZE_NV                                                          =             0x9339_u32
  E_WARPS_PER_SM_NV                                                       =             0x933A_u32
  E_SM_COUNT_NV                                                           =             0x933B_u32
  E_FILL_RECTANGLE_NV                                                     =             0x933C_u32
  E_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB                                     =             0x933D_u32
  E_SAMPLE_LOCATION_SUBPIXEL_BITS_NV                                      =             0x933D_u32
  E_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB                                  =             0x933E_u32
  E_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV                                   =             0x933E_u32
  E_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB                                 =             0x933F_u32
  E_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV                                  =             0x933F_u32
  E_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB                           =             0x9340_u32
  E_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV                            =             0x9340_u32
  E_PROGRAMMABLE_SAMPLE_LOCATION_ARB                                      =             0x9341_u32
  E_PROGRAMMABLE_SAMPLE_LOCATION_NV                                       =             0x9341_u32
  E_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB                         =             0x9342_u32
  E_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV                          =             0x9342_u32
  E_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB                            =             0x9343_u32
  E_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV                             =             0x9343_u32
  E_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB                            =             0x9344_u32
  E_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB                                   =             0x9345_u32
  E_CONSERVATIVE_RASTERIZATION_NV                                         =             0x9346_u32
  E_SUBPIXEL_PRECISION_BIAS_X_BITS_NV                                     =             0x9347_u32
  E_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV                                     =             0x9348_u32
  E_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV                                   =             0x9349_u32
  E_LOCATION_COMPONENT                                                    =             0x934A_u32
  E_TRANSFORM_FEEDBACK_BUFFER_INDEX                                       =             0x934B_u32
  E_TRANSFORM_FEEDBACK_BUFFER_STRIDE                                      =             0x934C_u32
  E_VIEWPORT_SWIZZLE_POSITIVE_X_NV                                        =             0x9350_u32
  E_VIEWPORT_SWIZZLE_NEGATIVE_X_NV                                        =             0x9351_u32
  E_VIEWPORT_SWIZZLE_POSITIVE_Y_NV                                        =             0x9352_u32
  E_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV                                        =             0x9353_u32
  E_VIEWPORT_SWIZZLE_POSITIVE_Z_NV                                        =             0x9354_u32
  E_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV                                        =             0x9355_u32
  E_VIEWPORT_SWIZZLE_POSITIVE_W_NV                                        =             0x9356_u32
  E_VIEWPORT_SWIZZLE_NEGATIVE_W_NV                                        =             0x9357_u32
  E_VIEWPORT_SWIZZLE_X_NV                                                 =             0x9358_u32
  E_VIEWPORT_SWIZZLE_Y_NV                                                 =             0x9359_u32
  E_VIEWPORT_SWIZZLE_Z_NV                                                 =             0x935A_u32
  E_VIEWPORT_SWIZZLE_W_NV                                                 =             0x935B_u32
  E_CLIP_ORIGIN                                                           =             0x935C_u32
  E_CLIP_DEPTH_MODE                                                       =             0x935D_u32
  E_NEGATIVE_ONE_TO_ONE                                                   =             0x935E_u32
  E_ZERO_TO_ONE                                                           =             0x935F_u32
  E_CLEAR_TEXTURE                                                         =             0x9365_u32
  E_TEXTURE_REDUCTION_MODE_ARB                                            =             0x9366_u32
  E_WEIGHTED_AVERAGE_ARB                                                  =             0x9367_u32
  E_FONT_GLYPHS_AVAILABLE_NV                                              =             0x9368_u32
  E_FONT_TARGET_UNAVAILABLE_NV                                            =             0x9369_u32
  E_FONT_UNAVAILABLE_NV                                                   =             0x936A_u32
  E_FONT_UNINTELLIGIBLE_NV                                                =             0x936B_u32
  E_STANDARD_FONT_FORMAT_NV                                               =             0x936C_u32
  E_FRAGMENT_INPUT_NV                                                     =             0x936D_u32
  E_UNIFORM_BUFFER_UNIFIED_NV                                             =             0x936E_u32
  E_UNIFORM_BUFFER_ADDRESS_NV                                             =             0x936F_u32
  E_UNIFORM_BUFFER_LENGTH_NV                                              =             0x9370_u32
  E_MULTISAMPLES_NV                                                       =             0x9371_u32
  E_SUPERSAMPLE_SCALE_X_NV                                                =             0x9372_u32
  E_SUPERSAMPLE_SCALE_Y_NV                                                =             0x9373_u32
  E_CONFORMANT_NV                                                         =             0x9374_u32
  E_CONSERVATIVE_RASTER_DILATE_NV                                         =             0x9379_u32
  E_CONSERVATIVE_RASTER_DILATE_RANGE_NV                                   =             0x937A_u32
  E_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV                             =             0x937B_u32
  E_VIEWPORT_POSITION_W_SCALE_NV                                          =             0x937C_u32
  E_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV                                  =             0x937D_u32
  E_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV                                  =             0x937E_u32
  E_NUM_SAMPLE_COUNTS                                                     =             0x9380_u32
  E_MULTISAMPLE_LINE_WIDTH_RANGE_ARB                                      =             0x9381_u32
  E_MULTISAMPLE_LINE_WIDTH_RANGE                                          =             0x9381_u32
  E_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB                                =             0x9382_u32
  E_MULTISAMPLE_LINE_WIDTH_GRANULARITY                                    =             0x9382_u32
  E_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE                                 =             0x93A0_u32
  E_BGRA8_EXT                                                             =             0x93A1_u32
  E_TEXTURE_USAGE_ANGLE                                                   =             0x93A2_u32
  E_FRAMEBUFFER_ATTACHMENT_ANGLE                                          =             0x93A3_u32
  E_PACK_REVERSE_ROW_ORDER_ANGLE                                          =             0x93A4_u32
  E_PROGRAM_BINARY_ANGLE                                                  =             0x93A6_u32
  E_COMPRESSED_RGBA_ASTC_4x4                                              =             0x93B0_u32
  E_COMPRESSED_RGBA_ASTC_4x4_KHR                                          =             0x93B0_u32
  E_COMPRESSED_RGBA_ASTC_5x4                                              =             0x93B1_u32
  E_COMPRESSED_RGBA_ASTC_5x4_KHR                                          =             0x93B1_u32
  E_COMPRESSED_RGBA_ASTC_5x5                                              =             0x93B2_u32
  E_COMPRESSED_RGBA_ASTC_5x5_KHR                                          =             0x93B2_u32
  E_COMPRESSED_RGBA_ASTC_6x5                                              =             0x93B3_u32
  E_COMPRESSED_RGBA_ASTC_6x5_KHR                                          =             0x93B3_u32
  E_COMPRESSED_RGBA_ASTC_6x6                                              =             0x93B4_u32
  E_COMPRESSED_RGBA_ASTC_6x6_KHR                                          =             0x93B4_u32
  E_COMPRESSED_RGBA_ASTC_8x5                                              =             0x93B5_u32
  E_COMPRESSED_RGBA_ASTC_8x5_KHR                                          =             0x93B5_u32
  E_COMPRESSED_RGBA_ASTC_8x6                                              =             0x93B6_u32
  E_COMPRESSED_RGBA_ASTC_8x6_KHR                                          =             0x93B6_u32
  E_COMPRESSED_RGBA_ASTC_8x8                                              =             0x93B7_u32
  E_COMPRESSED_RGBA_ASTC_8x8_KHR                                          =             0x93B7_u32
  E_COMPRESSED_RGBA_ASTC_10x5                                             =             0x93B8_u32
  E_COMPRESSED_RGBA_ASTC_10x5_KHR                                         =             0x93B8_u32
  E_COMPRESSED_RGBA_ASTC_10x6                                             =             0x93B9_u32
  E_COMPRESSED_RGBA_ASTC_10x6_KHR                                         =             0x93B9_u32
  E_COMPRESSED_RGBA_ASTC_10x8                                             =             0x93BA_u32
  E_COMPRESSED_RGBA_ASTC_10x8_KHR                                         =             0x93BA_u32
  E_COMPRESSED_RGBA_ASTC_10x10                                            =             0x93BB_u32
  E_COMPRESSED_RGBA_ASTC_10x10_KHR                                        =             0x93BB_u32
  E_COMPRESSED_RGBA_ASTC_12x10                                            =             0x93BC_u32
  E_COMPRESSED_RGBA_ASTC_12x10_KHR                                        =             0x93BC_u32
  E_COMPRESSED_RGBA_ASTC_12x12                                            =             0x93BD_u32
  E_COMPRESSED_RGBA_ASTC_12x12_KHR                                        =             0x93BD_u32
  E_COMPRESSED_RGBA_ASTC_3x3x3_OES                                        =             0x93C0_u32
  E_COMPRESSED_RGBA_ASTC_4x3x3_OES                                        =             0x93C1_u32
  E_COMPRESSED_RGBA_ASTC_4x4x3_OES                                        =             0x93C2_u32
  E_COMPRESSED_RGBA_ASTC_4x4x4_OES                                        =             0x93C3_u32
  E_COMPRESSED_RGBA_ASTC_5x4x4_OES                                        =             0x93C4_u32
  E_COMPRESSED_RGBA_ASTC_5x5x4_OES                                        =             0x93C5_u32
  E_COMPRESSED_RGBA_ASTC_5x5x5_OES                                        =             0x93C6_u32
  E_COMPRESSED_RGBA_ASTC_6x5x5_OES                                        =             0x93C7_u32
  E_COMPRESSED_RGBA_ASTC_6x6x5_OES                                        =             0x93C8_u32
  E_COMPRESSED_RGBA_ASTC_6x6x6_OES                                        =             0x93C9_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4                                      =             0x93D0_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR                                  =             0x93D0_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4                                      =             0x93D1_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR                                  =             0x93D1_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5                                      =             0x93D2_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR                                  =             0x93D2_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5                                      =             0x93D3_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR                                  =             0x93D3_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6                                      =             0x93D4_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR                                  =             0x93D4_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5                                      =             0x93D5_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR                                  =             0x93D5_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6                                      =             0x93D6_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR                                  =             0x93D6_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8                                      =             0x93D7_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR                                  =             0x93D7_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5                                     =             0x93D8_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR                                 =             0x93D8_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6                                     =             0x93D9_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR                                 =             0x93D9_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8                                     =             0x93DA_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR                                 =             0x93DA_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10                                    =             0x93DB_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR                                =             0x93DB_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10                                    =             0x93DC_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR                                =             0x93DC_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12                                    =             0x93DD_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR                                =             0x93DD_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES                                =             0x93E0_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES                                =             0x93E1_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES                                =             0x93E2_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES                                =             0x93E3_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES                                =             0x93E4_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES                                =             0x93E5_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES                                =             0x93E6_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES                                =             0x93E7_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES                                =             0x93E8_u32
  E_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES                                =             0x93E9_u32
  E_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG                                =             0x93F0_u32
  E_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG                                =             0x93F1_u32
  E_PERFQUERY_COUNTER_EVENT_INTEL                                         =             0x94F0_u32
  E_PERFQUERY_COUNTER_DURATION_NORM_INTEL                                 =             0x94F1_u32
  E_PERFQUERY_COUNTER_DURATION_RAW_INTEL                                  =             0x94F2_u32
  E_PERFQUERY_COUNTER_THROUGHPUT_INTEL                                    =             0x94F3_u32
  E_PERFQUERY_COUNTER_RAW_INTEL                                           =             0x94F4_u32
  E_PERFQUERY_COUNTER_TIMESTAMP_INTEL                                     =             0x94F5_u32
  E_PERFQUERY_COUNTER_DATA_UINT32_INTEL                                   =             0x94F8_u32
  E_PERFQUERY_COUNTER_DATA_UINT64_INTEL                                   =             0x94F9_u32
  E_PERFQUERY_COUNTER_DATA_FLOAT_INTEL                                    =             0x94FA_u32
  E_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL                                   =             0x94FB_u32
  E_PERFQUERY_COUNTER_DATA_BOOL32_INTEL                                   =             0x94FC_u32
  E_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL                                 =             0x94FD_u32
  E_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL                               =             0x94FE_u32
  E_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL                               =             0x94FF_u32
  E_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL                                 =             0x9500_u32
  E_CONSERVATIVE_RASTER_MODE_NV                                           =             0x954D_u32
  E_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV                                 =             0x954E_u32
  E_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV                        =             0x954F_u32
  E_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR                          =             0x9630_u32
  E_MAX_VIEWS_OVR                                                         =             0x9631_u32
  E_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR                    =             0x9632_u32
  E_GS_SHADER_BINARY_MTK                                                  =             0x9640_u32
  E_GS_PROGRAM_BINARY_MTK                                                 =             0x9641_u32
  E_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT                       =             0x9650_u32
  E_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT                            =             0x9651_u32
  E_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT =             0x9652_u32
  E_RASTER_POSITION_UNCLIPPED_IBM                                         =            0x19262_u32
  E_CULL_VERTEX_IBM                                                       =                 103050
  E_ALL_STATIC_DATA_IBM                                                   =                 103060
  E_STATIC_VERTEX_ARRAY_IBM                                               =                 103061
  E_VERTEX_ARRAY_LIST_IBM                                                 =                 103070
  E_NORMAL_ARRAY_LIST_IBM                                                 =                 103071
  E_COLOR_ARRAY_LIST_IBM                                                  =                 103072
  E_INDEX_ARRAY_LIST_IBM                                                  =                 103073
  E_TEXTURE_COORD_ARRAY_LIST_IBM                                          =                 103074
  E_EDGE_FLAG_ARRAY_LIST_IBM                                              =                 103075
  E_FOG_COORDINATE_ARRAY_LIST_IBM                                         =                 103076
  E_SECONDARY_COLOR_ARRAY_LIST_IBM                                        =                 103077
  E_VERTEX_ARRAY_LIST_STRIDE_IBM                                          =                 103080
  E_NORMAL_ARRAY_LIST_STRIDE_IBM                                          =                 103081
  E_COLOR_ARRAY_LIST_STRIDE_IBM                                           =                 103082
  E_INDEX_ARRAY_LIST_STRIDE_IBM                                           =                 103083
  E_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM                                   =                 103084
  E_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM                                       =                 103085
  E_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM                                  =                 103086
  E_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM                                 =                 103087
  E_PREFER_DOUBLEBUFFER_HINT_PGI                                          =            0x1A1F8_u32
  E_CONSERVE_MEMORY_HINT_PGI                                              =            0x1A1FD_u32
  E_RECLAIM_MEMORY_HINT_PGI                                               =            0x1A1FE_u32
  E_NATIVE_GRAPHICS_HANDLE_PGI                                            =            0x1A202_u32
  E_NATIVE_GRAPHICS_BEGIN_HINT_PGI                                        =            0x1A203_u32
  E_NATIVE_GRAPHICS_END_HINT_PGI                                          =            0x1A204_u32
  E_ALWAYS_FAST_HINT_PGI                                                  =            0x1A20C_u32
  E_ALWAYS_SOFT_HINT_PGI                                                  =            0x1A20D_u32
  E_ALLOW_DRAW_OBJ_HINT_PGI                                               =            0x1A20E_u32
  E_ALLOW_DRAW_WIN_HINT_PGI                                               =            0x1A20F_u32
  E_ALLOW_DRAW_FRG_HINT_PGI                                               =            0x1A210_u32
  E_ALLOW_DRAW_MEM_HINT_PGI                                               =            0x1A211_u32
  E_STRICT_DEPTHFUNC_HINT_PGI                                             =            0x1A216_u32
  E_STRICT_LIGHTING_HINT_PGI                                              =            0x1A217_u32
  E_STRICT_SCISSOR_HINT_PGI                                               =            0x1A218_u32
  E_FULL_STIPPLE_HINT_PGI                                                 =            0x1A219_u32
  E_CLIP_NEAR_HINT_PGI                                                    =            0x1A220_u32
  E_CLIP_FAR_HINT_PGI                                                     =            0x1A221_u32
  E_WIDE_LINE_HINT_PGI                                                    =            0x1A222_u32
  E_BACK_NORMALS_HINT_PGI                                                 =            0x1A223_u32
  E_VERTEX_DATA_HINT_PGI                                                  =            0x1A22A_u32
  E_VERTEX_CONSISTENT_HINT_PGI                                            =            0x1A22B_u32
  E_MATERIAL_SIDE_HINT_PGI                                                =            0x1A22C_u32
  E_MAX_VERTEX_HINT_PGI                                                   =            0x1A22D_u32
  fun accum = "glAccum"(op : UInt32, value : Float32) : Void
  fun accumx_oes = "glAccumxOES"(op : UInt32, value : Int32) : Void
  fun active_program_ext = "glActiveProgramEXT"(program : UInt32) : Void
  fun active_shader_program = "glActiveShaderProgram"(pipeline : UInt32, program : UInt32) : Void
  fun active_shader_program_ext = "glActiveShaderProgramEXT"(pipeline : UInt32, program : UInt32) : Void
  fun active_stencil_face_ext = "glActiveStencilFaceEXT"(face : UInt32) : Void
  fun active_texture = "glActiveTexture"(texture : UInt32) : Void
  fun active_texture_arb = "glActiveTextureARB"(texture : UInt32) : Void
  fun active_varying_nv = "glActiveVaryingNV"(program : UInt32, name : UInt8*) : Void
  fun alpha_fragment_op1ati = "glAlphaFragmentOp1ATI"(op : UInt32, dst : UInt32, dstMod : UInt32, arg1 : UInt32, arg1Rep : UInt32, arg1Mod : UInt32) : Void
  fun alpha_fragment_op2ati = "glAlphaFragmentOp2ATI"(op : UInt32, dst : UInt32, dstMod : UInt32, arg1 : UInt32, arg1Rep : UInt32, arg1Mod : UInt32, arg2 : UInt32, arg2Rep : UInt32, arg2Mod : UInt32) : Void
  fun alpha_fragment_op3ati = "glAlphaFragmentOp3ATI"(op : UInt32, dst : UInt32, dstMod : UInt32, arg1 : UInt32, arg1Rep : UInt32, arg1Mod : UInt32, arg2 : UInt32, arg2Rep : UInt32, arg2Mod : UInt32, arg3 : UInt32, arg3Rep : UInt32, arg3Mod : UInt32) : Void
  fun alpha_func = "glAlphaFunc"(func : UInt32, ref : Float32) : Void
  fun alpha_func_qcom = "glAlphaFuncQCOM"(func : UInt32, ref : Float32) : Void
  fun alpha_funcx = "glAlphaFuncx"(func : UInt32, ref : Int32) : Void
  fun alpha_funcx_oes = "glAlphaFuncxOES"(func : UInt32, ref : Int32) : Void
  fun apply_framebuffer_attachment_cmaaintel = "glApplyFramebufferAttachmentCMAAINTEL" : Void
  fun apply_texture_ext = "glApplyTextureEXT"(mode : UInt32) : Void
  fun are_programs_resident_nv = "glAreProgramsResidentNV"(n : Int32, programs : UInt32*, residences : UInt8*) : UInt8
  fun are_textures_resident = "glAreTexturesResident"(n : Int32, textures : UInt32*, residences : UInt8*) : UInt8
  fun are_textures_resident_ext = "glAreTexturesResidentEXT"(n : Int32, textures : UInt32*, residences : UInt8*) : UInt8
  fun array_element = "glArrayElement"(i : Int32) : Void
  fun array_element_ext = "glArrayElementEXT"(i : Int32) : Void
  fun array_object_ati = "glArrayObjectATI"(array : UInt32, size : Int32, type : UInt32, stride : Int32, buffer : UInt32, offset : UInt32) : Void
  fun async_marker_sgix = "glAsyncMarkerSGIX"(marker : UInt32) : Void
  fun attach_object_arb = "glAttachObjectARB"(containerObj : Void*, obj : Void*) : Void
  fun attach_shader = "glAttachShader"(program : UInt32, shader : UInt32) : Void
  fun begin = "glBegin"(mode : UInt32) : Void
  fun begin_conditional_render = "glBeginConditionalRender"(id : UInt32, mode : UInt32) : Void
  fun begin_conditional_render_nv = "glBeginConditionalRenderNV"(id : UInt32, mode : UInt32) : Void
  fun begin_conditional_render_nvx = "glBeginConditionalRenderNVX"(id : UInt32) : Void
  fun begin_fragment_shader_ati = "glBeginFragmentShaderATI" : Void
  fun begin_occlusion_query_nv = "glBeginOcclusionQueryNV"(id : UInt32) : Void
  fun begin_perf_monitor_amd = "glBeginPerfMonitorAMD"(monitor : UInt32) : Void
  fun begin_perf_query_intel = "glBeginPerfQueryINTEL"(queryHandle : UInt32) : Void
  fun begin_query = "glBeginQuery"(target : UInt32, id : UInt32) : Void
  fun begin_query_arb = "glBeginQueryARB"(target : UInt32, id : UInt32) : Void
  fun begin_query_ext = "glBeginQueryEXT"(target : UInt32, id : UInt32) : Void
  fun begin_query_indexed = "glBeginQueryIndexed"(target : UInt32, index : UInt32, id : UInt32) : Void
  fun begin_transform_feedback = "glBeginTransformFeedback"(primitiveMode : UInt32) : Void
  fun begin_transform_feedback_ext = "glBeginTransformFeedbackEXT"(primitiveMode : UInt32) : Void
  fun begin_transform_feedback_nv = "glBeginTransformFeedbackNV"(primitiveMode : UInt32) : Void
  fun begin_vertex_shader_ext = "glBeginVertexShaderEXT" : Void
  fun begin_video_capture_nv = "glBeginVideoCaptureNV"(video_capture_slot : UInt32) : Void
  fun bind_attrib_location = "glBindAttribLocation"(program : UInt32, index : UInt32, name : UInt8*) : Void
  fun bind_attrib_location_arb = "glBindAttribLocationARB"(programObj : Void*, index : UInt32, name : UInt8*) : Void
  fun bind_buffer = "glBindBuffer"(target : UInt32, buffer : UInt32) : Void
  fun bind_buffer_arb = "glBindBufferARB"(target : UInt32, buffer : UInt32) : Void
  fun bind_buffer_base = "glBindBufferBase"(target : UInt32, index : UInt32, buffer : UInt32) : Void
  fun bind_buffer_base_ext = "glBindBufferBaseEXT"(target : UInt32, index : UInt32, buffer : UInt32) : Void
  fun bind_buffer_base_nv = "glBindBufferBaseNV"(target : UInt32, index : UInt32, buffer : UInt32) : Void
  fun bind_buffer_offset_ext = "glBindBufferOffsetEXT"(target : UInt32, index : UInt32, buffer : UInt32, offset : Int32) : Void
  fun bind_buffer_offset_nv = "glBindBufferOffsetNV"(target : UInt32, index : UInt32, buffer : UInt32, offset : Int32) : Void
  fun bind_buffer_range = "glBindBufferRange"(target : UInt32, index : UInt32, buffer : UInt32, offset : Int32, size : Int32) : Void
  fun bind_buffer_range_ext = "glBindBufferRangeEXT"(target : UInt32, index : UInt32, buffer : UInt32, offset : Int32, size : Int32) : Void
  fun bind_buffer_range_nv = "glBindBufferRangeNV"(target : UInt32, index : UInt32, buffer : UInt32, offset : Int32, size : Int32) : Void
  fun bind_buffers_base = "glBindBuffersBase"(target : UInt32, first : UInt32, count : Int32, buffers : UInt32*) : Void
  fun bind_buffers_range = "glBindBuffersRange"(target : UInt32, first : UInt32, count : Int32, buffers : UInt32*, offsets : Int32*, sizes : Int32*) : Void
  fun bind_frag_data_location = "glBindFragDataLocation"(program : UInt32, color : UInt32, name : UInt8*) : Void
  fun bind_frag_data_location_ext = "glBindFragDataLocationEXT"(program : UInt32, color : UInt32, name : UInt8*) : Void
  fun bind_frag_data_location_indexed = "glBindFragDataLocationIndexed"(program : UInt32, colorNumber : UInt32, index : UInt32, name : UInt8*) : Void
  fun bind_frag_data_location_indexed_ext = "glBindFragDataLocationIndexedEXT"(program : UInt32, colorNumber : UInt32, index : UInt32, name : UInt8*) : Void
  fun bind_fragment_shader_ati = "glBindFragmentShaderATI"(id : UInt32) : Void
  fun bind_framebuffer = "glBindFramebuffer"(target : UInt32, framebuffer : UInt32) : Void
  fun bind_framebuffer_ext = "glBindFramebufferEXT"(target : UInt32, framebuffer : UInt32) : Void
  fun bind_framebuffer_oes = "glBindFramebufferOES"(target : UInt32, framebuffer : UInt32) : Void
  fun bind_image_texture = "glBindImageTexture"(unit : UInt32, texture : UInt32, level : Int32, layered : UInt8, layer : Int32, access : UInt32, format : UInt32) : Void
  fun bind_image_texture_ext = "glBindImageTextureEXT"(index : UInt32, texture : UInt32, level : Int32, layered : UInt8, layer : Int32, access : UInt32, format : Int32) : Void
  fun bind_image_textures = "glBindImageTextures"(first : UInt32, count : Int32, textures : UInt32*) : Void
  fun bind_light_parameter_ext = "glBindLightParameterEXT"(light : UInt32, value : UInt32) : UInt32
  fun bind_material_parameter_ext = "glBindMaterialParameterEXT"(face : UInt32, value : UInt32) : UInt32
  fun bind_multi_texture_ext = "glBindMultiTextureEXT"(texunit : UInt32, target : UInt32, texture : UInt32) : Void
  fun bind_parameter_ext = "glBindParameterEXT"(value : UInt32) : UInt32
  fun bind_program_arb = "glBindProgramARB"(target : UInt32, program : UInt32) : Void
  fun bind_program_nv = "glBindProgramNV"(target : UInt32, id : UInt32) : Void
  fun bind_program_pipeline = "glBindProgramPipeline"(pipeline : UInt32) : Void
  fun bind_program_pipeline_ext = "glBindProgramPipelineEXT"(pipeline : UInt32) : Void
  fun bind_renderbuffer = "glBindRenderbuffer"(target : UInt32, renderbuffer : UInt32) : Void
  fun bind_renderbuffer_ext = "glBindRenderbufferEXT"(target : UInt32, renderbuffer : UInt32) : Void
  fun bind_renderbuffer_oes = "glBindRenderbufferOES"(target : UInt32, renderbuffer : UInt32) : Void
  fun bind_sampler = "glBindSampler"(unit : UInt32, sampler : UInt32) : Void
  fun bind_samplers = "glBindSamplers"(first : UInt32, count : Int32, samplers : UInt32*) : Void
  fun bind_tex_gen_parameter_ext = "glBindTexGenParameterEXT"(unit : UInt32, coord : UInt32, value : UInt32) : UInt32
  fun bind_texture = "glBindTexture"(target : UInt32, texture : UInt32) : Void
  fun bind_texture_ext = "glBindTextureEXT"(target : UInt32, texture : UInt32) : Void
  fun bind_texture_unit = "glBindTextureUnit"(unit : UInt32, texture : UInt32) : Void
  fun bind_texture_unit_parameter_ext = "glBindTextureUnitParameterEXT"(unit : UInt32, value : UInt32) : UInt32
  fun bind_textures = "glBindTextures"(first : UInt32, count : Int32, textures : UInt32*) : Void
  fun bind_transform_feedback = "glBindTransformFeedback"(target : UInt32, id : UInt32) : Void
  fun bind_transform_feedback_nv = "glBindTransformFeedbackNV"(target : UInt32, id : UInt32) : Void
  fun bind_vertex_array = "glBindVertexArray"(array : UInt32) : Void
  fun bind_vertex_array_apple = "glBindVertexArrayAPPLE"(array : UInt32) : Void
  fun bind_vertex_array_oes = "glBindVertexArrayOES"(array : UInt32) : Void
  fun bind_vertex_buffer = "glBindVertexBuffer"(bindingindex : UInt32, buffer : UInt32, offset : Int32, stride : Int32) : Void
  fun bind_vertex_buffers = "glBindVertexBuffers"(first : UInt32, count : Int32, buffers : UInt32*, offsets : Int32*, strides : Int32*) : Void
  fun bind_vertex_shader_ext = "glBindVertexShaderEXT"(id : UInt32) : Void
  fun bind_video_capture_stream_buffer_nv = "glBindVideoCaptureStreamBufferNV"(video_capture_slot : UInt32, stream : UInt32, frame_region : UInt32, offset : Int32) : Void
  fun bind_video_capture_stream_texture_nv = "glBindVideoCaptureStreamTextureNV"(video_capture_slot : UInt32, stream : UInt32, frame_region : UInt32, target : UInt32, texture : UInt32) : Void
  fun binormal3b_ext = "glBinormal3bEXT"(bx : Int8, by : Int8, bz : Int8) : Void
  fun binormal3bv_ext = "glBinormal3bvEXT"(v : Int8*) : Void
  fun binormal3d_ext = "glBinormal3dEXT"(bx : Float64, by : Float64, bz : Float64) : Void
  fun binormal3dv_ext = "glBinormal3dvEXT"(v : Float64*) : Void
  fun binormal3f_ext = "glBinormal3fEXT"(bx : Float32, by : Float32, bz : Float32) : Void
  fun binormal3fv_ext = "glBinormal3fvEXT"(v : Float32*) : Void
  fun binormal3i_ext = "glBinormal3iEXT"(bx : Int32, by : Int32, bz : Int32) : Void
  fun binormal3iv_ext = "glBinormal3ivEXT"(v : Int32*) : Void
  fun binormal3s_ext = "glBinormal3sEXT"(bx : Int16, by : Int16, bz : Int16) : Void
  fun binormal3sv_ext = "glBinormal3svEXT"(v : Int16*) : Void
  fun binormal_pointer_ext = "glBinormalPointerEXT"(type : UInt32, stride : Int32, pointer : Void*) : Void
  fun bitmap = "glBitmap"(width : Int32, height : Int32, xorig : Float32, yorig : Float32, xmove : Float32, ymove : Float32, bitmap : UInt8*) : Void
  fun bitmapx_oes = "glBitmapxOES"(width : Int32, height : Int32, xorig : Int32, yorig : Int32, xmove : Int32, ymove : Int32, bitmap : UInt8*) : Void
  fun blend_barrier = "glBlendBarrier" : Void
  fun blend_barrier_khr = "glBlendBarrierKHR" : Void
  fun blend_barrier_nv = "glBlendBarrierNV" : Void
  fun blend_color = "glBlendColor"(red : Float32, green : Float32, blue : Float32, alpha : Float32) : Void
  fun blend_color_ext = "glBlendColorEXT"(red : Float32, green : Float32, blue : Float32, alpha : Float32) : Void
  fun blend_colorx_oes = "glBlendColorxOES"(red : Int32, green : Int32, blue : Int32, alpha : Int32) : Void
  fun blend_equation = "glBlendEquation"(mode : UInt32) : Void
  fun blend_equation_ext = "glBlendEquationEXT"(mode : UInt32) : Void
  fun blend_equation_indexed_amd = "glBlendEquationIndexedAMD"(buf : UInt32, mode : UInt32) : Void
  fun blend_equation_oes = "glBlendEquationOES"(mode : UInt32) : Void
  fun blend_equation_separate = "glBlendEquationSeparate"(modeRGB : UInt32, modeAlpha : UInt32) : Void
  fun blend_equation_separate_ext = "glBlendEquationSeparateEXT"(modeRGB : UInt32, modeAlpha : UInt32) : Void
  fun blend_equation_separate_indexed_amd = "glBlendEquationSeparateIndexedAMD"(buf : UInt32, modeRGB : UInt32, modeAlpha : UInt32) : Void
  fun blend_equation_separate_oes = "glBlendEquationSeparateOES"(modeRGB : UInt32, modeAlpha : UInt32) : Void
  fun blend_equation_separatei = "glBlendEquationSeparatei"(buf : UInt32, modeRGB : UInt32, modeAlpha : UInt32) : Void
  fun blend_equation_separatei_arb = "glBlendEquationSeparateiARB"(buf : UInt32, modeRGB : UInt32, modeAlpha : UInt32) : Void
  fun blend_equation_separatei_ext = "glBlendEquationSeparateiEXT"(buf : UInt32, modeRGB : UInt32, modeAlpha : UInt32) : Void
  fun blend_equation_separatei_oes = "glBlendEquationSeparateiOES"(buf : UInt32, modeRGB : UInt32, modeAlpha : UInt32) : Void
  fun blend_equationi = "glBlendEquationi"(buf : UInt32, mode : UInt32) : Void
  fun blend_equationi_arb = "glBlendEquationiARB"(buf : UInt32, mode : UInt32) : Void
  fun blend_equationi_ext = "glBlendEquationiEXT"(buf : UInt32, mode : UInt32) : Void
  fun blend_equationi_oes = "glBlendEquationiOES"(buf : UInt32, mode : UInt32) : Void
  fun blend_func = "glBlendFunc"(sfactor : UInt32, dfactor : UInt32) : Void
  fun blend_func_indexed_amd = "glBlendFuncIndexedAMD"(buf : UInt32, src : UInt32, dst : UInt32) : Void
  fun blend_func_separate = "glBlendFuncSeparate"(sfactorRGB : UInt32, dfactorRGB : UInt32, sfactorAlpha : UInt32, dfactorAlpha : UInt32) : Void
  fun blend_func_separate_ext = "glBlendFuncSeparateEXT"(sfactorRGB : UInt32, dfactorRGB : UInt32, sfactorAlpha : UInt32, dfactorAlpha : UInt32) : Void
  fun blend_func_separate_ingr = "glBlendFuncSeparateINGR"(sfactorRGB : UInt32, dfactorRGB : UInt32, sfactorAlpha : UInt32, dfactorAlpha : UInt32) : Void
  fun blend_func_separate_indexed_amd = "glBlendFuncSeparateIndexedAMD"(buf : UInt32, srcRGB : UInt32, dstRGB : UInt32, srcAlpha : UInt32, dstAlpha : UInt32) : Void
  fun blend_func_separate_oes = "glBlendFuncSeparateOES"(srcRGB : UInt32, dstRGB : UInt32, srcAlpha : UInt32, dstAlpha : UInt32) : Void
  fun blend_func_separatei = "glBlendFuncSeparatei"(buf : UInt32, srcRGB : UInt32, dstRGB : UInt32, srcAlpha : UInt32, dstAlpha : UInt32) : Void
  fun blend_func_separatei_arb = "glBlendFuncSeparateiARB"(buf : UInt32, srcRGB : UInt32, dstRGB : UInt32, srcAlpha : UInt32, dstAlpha : UInt32) : Void
  fun blend_func_separatei_ext = "glBlendFuncSeparateiEXT"(buf : UInt32, srcRGB : UInt32, dstRGB : UInt32, srcAlpha : UInt32, dstAlpha : UInt32) : Void
  fun blend_func_separatei_oes = "glBlendFuncSeparateiOES"(buf : UInt32, srcRGB : UInt32, dstRGB : UInt32, srcAlpha : UInt32, dstAlpha : UInt32) : Void
  fun blend_funci = "glBlendFunci"(buf : UInt32, src : UInt32, dst : UInt32) : Void
  fun blend_funci_arb = "glBlendFunciARB"(buf : UInt32, src : UInt32, dst : UInt32) : Void
  fun blend_funci_ext = "glBlendFunciEXT"(buf : UInt32, src : UInt32, dst : UInt32) : Void
  fun blend_funci_oes = "glBlendFunciOES"(buf : UInt32, src : UInt32, dst : UInt32) : Void
  fun blend_parameteri_nv = "glBlendParameteriNV"(pname : UInt32, value : Int32) : Void
  fun blit_framebuffer = "glBlitFramebuffer"(srcX0 : Int32, srcY0 : Int32, srcX1 : Int32, srcY1 : Int32, dstX0 : Int32, dstY0 : Int32, dstX1 : Int32, dstY1 : Int32, mask : UInt32, filter : UInt32) : Void
  fun blit_framebuffer_angle = "glBlitFramebufferANGLE"(srcX0 : Int32, srcY0 : Int32, srcX1 : Int32, srcY1 : Int32, dstX0 : Int32, dstY0 : Int32, dstX1 : Int32, dstY1 : Int32, mask : UInt32, filter : UInt32) : Void
  fun blit_framebuffer_ext = "glBlitFramebufferEXT"(srcX0 : Int32, srcY0 : Int32, srcX1 : Int32, srcY1 : Int32, dstX0 : Int32, dstY0 : Int32, dstX1 : Int32, dstY1 : Int32, mask : UInt32, filter : UInt32) : Void
  fun blit_framebuffer_nv = "glBlitFramebufferNV"(srcX0 : Int32, srcY0 : Int32, srcX1 : Int32, srcY1 : Int32, dstX0 : Int32, dstY0 : Int32, dstX1 : Int32, dstY1 : Int32, mask : UInt32, filter : UInt32) : Void
  fun blit_named_framebuffer = "glBlitNamedFramebuffer"(readFramebuffer : UInt32, drawFramebuffer : UInt32, srcX0 : Int32, srcY0 : Int32, srcX1 : Int32, srcY1 : Int32, dstX0 : Int32, dstY0 : Int32, dstX1 : Int32, dstY1 : Int32, mask : UInt32, filter : UInt32) : Void
  fun buffer_address_range_nv = "glBufferAddressRangeNV"(pname : UInt32, index : UInt32, address : UInt64, length : Int32) : Void
  fun buffer_data = "glBufferData"(target : UInt32, size : Int32, data : Void*, usage : UInt32) : Void
  fun buffer_data_arb = "glBufferDataARB"(target : UInt32, size : Int32, data : Void*, usage : UInt32) : Void
  fun buffer_page_commitment_arb = "glBufferPageCommitmentARB"(target : UInt32, offset : Int32, size : Int32, commit : UInt8) : Void
  fun buffer_parameteri_apple = "glBufferParameteriAPPLE"(target : UInt32, pname : UInt32, param : Int32) : Void
  fun buffer_storage = "glBufferStorage"(target : UInt32, size : Int32, data : Void*, flags : UInt32) : Void
  fun buffer_storage_ext = "glBufferStorageEXT"(target : UInt32, size : Int32, data : Void*, flags : UInt32) : Void
  fun buffer_sub_data = "glBufferSubData"(target : UInt32, offset : Int32, size : Int32, data : Void*) : Void
  fun buffer_sub_data_arb = "glBufferSubDataARB"(target : UInt32, offset : Int32, size : Int32, data : Void*) : Void
  fun call_command_list_nv = "glCallCommandListNV"(list : UInt32) : Void
  fun call_list = "glCallList"(list : UInt32) : Void
  fun call_lists = "glCallLists"(n : Int32, type : UInt32, lists : Void*) : Void
  fun check_framebuffer_status = "glCheckFramebufferStatus"(target : UInt32) : UInt32
  fun check_framebuffer_status_ext = "glCheckFramebufferStatusEXT"(target : UInt32) : UInt32
  fun check_framebuffer_status_oes = "glCheckFramebufferStatusOES"(target : UInt32) : UInt32
  fun check_named_framebuffer_status = "glCheckNamedFramebufferStatus"(framebuffer : UInt32, target : UInt32) : UInt32
  fun check_named_framebuffer_status_ext = "glCheckNamedFramebufferStatusEXT"(framebuffer : UInt32, target : UInt32) : UInt32
  fun clamp_color = "glClampColor"(target : UInt32, clamp : UInt32) : Void
  fun clamp_color_arb = "glClampColorARB"(target : UInt32, clamp : UInt32) : Void
  fun clear = "glClear"(mask : UInt32) : Void
  fun clear_accum = "glClearAccum"(red : Float32, green : Float32, blue : Float32, alpha : Float32) : Void
  fun clear_accumx_oes = "glClearAccumxOES"(red : Int32, green : Int32, blue : Int32, alpha : Int32) : Void
  fun clear_buffer_data = "glClearBufferData"(target : UInt32, internalformat : UInt32, format : UInt32, type : UInt32, data : Void*) : Void
  fun clear_buffer_sub_data = "glClearBufferSubData"(target : UInt32, internalformat : UInt32, offset : Int32, size : Int32, format : UInt32, type : UInt32, data : Void*) : Void
  fun clear_bufferfi = "glClearBufferfi"(buffer : UInt32, drawbuffer : Int32, depth : Float32, stencil : Int32) : Void
  fun clear_bufferfv = "glClearBufferfv"(buffer : UInt32, drawbuffer : Int32, value : Float32*) : Void
  fun clear_bufferiv = "glClearBufferiv"(buffer : UInt32, drawbuffer : Int32, value : Int32*) : Void
  fun clear_bufferuiv = "glClearBufferuiv"(buffer : UInt32, drawbuffer : Int32, value : UInt32*) : Void
  fun clear_color = "glClearColor"(red : Float32, green : Float32, blue : Float32, alpha : Float32) : Void
  fun clear_color_ii_ext = "glClearColorIiEXT"(red : Int32, green : Int32, blue : Int32, alpha : Int32) : Void
  fun clear_color_iui_ext = "glClearColorIuiEXT"(red : UInt32, green : UInt32, blue : UInt32, alpha : UInt32) : Void
  fun clear_colorx = "glClearColorx"(red : Int32, green : Int32, blue : Int32, alpha : Int32) : Void
  fun clear_colorx_oes = "glClearColorxOES"(red : Int32, green : Int32, blue : Int32, alpha : Int32) : Void
  fun clear_depth = "glClearDepth"(depth : Float64) : Void
  fun clear_depthd_nv = "glClearDepthdNV"(depth : Float64) : Void
  fun clear_depthf = "glClearDepthf"(d : Float32) : Void
  fun clear_depthf_oes = "glClearDepthfOES"(depth : Float32) : Void
  fun clear_depthx = "glClearDepthx"(depth : Int32) : Void
  fun clear_depthx_oes = "glClearDepthxOES"(depth : Int32) : Void
  fun clear_index = "glClearIndex"(c : Float32) : Void
  fun clear_named_buffer_data = "glClearNamedBufferData"(buffer : UInt32, internalformat : UInt32, format : UInt32, type : UInt32, data : Void*) : Void
  fun clear_named_buffer_data_ext = "glClearNamedBufferDataEXT"(buffer : UInt32, internalformat : UInt32, format : UInt32, type : UInt32, data : Void*) : Void
  fun clear_named_buffer_sub_data = "glClearNamedBufferSubData"(buffer : UInt32, internalformat : UInt32, offset : Int32, size : Int32, format : UInt32, type : UInt32, data : Void*) : Void
  fun clear_named_buffer_sub_data_ext = "glClearNamedBufferSubDataEXT"(buffer : UInt32, internalformat : UInt32, offset : Int32, size : Int32, format : UInt32, type : UInt32, data : Void*) : Void
  fun clear_named_framebufferfi = "glClearNamedFramebufferfi"(framebuffer : UInt32, buffer : UInt32, drawbuffer : Int32, depth : Float32, stencil : Int32) : Void
  fun clear_named_framebufferfv = "glClearNamedFramebufferfv"(framebuffer : UInt32, buffer : UInt32, drawbuffer : Int32, value : Float32*) : Void
  fun clear_named_framebufferiv = "glClearNamedFramebufferiv"(framebuffer : UInt32, buffer : UInt32, drawbuffer : Int32, value : Int32*) : Void
  fun clear_named_framebufferuiv = "glClearNamedFramebufferuiv"(framebuffer : UInt32, buffer : UInt32, drawbuffer : Int32, value : UInt32*) : Void
  fun clear_pixel_local_storageui_ext = "glClearPixelLocalStorageuiEXT"(offset : Int32, n : Int32, values : UInt32*) : Void
  fun clear_stencil = "glClearStencil"(s : Int32) : Void
  fun clear_tex_image = "glClearTexImage"(texture : UInt32, level : Int32, format : UInt32, type : UInt32, data : Void*) : Void
  fun clear_tex_image_ext = "glClearTexImageEXT"(texture : UInt32, level : Int32, format : UInt32, type : UInt32, data : Void*) : Void
  fun clear_tex_sub_image = "glClearTexSubImage"(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, format : UInt32, type : UInt32, data : Void*) : Void
  fun clear_tex_sub_image_ext = "glClearTexSubImageEXT"(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, format : UInt32, type : UInt32, data : Void*) : Void
  fun client_active_texture = "glClientActiveTexture"(texture : UInt32) : Void
  fun client_active_texture_arb = "glClientActiveTextureARB"(texture : UInt32) : Void
  fun client_active_vertex_stream_ati = "glClientActiveVertexStreamATI"(stream : UInt32) : Void
  fun client_attrib_default_ext = "glClientAttribDefaultEXT"(mask : UInt32) : Void
  fun client_wait_sync = "glClientWaitSync"(sync : Void*, flags : UInt32, timeout : UInt64) : UInt32
  fun client_wait_sync_apple = "glClientWaitSyncAPPLE"(sync : Void*, flags : UInt32, timeout : UInt64) : UInt32
  fun clip_control = "glClipControl"(origin : UInt32, depth : UInt32) : Void
  fun clip_plane = "glClipPlane"(plane : UInt32, equation : Float64*) : Void
  fun clip_planef = "glClipPlanef"(p : UInt32, eqn : Float32*) : Void
  fun clip_planef_img = "glClipPlanefIMG"(p : UInt32, eqn : Float32*) : Void
  fun clip_planef_oes = "glClipPlanefOES"(plane : UInt32, equation : Float32*) : Void
  fun clip_planex = "glClipPlanex"(plane : UInt32, equation : Int32*) : Void
  fun clip_planex_img = "glClipPlanexIMG"(p : UInt32, eqn : Int32*) : Void
  fun clip_planex_oes = "glClipPlanexOES"(plane : UInt32, equation : Int32*) : Void
  fun color3b = "glColor3b"(red : Int8, green : Int8, blue : Int8) : Void
  fun color3bv = "glColor3bv"(v : Int8*) : Void
  fun color3d = "glColor3d"(red : Float64, green : Float64, blue : Float64) : Void
  fun color3dv = "glColor3dv"(v : Float64*) : Void
  fun color3f = "glColor3f"(red : Float32, green : Float32, blue : Float32) : Void
  fun color3f_vertex3f_sun = "glColor3fVertex3fSUN"(r : Float32, g : Float32, b : Float32, x : Float32, y : Float32, z : Float32) : Void
  fun color3f_vertex3fv_sun = "glColor3fVertex3fvSUN"(c : Float32*, v : Float32*) : Void
  fun color3fv = "glColor3fv"(v : Float32*) : Void
  fun color3h_nv = "glColor3hNV"(red : UInt16, green : UInt16, blue : UInt16) : Void
  fun color3hv_nv = "glColor3hvNV"(v : UInt16*) : Void
  fun color3i = "glColor3i"(red : Int32, green : Int32, blue : Int32) : Void
  fun color3iv = "glColor3iv"(v : Int32*) : Void
  fun color3s = "glColor3s"(red : Int16, green : Int16, blue : Int16) : Void
  fun color3sv = "glColor3sv"(v : Int16*) : Void
  fun color3ub = "glColor3ub"(red : UInt8, green : UInt8, blue : UInt8) : Void
  fun color3ubv = "glColor3ubv"(v : UInt8*) : Void
  fun color3ui = "glColor3ui"(red : UInt32, green : UInt32, blue : UInt32) : Void
  fun color3uiv = "glColor3uiv"(v : UInt32*) : Void
  fun color3us = "glColor3us"(red : UInt16, green : UInt16, blue : UInt16) : Void
  fun color3usv = "glColor3usv"(v : UInt16*) : Void
  fun color3x_oes = "glColor3xOES"(red : Int32, green : Int32, blue : Int32) : Void
  fun color3xv_oes = "glColor3xvOES"(components : Int32*) : Void
  fun color4b = "glColor4b"(red : Int8, green : Int8, blue : Int8, alpha : Int8) : Void
  fun color4bv = "glColor4bv"(v : Int8*) : Void
  fun color4d = "glColor4d"(red : Float64, green : Float64, blue : Float64, alpha : Float64) : Void
  fun color4dv = "glColor4dv"(v : Float64*) : Void
  fun color4f = "glColor4f"(red : Float32, green : Float32, blue : Float32, alpha : Float32) : Void
  fun color4f_normal3f_vertex3f_sun = "glColor4fNormal3fVertex3fSUN"(r : Float32, g : Float32, b : Float32, a : Float32, nx : Float32, ny : Float32, nz : Float32, x : Float32, y : Float32, z : Float32) : Void
  fun color4f_normal3f_vertex3fv_sun = "glColor4fNormal3fVertex3fvSUN"(c : Float32*, n : Float32*, v : Float32*) : Void
  fun color4fv = "glColor4fv"(v : Float32*) : Void
  fun color4h_nv = "glColor4hNV"(red : UInt16, green : UInt16, blue : UInt16, alpha : UInt16) : Void
  fun color4hv_nv = "glColor4hvNV"(v : UInt16*) : Void
  fun color4i = "glColor4i"(red : Int32, green : Int32, blue : Int32, alpha : Int32) : Void
  fun color4iv = "glColor4iv"(v : Int32*) : Void
  fun color4s = "glColor4s"(red : Int16, green : Int16, blue : Int16, alpha : Int16) : Void
  fun color4sv = "glColor4sv"(v : Int16*) : Void
  fun color4ub = "glColor4ub"(red : UInt8, green : UInt8, blue : UInt8, alpha : UInt8) : Void
  fun color4ub_vertex2f_sun = "glColor4ubVertex2fSUN"(r : UInt8, g : UInt8, b : UInt8, a : UInt8, x : Float32, y : Float32) : Void
  fun color4ub_vertex2fv_sun = "glColor4ubVertex2fvSUN"(c : UInt8*, v : Float32*) : Void
  fun color4ub_vertex3f_sun = "glColor4ubVertex3fSUN"(r : UInt8, g : UInt8, b : UInt8, a : UInt8, x : Float32, y : Float32, z : Float32) : Void
  fun color4ub_vertex3fv_sun = "glColor4ubVertex3fvSUN"(c : UInt8*, v : Float32*) : Void
  fun color4ubv = "glColor4ubv"(v : UInt8*) : Void
  fun color4ui = "glColor4ui"(red : UInt32, green : UInt32, blue : UInt32, alpha : UInt32) : Void
  fun color4uiv = "glColor4uiv"(v : UInt32*) : Void
  fun color4us = "glColor4us"(red : UInt16, green : UInt16, blue : UInt16, alpha : UInt16) : Void
  fun color4usv = "glColor4usv"(v : UInt16*) : Void
  fun color4x = "glColor4x"(red : Int32, green : Int32, blue : Int32, alpha : Int32) : Void
  fun color4x_oes = "glColor4xOES"(red : Int32, green : Int32, blue : Int32, alpha : Int32) : Void
  fun color4xv_oes = "glColor4xvOES"(components : Int32*) : Void
  fun color_format_nv = "glColorFormatNV"(size : Int32, type : UInt32, stride : Int32) : Void
  fun color_fragment_op1ati = "glColorFragmentOp1ATI"(op : UInt32, dst : UInt32, dstMask : UInt32, dstMod : UInt32, arg1 : UInt32, arg1Rep : UInt32, arg1Mod : UInt32) : Void
  fun color_fragment_op2ati = "glColorFragmentOp2ATI"(op : UInt32, dst : UInt32, dstMask : UInt32, dstMod : UInt32, arg1 : UInt32, arg1Rep : UInt32, arg1Mod : UInt32, arg2 : UInt32, arg2Rep : UInt32, arg2Mod : UInt32) : Void
  fun color_fragment_op3ati = "glColorFragmentOp3ATI"(op : UInt32, dst : UInt32, dstMask : UInt32, dstMod : UInt32, arg1 : UInt32, arg1Rep : UInt32, arg1Mod : UInt32, arg2 : UInt32, arg2Rep : UInt32, arg2Mod : UInt32, arg3 : UInt32, arg3Rep : UInt32, arg3Mod : UInt32) : Void
  fun color_mask = "glColorMask"(red : UInt8, green : UInt8, blue : UInt8, alpha : UInt8) : Void
  fun color_mask_indexed_ext = "glColorMaskIndexedEXT"(index : UInt32, r : UInt8, g : UInt8, b : UInt8, a : UInt8) : Void
  fun color_maski = "glColorMaski"(index : UInt32, r : UInt8, g : UInt8, b : UInt8, a : UInt8) : Void
  fun color_maski_ext = "glColorMaskiEXT"(index : UInt32, r : UInt8, g : UInt8, b : UInt8, a : UInt8) : Void
  fun color_maski_oes = "glColorMaskiOES"(index : UInt32, r : UInt8, g : UInt8, b : UInt8, a : UInt8) : Void
  fun color_material = "glColorMaterial"(face : UInt32, mode : UInt32) : Void
  fun color_p3ui = "glColorP3ui"(type : UInt32, color : UInt32) : Void
  fun color_p3uiv = "glColorP3uiv"(type : UInt32, color : UInt32*) : Void
  fun color_p4ui = "glColorP4ui"(type : UInt32, color : UInt32) : Void
  fun color_p4uiv = "glColorP4uiv"(type : UInt32, color : UInt32*) : Void
  fun color_pointer = "glColorPointer"(size : Int32, type : UInt32, stride : Int32, pointer : Void*) : Void
  fun color_pointer_ext = "glColorPointerEXT"(size : Int32, type : UInt32, stride : Int32, count : Int32, pointer : Void*) : Void
  fun color_pointer_list_ibm = "glColorPointerListIBM"(size : Int32, type : UInt32, stride : Int32, pointer : Void*, ptrstride : Int32) : Void
  fun color_pointerv_intel = "glColorPointervINTEL"(size : Int32, type : UInt32, pointer : Void*) : Void
  fun color_sub_table = "glColorSubTable"(target : UInt32, start : Int32, count : Int32, format : UInt32, type : UInt32, data : Void*) : Void
  fun color_sub_table_ext = "glColorSubTableEXT"(target : UInt32, start : Int32, count : Int32, format : UInt32, type : UInt32, data : Void*) : Void
  fun color_table = "glColorTable"(target : UInt32, internalformat : UInt32, width : Int32, format : UInt32, type : UInt32, table : Void*) : Void
  fun color_table_ext = "glColorTableEXT"(target : UInt32, internalFormat : UInt32, width : Int32, format : UInt32, type : UInt32, table : Void*) : Void
  fun color_table_parameterfv = "glColorTableParameterfv"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun color_table_parameterfv_sgi = "glColorTableParameterfvSGI"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun color_table_parameteriv = "glColorTableParameteriv"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun color_table_parameteriv_sgi = "glColorTableParameterivSGI"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun color_table_sgi = "glColorTableSGI"(target : UInt32, internalformat : UInt32, width : Int32, format : UInt32, type : UInt32, table : Void*) : Void
  fun combiner_input_nv = "glCombinerInputNV"(stage : UInt32, portion : UInt32, variable : UInt32, input : UInt32, mapping : UInt32, componentUsage : UInt32) : Void
  fun combiner_output_nv = "glCombinerOutputNV"(stage : UInt32, portion : UInt32, abOutput : UInt32, cdOutput : UInt32, sumOutput : UInt32, scale : UInt32, bias : UInt32, abDotProduct : UInt8, cdDotProduct : UInt8, muxSum : UInt8) : Void
  fun combiner_parameterf_nv = "glCombinerParameterfNV"(pname : UInt32, param : Float32) : Void
  fun combiner_parameterfv_nv = "glCombinerParameterfvNV"(pname : UInt32, params : Float32*) : Void
  fun combiner_parameteri_nv = "glCombinerParameteriNV"(pname : UInt32, param : Int32) : Void
  fun combiner_parameteriv_nv = "glCombinerParameterivNV"(pname : UInt32, params : Int32*) : Void
  fun combiner_stage_parameterfv_nv = "glCombinerStageParameterfvNV"(stage : UInt32, pname : UInt32, params : Float32*) : Void
  fun command_list_segments_nv = "glCommandListSegmentsNV"(list : UInt32, segments : UInt32) : Void
  fun compile_command_list_nv = "glCompileCommandListNV"(list : UInt32) : Void
  fun compile_shader = "glCompileShader"(shader : UInt32) : Void
  fun compile_shader_arb = "glCompileShaderARB"(shaderObj : Void*) : Void
  fun compile_shader_include_arb = "glCompileShaderIncludeARB"(shader : UInt32, count : Int32, path : UInt8*, length : Int32*) : Void
  fun compressed_multi_tex_image1dext = "glCompressedMultiTexImage1DEXT"(texunit : UInt32, target : UInt32, level : Int32, internalformat : UInt32, width : Int32, border : Int32, imageSize : Int32, bits : Void*) : Void
  fun compressed_multi_tex_image2dext = "glCompressedMultiTexImage2DEXT"(texunit : UInt32, target : UInt32, level : Int32, internalformat : UInt32, width : Int32, height : Int32, border : Int32, imageSize : Int32, bits : Void*) : Void
  fun compressed_multi_tex_image3dext = "glCompressedMultiTexImage3DEXT"(texunit : UInt32, target : UInt32, level : Int32, internalformat : UInt32, width : Int32, height : Int32, depth : Int32, border : Int32, imageSize : Int32, bits : Void*) : Void
  fun compressed_multi_tex_sub_image1dext = "glCompressedMultiTexSubImage1DEXT"(texunit : UInt32, target : UInt32, level : Int32, xoffset : Int32, width : Int32, format : UInt32, imageSize : Int32, bits : Void*) : Void
  fun compressed_multi_tex_sub_image2dext = "glCompressedMultiTexSubImage2DEXT"(texunit : UInt32, target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, width : Int32, height : Int32, format : UInt32, imageSize : Int32, bits : Void*) : Void
  fun compressed_multi_tex_sub_image3dext = "glCompressedMultiTexSubImage3DEXT"(texunit : UInt32, target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, format : UInt32, imageSize : Int32, bits : Void*) : Void
  fun compressed_tex_image1d = "glCompressedTexImage1D"(target : UInt32, level : Int32, internalformat : UInt32, width : Int32, border : Int32, imageSize : Int32, data : Void*) : Void
  fun compressed_tex_image1darb = "glCompressedTexImage1DARB"(target : UInt32, level : Int32, internalformat : UInt32, width : Int32, border : Int32, imageSize : Int32, data : Void*) : Void
  fun compressed_tex_image2d = "glCompressedTexImage2D"(target : UInt32, level : Int32, internalformat : UInt32, width : Int32, height : Int32, border : Int32, imageSize : Int32, data : Void*) : Void
  fun compressed_tex_image2darb = "glCompressedTexImage2DARB"(target : UInt32, level : Int32, internalformat : UInt32, width : Int32, height : Int32, border : Int32, imageSize : Int32, data : Void*) : Void
  fun compressed_tex_image3d = "glCompressedTexImage3D"(target : UInt32, level : Int32, internalformat : UInt32, width : Int32, height : Int32, depth : Int32, border : Int32, imageSize : Int32, data : Void*) : Void
  fun compressed_tex_image3darb = "glCompressedTexImage3DARB"(target : UInt32, level : Int32, internalformat : UInt32, width : Int32, height : Int32, depth : Int32, border : Int32, imageSize : Int32, data : Void*) : Void
  fun compressed_tex_image3does = "glCompressedTexImage3DOES"(target : UInt32, level : Int32, internalformat : UInt32, width : Int32, height : Int32, depth : Int32, border : Int32, imageSize : Int32, data : Void*) : Void
  fun compressed_tex_sub_image1d = "glCompressedTexSubImage1D"(target : UInt32, level : Int32, xoffset : Int32, width : Int32, format : UInt32, imageSize : Int32, data : Void*) : Void
  fun compressed_tex_sub_image1darb = "glCompressedTexSubImage1DARB"(target : UInt32, level : Int32, xoffset : Int32, width : Int32, format : UInt32, imageSize : Int32, data : Void*) : Void
  fun compressed_tex_sub_image2d = "glCompressedTexSubImage2D"(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, width : Int32, height : Int32, format : UInt32, imageSize : Int32, data : Void*) : Void
  fun compressed_tex_sub_image2darb = "glCompressedTexSubImage2DARB"(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, width : Int32, height : Int32, format : UInt32, imageSize : Int32, data : Void*) : Void
  fun compressed_tex_sub_image3d = "glCompressedTexSubImage3D"(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, format : UInt32, imageSize : Int32, data : Void*) : Void
  fun compressed_tex_sub_image3darb = "glCompressedTexSubImage3DARB"(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, format : UInt32, imageSize : Int32, data : Void*) : Void
  fun compressed_tex_sub_image3does = "glCompressedTexSubImage3DOES"(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, format : UInt32, imageSize : Int32, data : Void*) : Void
  fun compressed_texture_image1dext = "glCompressedTextureImage1DEXT"(texture : UInt32, target : UInt32, level : Int32, internalformat : UInt32, width : Int32, border : Int32, imageSize : Int32, bits : Void*) : Void
  fun compressed_texture_image2dext = "glCompressedTextureImage2DEXT"(texture : UInt32, target : UInt32, level : Int32, internalformat : UInt32, width : Int32, height : Int32, border : Int32, imageSize : Int32, bits : Void*) : Void
  fun compressed_texture_image3dext = "glCompressedTextureImage3DEXT"(texture : UInt32, target : UInt32, level : Int32, internalformat : UInt32, width : Int32, height : Int32, depth : Int32, border : Int32, imageSize : Int32, bits : Void*) : Void
  fun compressed_texture_sub_image1d = "glCompressedTextureSubImage1D"(texture : UInt32, level : Int32, xoffset : Int32, width : Int32, format : UInt32, imageSize : Int32, data : Void*) : Void
  fun compressed_texture_sub_image1dext = "glCompressedTextureSubImage1DEXT"(texture : UInt32, target : UInt32, level : Int32, xoffset : Int32, width : Int32, format : UInt32, imageSize : Int32, bits : Void*) : Void
  fun compressed_texture_sub_image2d = "glCompressedTextureSubImage2D"(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, width : Int32, height : Int32, format : UInt32, imageSize : Int32, data : Void*) : Void
  fun compressed_texture_sub_image2dext = "glCompressedTextureSubImage2DEXT"(texture : UInt32, target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, width : Int32, height : Int32, format : UInt32, imageSize : Int32, bits : Void*) : Void
  fun compressed_texture_sub_image3d = "glCompressedTextureSubImage3D"(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, format : UInt32, imageSize : Int32, data : Void*) : Void
  fun compressed_texture_sub_image3dext = "glCompressedTextureSubImage3DEXT"(texture : UInt32, target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, format : UInt32, imageSize : Int32, bits : Void*) : Void
  fun conservative_raster_parameterf_nv = "glConservativeRasterParameterfNV"(pname : UInt32, value : Float32) : Void
  fun conservative_raster_parameteri_nv = "glConservativeRasterParameteriNV"(pname : UInt32, param : Int32) : Void
  fun convolution_filter1d = "glConvolutionFilter1D"(target : UInt32, internalformat : UInt32, width : Int32, format : UInt32, type : UInt32, image : Void*) : Void
  fun convolution_filter1dext = "glConvolutionFilter1DEXT"(target : UInt32, internalformat : UInt32, width : Int32, format : UInt32, type : UInt32, image : Void*) : Void
  fun convolution_filter2d = "glConvolutionFilter2D"(target : UInt32, internalformat : UInt32, width : Int32, height : Int32, format : UInt32, type : UInt32, image : Void*) : Void
  fun convolution_filter2dext = "glConvolutionFilter2DEXT"(target : UInt32, internalformat : UInt32, width : Int32, height : Int32, format : UInt32, type : UInt32, image : Void*) : Void
  fun convolution_parameterf = "glConvolutionParameterf"(target : UInt32, pname : UInt32, params : Float32) : Void
  fun convolution_parameterf_ext = "glConvolutionParameterfEXT"(target : UInt32, pname : UInt32, params : Float32) : Void
  fun convolution_parameterfv = "glConvolutionParameterfv"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun convolution_parameterfv_ext = "glConvolutionParameterfvEXT"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun convolution_parameteri = "glConvolutionParameteri"(target : UInt32, pname : UInt32, params : Int32) : Void
  fun convolution_parameteri_ext = "glConvolutionParameteriEXT"(target : UInt32, pname : UInt32, params : Int32) : Void
  fun convolution_parameteriv = "glConvolutionParameteriv"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun convolution_parameteriv_ext = "glConvolutionParameterivEXT"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun convolution_parameterx_oes = "glConvolutionParameterxOES"(target : UInt32, pname : UInt32, param : Int32) : Void
  fun convolution_parameterxv_oes = "glConvolutionParameterxvOES"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun copy_buffer_sub_data = "glCopyBufferSubData"(readTarget : UInt32, writeTarget : UInt32, readOffset : Int32, writeOffset : Int32, size : Int32) : Void
  fun copy_buffer_sub_data_nv = "glCopyBufferSubDataNV"(readTarget : UInt32, writeTarget : UInt32, readOffset : Int32, writeOffset : Int32, size : Int32) : Void
  fun copy_color_sub_table = "glCopyColorSubTable"(target : UInt32, start : Int32, x : Int32, y : Int32, width : Int32) : Void
  fun copy_color_sub_table_ext = "glCopyColorSubTableEXT"(target : UInt32, start : Int32, x : Int32, y : Int32, width : Int32) : Void
  fun copy_color_table = "glCopyColorTable"(target : UInt32, internalformat : UInt32, x : Int32, y : Int32, width : Int32) : Void
  fun copy_color_table_sgi = "glCopyColorTableSGI"(target : UInt32, internalformat : UInt32, x : Int32, y : Int32, width : Int32) : Void
  fun copy_convolution_filter1d = "glCopyConvolutionFilter1D"(target : UInt32, internalformat : UInt32, x : Int32, y : Int32, width : Int32) : Void
  fun copy_convolution_filter1dext = "glCopyConvolutionFilter1DEXT"(target : UInt32, internalformat : UInt32, x : Int32, y : Int32, width : Int32) : Void
  fun copy_convolution_filter2d = "glCopyConvolutionFilter2D"(target : UInt32, internalformat : UInt32, x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun copy_convolution_filter2dext = "glCopyConvolutionFilter2DEXT"(target : UInt32, internalformat : UInt32, x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun copy_image_sub_data = "glCopyImageSubData"(srcName : UInt32, srcTarget : UInt32, srcLevel : Int32, srcX : Int32, srcY : Int32, srcZ : Int32, dstName : UInt32, dstTarget : UInt32, dstLevel : Int32, dstX : Int32, dstY : Int32, dstZ : Int32, srcWidth : Int32, srcHeight : Int32, srcDepth : Int32) : Void
  fun copy_image_sub_data_ext = "glCopyImageSubDataEXT"(srcName : UInt32, srcTarget : UInt32, srcLevel : Int32, srcX : Int32, srcY : Int32, srcZ : Int32, dstName : UInt32, dstTarget : UInt32, dstLevel : Int32, dstX : Int32, dstY : Int32, dstZ : Int32, srcWidth : Int32, srcHeight : Int32, srcDepth : Int32) : Void
  fun copy_image_sub_data_nv = "glCopyImageSubDataNV"(srcName : UInt32, srcTarget : UInt32, srcLevel : Int32, srcX : Int32, srcY : Int32, srcZ : Int32, dstName : UInt32, dstTarget : UInt32, dstLevel : Int32, dstX : Int32, dstY : Int32, dstZ : Int32, width : Int32, height : Int32, depth : Int32) : Void
  fun copy_image_sub_data_oes = "glCopyImageSubDataOES"(srcName : UInt32, srcTarget : UInt32, srcLevel : Int32, srcX : Int32, srcY : Int32, srcZ : Int32, dstName : UInt32, dstTarget : UInt32, dstLevel : Int32, dstX : Int32, dstY : Int32, dstZ : Int32, srcWidth : Int32, srcHeight : Int32, srcDepth : Int32) : Void
  fun copy_multi_tex_image1dext = "glCopyMultiTexImage1DEXT"(texunit : UInt32, target : UInt32, level : Int32, internalformat : UInt32, x : Int32, y : Int32, width : Int32, border : Int32) : Void
  fun copy_multi_tex_image2dext = "glCopyMultiTexImage2DEXT"(texunit : UInt32, target : UInt32, level : Int32, internalformat : UInt32, x : Int32, y : Int32, width : Int32, height : Int32, border : Int32) : Void
  fun copy_multi_tex_sub_image1dext = "glCopyMultiTexSubImage1DEXT"(texunit : UInt32, target : UInt32, level : Int32, xoffset : Int32, x : Int32, y : Int32, width : Int32) : Void
  fun copy_multi_tex_sub_image2dext = "glCopyMultiTexSubImage2DEXT"(texunit : UInt32, target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun copy_multi_tex_sub_image3dext = "glCopyMultiTexSubImage3DEXT"(texunit : UInt32, target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun copy_named_buffer_sub_data = "glCopyNamedBufferSubData"(readBuffer : UInt32, writeBuffer : UInt32, readOffset : Int32, writeOffset : Int32, size : Int32) : Void
  fun copy_path_nv = "glCopyPathNV"(resultPath : UInt32, srcPath : UInt32) : Void
  fun copy_pixels = "glCopyPixels"(x : Int32, y : Int32, width : Int32, height : Int32, type : UInt32) : Void
  fun copy_tex_image1d = "glCopyTexImage1D"(target : UInt32, level : Int32, internalformat : UInt32, x : Int32, y : Int32, width : Int32, border : Int32) : Void
  fun copy_tex_image1dext = "glCopyTexImage1DEXT"(target : UInt32, level : Int32, internalformat : UInt32, x : Int32, y : Int32, width : Int32, border : Int32) : Void
  fun copy_tex_image2d = "glCopyTexImage2D"(target : UInt32, level : Int32, internalformat : UInt32, x : Int32, y : Int32, width : Int32, height : Int32, border : Int32) : Void
  fun copy_tex_image2dext = "glCopyTexImage2DEXT"(target : UInt32, level : Int32, internalformat : UInt32, x : Int32, y : Int32, width : Int32, height : Int32, border : Int32) : Void
  fun copy_tex_sub_image1d = "glCopyTexSubImage1D"(target : UInt32, level : Int32, xoffset : Int32, x : Int32, y : Int32, width : Int32) : Void
  fun copy_tex_sub_image1dext = "glCopyTexSubImage1DEXT"(target : UInt32, level : Int32, xoffset : Int32, x : Int32, y : Int32, width : Int32) : Void
  fun copy_tex_sub_image2d = "glCopyTexSubImage2D"(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun copy_tex_sub_image2dext = "glCopyTexSubImage2DEXT"(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun copy_tex_sub_image3d = "glCopyTexSubImage3D"(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun copy_tex_sub_image3dext = "glCopyTexSubImage3DEXT"(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun copy_tex_sub_image3does = "glCopyTexSubImage3DOES"(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun copy_texture_image1dext = "glCopyTextureImage1DEXT"(texture : UInt32, target : UInt32, level : Int32, internalformat : UInt32, x : Int32, y : Int32, width : Int32, border : Int32) : Void
  fun copy_texture_image2dext = "glCopyTextureImage2DEXT"(texture : UInt32, target : UInt32, level : Int32, internalformat : UInt32, x : Int32, y : Int32, width : Int32, height : Int32, border : Int32) : Void
  fun copy_texture_levels_apple = "glCopyTextureLevelsAPPLE"(destinationTexture : UInt32, sourceTexture : UInt32, sourceBaseLevel : Int32, sourceLevelCount : Int32) : Void
  fun copy_texture_sub_image1d = "glCopyTextureSubImage1D"(texture : UInt32, level : Int32, xoffset : Int32, x : Int32, y : Int32, width : Int32) : Void
  fun copy_texture_sub_image1dext = "glCopyTextureSubImage1DEXT"(texture : UInt32, target : UInt32, level : Int32, xoffset : Int32, x : Int32, y : Int32, width : Int32) : Void
  fun copy_texture_sub_image2d = "glCopyTextureSubImage2D"(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun copy_texture_sub_image2dext = "glCopyTextureSubImage2DEXT"(texture : UInt32, target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun copy_texture_sub_image3d = "glCopyTextureSubImage3D"(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun copy_texture_sub_image3dext = "glCopyTextureSubImage3DEXT"(texture : UInt32, target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun cover_fill_path_instanced_nv = "glCoverFillPathInstancedNV"(numPaths : Int32, pathNameType : UInt32, paths : Void*, pathBase : UInt32, coverMode : UInt32, transformType : UInt32, transformValues : Float32*) : Void
  fun cover_fill_path_nv = "glCoverFillPathNV"(path : UInt32, coverMode : UInt32) : Void
  fun cover_stroke_path_instanced_nv = "glCoverStrokePathInstancedNV"(numPaths : Int32, pathNameType : UInt32, paths : Void*, pathBase : UInt32, coverMode : UInt32, transformType : UInt32, transformValues : Float32*) : Void
  fun cover_stroke_path_nv = "glCoverStrokePathNV"(path : UInt32, coverMode : UInt32) : Void
  fun coverage_mask_nv = "glCoverageMaskNV"(mask : UInt8) : Void
  fun coverage_modulation_nv = "glCoverageModulationNV"(components : UInt32) : Void
  fun coverage_modulation_table_nv = "glCoverageModulationTableNV"(n : Int32, v : Float32*) : Void
  fun coverage_operation_nv = "glCoverageOperationNV"(operation : UInt32) : Void
  fun create_buffers = "glCreateBuffers"(n : Int32, buffers : UInt32*) : Void
  fun create_command_lists_nv = "glCreateCommandListsNV"(n : Int32, lists : UInt32*) : Void
  fun create_framebuffers = "glCreateFramebuffers"(n : Int32, framebuffers : UInt32*) : Void
  fun create_perf_query_intel = "glCreatePerfQueryINTEL"(queryId : UInt32, queryHandle : UInt32*) : Void
  fun create_program = "glCreateProgram" : UInt32
  fun create_program_object_arb = "glCreateProgramObjectARB" : Void*
  fun create_program_pipelines = "glCreateProgramPipelines"(n : Int32, pipelines : UInt32*) : Void
  fun create_queries = "glCreateQueries"(target : UInt32, n : Int32, ids : UInt32*) : Void
  fun create_renderbuffers = "glCreateRenderbuffers"(n : Int32, renderbuffers : UInt32*) : Void
  fun create_samplers = "glCreateSamplers"(n : Int32, samplers : UInt32*) : Void
  fun create_shader = "glCreateShader"(type : UInt32) : UInt32
  fun create_shader_object_arb = "glCreateShaderObjectARB"(shaderType : UInt32) : Void*
  fun create_shader_program_ext = "glCreateShaderProgramEXT"(type : UInt32, string : UInt8*) : UInt32
  fun create_shader_programv = "glCreateShaderProgramv"(type : UInt32, count : Int32, strings : UInt8*) : UInt32
  fun create_shader_programv_ext = "glCreateShaderProgramvEXT"(type : UInt32, count : Int32, strings : UInt8*) : UInt32
  fun create_states_nv = "glCreateStatesNV"(n : Int32, states : UInt32*) : Void
  fun create_sync_from_c_levent_arb = "glCreateSyncFromCLeventARB"(context : Void**, event : Void**, flags : UInt32) : Void*
  fun create_textures = "glCreateTextures"(target : UInt32, n : Int32, textures : UInt32*) : Void
  fun create_transform_feedbacks = "glCreateTransformFeedbacks"(n : Int32, ids : UInt32*) : Void
  fun create_vertex_arrays = "glCreateVertexArrays"(n : Int32, arrays : UInt32*) : Void
  fun cull_face = "glCullFace"(mode : UInt32) : Void
  fun cull_parameterdv_ext = "glCullParameterdvEXT"(pname : UInt32, params : Float64*) : Void
  fun cull_parameterfv_ext = "glCullParameterfvEXT"(pname : UInt32, params : Float32*) : Void
  fun current_palette_matrix_arb = "glCurrentPaletteMatrixARB"(index : Int32) : Void
  fun current_palette_matrix_oes = "glCurrentPaletteMatrixOES"(matrixpaletteindex : UInt32) : Void
  fun debug_message_callback = "glDebugMessageCallback"(callback : Void*, userParam : Void*) : Void
  fun debug_message_callback_amd = "glDebugMessageCallbackAMD"(callback : Void*, userParam : Void*) : Void
  fun debug_message_callback_arb = "glDebugMessageCallbackARB"(callback : Void*, userParam : Void*) : Void
  fun debug_message_callback_khr = "glDebugMessageCallbackKHR"(callback : Void*, userParam : Void*) : Void
  fun debug_message_control = "glDebugMessageControl"(source : UInt32, type : UInt32, severity : UInt32, count : Int32, ids : UInt32*, enabled : UInt8) : Void
  fun debug_message_control_arb = "glDebugMessageControlARB"(source : UInt32, type : UInt32, severity : UInt32, count : Int32, ids : UInt32*, enabled : UInt8) : Void
  fun debug_message_control_khr = "glDebugMessageControlKHR"(source : UInt32, type : UInt32, severity : UInt32, count : Int32, ids : UInt32*, enabled : UInt8) : Void
  fun debug_message_enable_amd = "glDebugMessageEnableAMD"(category : UInt32, severity : UInt32, count : Int32, ids : UInt32*, enabled : UInt8) : Void
  fun debug_message_insert = "glDebugMessageInsert"(source : UInt32, type : UInt32, id : UInt32, severity : UInt32, length : Int32, buf : UInt8*) : Void
  fun debug_message_insert_amd = "glDebugMessageInsertAMD"(category : UInt32, severity : UInt32, id : UInt32, length : Int32, buf : UInt8*) : Void
  fun debug_message_insert_arb = "glDebugMessageInsertARB"(source : UInt32, type : UInt32, id : UInt32, severity : UInt32, length : Int32, buf : UInt8*) : Void
  fun debug_message_insert_khr = "glDebugMessageInsertKHR"(source : UInt32, type : UInt32, id : UInt32, severity : UInt32, length : Int32, buf : UInt8*) : Void
  fun deform_sgix = "glDeformSGIX"(mask : UInt32) : Void
  fun deformation_map3d_sgix = "glDeformationMap3dSGIX"(target : UInt32, u1 : Float64, u2 : Float64, ustride : Int32, uorder : Int32, v1 : Float64, v2 : Float64, vstride : Int32, vorder : Int32, w1 : Float64, w2 : Float64, wstride : Int32, worder : Int32, points : Float64*) : Void
  fun deformation_map3f_sgix = "glDeformationMap3fSGIX"(target : UInt32, u1 : Float32, u2 : Float32, ustride : Int32, uorder : Int32, v1 : Float32, v2 : Float32, vstride : Int32, vorder : Int32, w1 : Float32, w2 : Float32, wstride : Int32, worder : Int32, points : Float32*) : Void
  fun delete_async_markers_sgix = "glDeleteAsyncMarkersSGIX"(marker : UInt32, range : Int32) : Void
  fun delete_buffers = "glDeleteBuffers"(n : Int32, buffers : UInt32*) : Void
  fun delete_buffers_arb = "glDeleteBuffersARB"(n : Int32, buffers : UInt32*) : Void
  fun delete_command_lists_nv = "glDeleteCommandListsNV"(n : Int32, lists : UInt32*) : Void
  fun delete_fences_apple = "glDeleteFencesAPPLE"(n : Int32, fences : UInt32*) : Void
  fun delete_fences_nv = "glDeleteFencesNV"(n : Int32, fences : UInt32*) : Void
  fun delete_fragment_shader_ati = "glDeleteFragmentShaderATI"(id : UInt32) : Void
  fun delete_framebuffers = "glDeleteFramebuffers"(n : Int32, framebuffers : UInt32*) : Void
  fun delete_framebuffers_ext = "glDeleteFramebuffersEXT"(n : Int32, framebuffers : UInt32*) : Void
  fun delete_framebuffers_oes = "glDeleteFramebuffersOES"(n : Int32, framebuffers : UInt32*) : Void
  fun delete_lists = "glDeleteLists"(list : UInt32, range : Int32) : Void
  fun delete_named_string_arb = "glDeleteNamedStringARB"(namelen : Int32, name : UInt8*) : Void
  fun delete_names_amd = "glDeleteNamesAMD"(identifier : UInt32, num : UInt32, names : UInt32*) : Void
  fun delete_object_arb = "glDeleteObjectARB"(obj : Void*) : Void
  fun delete_occlusion_queries_nv = "glDeleteOcclusionQueriesNV"(n : Int32, ids : UInt32*) : Void
  fun delete_paths_nv = "glDeletePathsNV"(path : UInt32, range : Int32) : Void
  fun delete_perf_monitors_amd = "glDeletePerfMonitorsAMD"(n : Int32, monitors : UInt32*) : Void
  fun delete_perf_query_intel = "glDeletePerfQueryINTEL"(queryHandle : UInt32) : Void
  fun delete_program = "glDeleteProgram"(program : UInt32) : Void
  fun delete_program_pipelines = "glDeleteProgramPipelines"(n : Int32, pipelines : UInt32*) : Void
  fun delete_program_pipelines_ext = "glDeleteProgramPipelinesEXT"(n : Int32, pipelines : UInt32*) : Void
  fun delete_programs_arb = "glDeleteProgramsARB"(n : Int32, programs : UInt32*) : Void
  fun delete_programs_nv = "glDeleteProgramsNV"(n : Int32, programs : UInt32*) : Void
  fun delete_queries = "glDeleteQueries"(n : Int32, ids : UInt32*) : Void
  fun delete_queries_arb = "glDeleteQueriesARB"(n : Int32, ids : UInt32*) : Void
  fun delete_queries_ext = "glDeleteQueriesEXT"(n : Int32, ids : UInt32*) : Void
  fun delete_renderbuffers = "glDeleteRenderbuffers"(n : Int32, renderbuffers : UInt32*) : Void
  fun delete_renderbuffers_ext = "glDeleteRenderbuffersEXT"(n : Int32, renderbuffers : UInt32*) : Void
  fun delete_renderbuffers_oes = "glDeleteRenderbuffersOES"(n : Int32, renderbuffers : UInt32*) : Void
  fun delete_samplers = "glDeleteSamplers"(count : Int32, samplers : UInt32*) : Void
  fun delete_shader = "glDeleteShader"(shader : UInt32) : Void
  fun delete_states_nv = "glDeleteStatesNV"(n : Int32, states : UInt32*) : Void
  fun delete_sync = "glDeleteSync"(sync : Void*) : Void
  fun delete_sync_apple = "glDeleteSyncAPPLE"(sync : Void*) : Void
  fun delete_textures = "glDeleteTextures"(n : Int32, textures : UInt32*) : Void
  fun delete_textures_ext = "glDeleteTexturesEXT"(n : Int32, textures : UInt32*) : Void
  fun delete_transform_feedbacks = "glDeleteTransformFeedbacks"(n : Int32, ids : UInt32*) : Void
  fun delete_transform_feedbacks_nv = "glDeleteTransformFeedbacksNV"(n : Int32, ids : UInt32*) : Void
  fun delete_vertex_arrays = "glDeleteVertexArrays"(n : Int32, arrays : UInt32*) : Void
  fun delete_vertex_arrays_apple = "glDeleteVertexArraysAPPLE"(n : Int32, arrays : UInt32*) : Void
  fun delete_vertex_arrays_oes = "glDeleteVertexArraysOES"(n : Int32, arrays : UInt32*) : Void
  fun delete_vertex_shader_ext = "glDeleteVertexShaderEXT"(id : UInt32) : Void
  fun depth_bounds_ext = "glDepthBoundsEXT"(zmin : Float64, zmax : Float64) : Void
  fun depth_boundsd_nv = "glDepthBoundsdNV"(zmin : Float64, zmax : Float64) : Void
  fun depth_func = "glDepthFunc"(func : UInt32) : Void
  fun depth_mask = "glDepthMask"(flag : UInt8) : Void
  fun depth_range = "glDepthRange"(near : Float64, far : Float64) : Void
  fun depth_range_arrayfv_nv = "glDepthRangeArrayfvNV"(first : UInt32, count : Int32, v : Float32*) : Void
  fun depth_range_arrayfv_oes = "glDepthRangeArrayfvOES"(first : UInt32, count : Int32, v : Float32*) : Void
  fun depth_range_arrayv = "glDepthRangeArrayv"(first : UInt32, count : Int32, v : Float64*) : Void
  fun depth_range_indexed = "glDepthRangeIndexed"(index : UInt32, n : Float64, f : Float64) : Void
  fun depth_range_indexedf_nv = "glDepthRangeIndexedfNV"(index : UInt32, n : Float32, f : Float32) : Void
  fun depth_range_indexedf_oes = "glDepthRangeIndexedfOES"(index : UInt32, n : Float32, f : Float32) : Void
  fun depth_ranged_nv = "glDepthRangedNV"(zNear : Float64, zFar : Float64) : Void
  fun depth_rangef = "glDepthRangef"(n : Float32, f : Float32) : Void
  fun depth_rangef_oes = "glDepthRangefOES"(n : Float32, f : Float32) : Void
  fun depth_rangex = "glDepthRangex"(n : Int32, f : Int32) : Void
  fun depth_rangex_oes = "glDepthRangexOES"(n : Int32, f : Int32) : Void
  fun detach_object_arb = "glDetachObjectARB"(containerObj : Void*, attachedObj : Void*) : Void
  fun detach_shader = "glDetachShader"(program : UInt32, shader : UInt32) : Void
  fun detail_tex_func_sgis = "glDetailTexFuncSGIS"(target : UInt32, n : Int32, points : Float32*) : Void
  fun disable = "glDisable"(cap : UInt32) : Void
  fun disable_client_state = "glDisableClientState"(array : UInt32) : Void
  fun disable_client_state_indexed_ext = "glDisableClientStateIndexedEXT"(array : UInt32, index : UInt32) : Void
  fun disable_client_statei_ext = "glDisableClientStateiEXT"(array : UInt32, index : UInt32) : Void
  fun disable_driver_control_qcom = "glDisableDriverControlQCOM"(driverControl : UInt32) : Void
  fun disable_indexed_ext = "glDisableIndexedEXT"(target : UInt32, index : UInt32) : Void
  fun disable_variant_client_state_ext = "glDisableVariantClientStateEXT"(id : UInt32) : Void
  fun disable_vertex_array_attrib = "glDisableVertexArrayAttrib"(vaobj : UInt32, index : UInt32) : Void
  fun disable_vertex_array_attrib_ext = "glDisableVertexArrayAttribEXT"(vaobj : UInt32, index : UInt32) : Void
  fun disable_vertex_array_ext = "glDisableVertexArrayEXT"(vaobj : UInt32, array : UInt32) : Void
  fun disable_vertex_attrib_apple = "glDisableVertexAttribAPPLE"(index : UInt32, pname : UInt32) : Void
  fun disable_vertex_attrib_array = "glDisableVertexAttribArray"(index : UInt32) : Void
  fun disable_vertex_attrib_array_arb = "glDisableVertexAttribArrayARB"(index : UInt32) : Void
  fun disablei = "glDisablei"(target : UInt32, index : UInt32) : Void
  fun disablei_ext = "glDisableiEXT"(target : UInt32, index : UInt32) : Void
  fun disablei_nv = "glDisableiNV"(target : UInt32, index : UInt32) : Void
  fun disablei_oes = "glDisableiOES"(target : UInt32, index : UInt32) : Void
  fun discard_framebuffer_ext = "glDiscardFramebufferEXT"(target : UInt32, numAttachments : Int32, attachments : UInt32*) : Void
  fun dispatch_compute = "glDispatchCompute"(num_groups_x : UInt32, num_groups_y : UInt32, num_groups_z : UInt32) : Void
  fun dispatch_compute_group_size_arb = "glDispatchComputeGroupSizeARB"(num_groups_x : UInt32, num_groups_y : UInt32, num_groups_z : UInt32, group_size_x : UInt32, group_size_y : UInt32, group_size_z : UInt32) : Void
  fun dispatch_compute_indirect = "glDispatchComputeIndirect"(indirect : Int32) : Void
  fun draw_arrays = "glDrawArrays"(mode : UInt32, first : Int32, count : Int32) : Void
  fun draw_arrays_ext = "glDrawArraysEXT"(mode : UInt32, first : Int32, count : Int32) : Void
  fun draw_arrays_indirect = "glDrawArraysIndirect"(mode : UInt32, indirect : Void*) : Void
  fun draw_arrays_instanced = "glDrawArraysInstanced"(mode : UInt32, first : Int32, count : Int32, instancecount : Int32) : Void
  fun draw_arrays_instanced_angle = "glDrawArraysInstancedANGLE"(mode : UInt32, first : Int32, count : Int32, primcount : Int32) : Void
  fun draw_arrays_instanced_arb = "glDrawArraysInstancedARB"(mode : UInt32, first : Int32, count : Int32, primcount : Int32) : Void
  fun draw_arrays_instanced_base_instance = "glDrawArraysInstancedBaseInstance"(mode : UInt32, first : Int32, count : Int32, instancecount : Int32, baseinstance : UInt32) : Void
  fun draw_arrays_instanced_base_instance_ext = "glDrawArraysInstancedBaseInstanceEXT"(mode : UInt32, first : Int32, count : Int32, instancecount : Int32, baseinstance : UInt32) : Void
  fun draw_arrays_instanced_ext = "glDrawArraysInstancedEXT"(mode : UInt32, start : Int32, count : Int32, primcount : Int32) : Void
  fun draw_arrays_instanced_nv = "glDrawArraysInstancedNV"(mode : UInt32, first : Int32, count : Int32, primcount : Int32) : Void
  fun draw_buffer = "glDrawBuffer"(buf : UInt32) : Void
  fun draw_buffers = "glDrawBuffers"(n : Int32, bufs : UInt32*) : Void
  fun draw_buffers_arb = "glDrawBuffersARB"(n : Int32, bufs : UInt32*) : Void
  fun draw_buffers_ati = "glDrawBuffersATI"(n : Int32, bufs : UInt32*) : Void
  fun draw_buffers_ext = "glDrawBuffersEXT"(n : Int32, bufs : UInt32*) : Void
  fun draw_buffers_indexed_ext = "glDrawBuffersIndexedEXT"(n : Int32, location : UInt32*, indices : Int32*) : Void
  fun draw_buffers_nv = "glDrawBuffersNV"(n : Int32, bufs : UInt32*) : Void
  fun draw_commands_address_nv = "glDrawCommandsAddressNV"(primitiveMode : UInt32, indirects : UInt64*, sizes : Int32*, count : UInt32) : Void
  fun draw_commands_nv = "glDrawCommandsNV"(primitiveMode : UInt32, buffer : UInt32, indirects : Int32*, sizes : Int32*, count : UInt32) : Void
  fun draw_commands_states_address_nv = "glDrawCommandsStatesAddressNV"(indirects : UInt64*, sizes : Int32*, states : UInt32*, fbos : UInt32*, count : UInt32) : Void
  fun draw_commands_states_nv = "glDrawCommandsStatesNV"(buffer : UInt32, indirects : Int32*, sizes : Int32*, states : UInt32*, fbos : UInt32*, count : UInt32) : Void
  fun draw_element_array_apple = "glDrawElementArrayAPPLE"(mode : UInt32, first : Int32, count : Int32) : Void
  fun draw_element_array_ati = "glDrawElementArrayATI"(mode : UInt32, count : Int32) : Void
  fun draw_elements = "glDrawElements"(mode : UInt32, count : Int32, type : UInt32, indices : Void*) : Void
  fun draw_elements_base_vertex = "glDrawElementsBaseVertex"(mode : UInt32, count : Int32, type : UInt32, indices : Void*, basevertex : Int32) : Void
  fun draw_elements_base_vertex_ext = "glDrawElementsBaseVertexEXT"(mode : UInt32, count : Int32, type : UInt32, indices : Void*, basevertex : Int32) : Void
  fun draw_elements_base_vertex_oes = "glDrawElementsBaseVertexOES"(mode : UInt32, count : Int32, type : UInt32, indices : Void*, basevertex : Int32) : Void
  fun draw_elements_indirect = "glDrawElementsIndirect"(mode : UInt32, type : UInt32, indirect : Void*) : Void
  fun draw_elements_instanced = "glDrawElementsInstanced"(mode : UInt32, count : Int32, type : UInt32, indices : Void*, instancecount : Int32) : Void
  fun draw_elements_instanced_angle = "glDrawElementsInstancedANGLE"(mode : UInt32, count : Int32, type : UInt32, indices : Void*, primcount : Int32) : Void
  fun draw_elements_instanced_arb = "glDrawElementsInstancedARB"(mode : UInt32, count : Int32, type : UInt32, indices : Void*, primcount : Int32) : Void
  fun draw_elements_instanced_base_instance = "glDrawElementsInstancedBaseInstance"(mode : UInt32, count : Int32, type : UInt32, indices : Void*, instancecount : Int32, baseinstance : UInt32) : Void
  fun draw_elements_instanced_base_instance_ext = "glDrawElementsInstancedBaseInstanceEXT"(mode : UInt32, count : Int32, type : UInt32, indices : Void*, instancecount : Int32, baseinstance : UInt32) : Void
  fun draw_elements_instanced_base_vertex = "glDrawElementsInstancedBaseVertex"(mode : UInt32, count : Int32, type : UInt32, indices : Void*, instancecount : Int32, basevertex : Int32) : Void
  fun draw_elements_instanced_base_vertex_base_instance = "glDrawElementsInstancedBaseVertexBaseInstance"(mode : UInt32, count : Int32, type : UInt32, indices : Void*, instancecount : Int32, basevertex : Int32, baseinstance : UInt32) : Void
  fun draw_elements_instanced_base_vertex_base_instance_ext = "glDrawElementsInstancedBaseVertexBaseInstanceEXT"(mode : UInt32, count : Int32, type : UInt32, indices : Void*, instancecount : Int32, basevertex : Int32, baseinstance : UInt32) : Void
  fun draw_elements_instanced_base_vertex_ext = "glDrawElementsInstancedBaseVertexEXT"(mode : UInt32, count : Int32, type : UInt32, indices : Void*, instancecount : Int32, basevertex : Int32) : Void
  fun draw_elements_instanced_base_vertex_oes = "glDrawElementsInstancedBaseVertexOES"(mode : UInt32, count : Int32, type : UInt32, indices : Void*, instancecount : Int32, basevertex : Int32) : Void
  fun draw_elements_instanced_ext = "glDrawElementsInstancedEXT"(mode : UInt32, count : Int32, type : UInt32, indices : Void*, primcount : Int32) : Void
  fun draw_elements_instanced_nv = "glDrawElementsInstancedNV"(mode : UInt32, count : Int32, type : UInt32, indices : Void*, primcount : Int32) : Void
  fun draw_mesh_arrays_sun = "glDrawMeshArraysSUN"(mode : UInt32, first : Int32, count : Int32, width : Int32) : Void
  fun draw_pixels = "glDrawPixels"(width : Int32, height : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun draw_range_element_array_apple = "glDrawRangeElementArrayAPPLE"(mode : UInt32, start : UInt32, end : UInt32, first : Int32, count : Int32) : Void
  fun draw_range_element_array_ati = "glDrawRangeElementArrayATI"(mode : UInt32, start : UInt32, end : UInt32, count : Int32) : Void
  fun draw_range_elements = "glDrawRangeElements"(mode : UInt32, start : UInt32, end : UInt32, count : Int32, type : UInt32, indices : Void*) : Void
  fun draw_range_elements_base_vertex = "glDrawRangeElementsBaseVertex"(mode : UInt32, start : UInt32, end : UInt32, count : Int32, type : UInt32, indices : Void*, basevertex : Int32) : Void
  fun draw_range_elements_base_vertex_ext = "glDrawRangeElementsBaseVertexEXT"(mode : UInt32, start : UInt32, end : UInt32, count : Int32, type : UInt32, indices : Void*, basevertex : Int32) : Void
  fun draw_range_elements_base_vertex_oes = "glDrawRangeElementsBaseVertexOES"(mode : UInt32, start : UInt32, end : UInt32, count : Int32, type : UInt32, indices : Void*, basevertex : Int32) : Void
  fun draw_range_elements_ext = "glDrawRangeElementsEXT"(mode : UInt32, start : UInt32, end : UInt32, count : Int32, type : UInt32, indices : Void*) : Void
  fun draw_texf_oes = "glDrawTexfOES"(x : Float32, y : Float32, z : Float32, width : Float32, height : Float32) : Void
  fun draw_texfv_oes = "glDrawTexfvOES"(coords : Float32*) : Void
  fun draw_texi_oes = "glDrawTexiOES"(x : Int32, y : Int32, z : Int32, width : Int32, height : Int32) : Void
  fun draw_texiv_oes = "glDrawTexivOES"(coords : Int32*) : Void
  fun draw_texs_oes = "glDrawTexsOES"(x : Int16, y : Int16, z : Int16, width : Int16, height : Int16) : Void
  fun draw_texsv_oes = "glDrawTexsvOES"(coords : Int16*) : Void
  fun draw_texture_nv = "glDrawTextureNV"(texture : UInt32, sampler : UInt32, x0 : Float32, y0 : Float32, x1 : Float32, y1 : Float32, z : Float32, s0 : Float32, t0 : Float32, s1 : Float32, t1 : Float32) : Void
  fun draw_texx_oes = "glDrawTexxOES"(x : Int32, y : Int32, z : Int32, width : Int32, height : Int32) : Void
  fun draw_texxv_oes = "glDrawTexxvOES"(coords : Int32*) : Void
  fun draw_transform_feedback = "glDrawTransformFeedback"(mode : UInt32, id : UInt32) : Void
  fun draw_transform_feedback_instanced = "glDrawTransformFeedbackInstanced"(mode : UInt32, id : UInt32, instancecount : Int32) : Void
  fun draw_transform_feedback_nv = "glDrawTransformFeedbackNV"(mode : UInt32, id : UInt32) : Void
  fun draw_transform_feedback_stream = "glDrawTransformFeedbackStream"(mode : UInt32, id : UInt32, stream : UInt32) : Void
  fun draw_transform_feedback_stream_instanced = "glDrawTransformFeedbackStreamInstanced"(mode : UInt32, id : UInt32, stream : UInt32, instancecount : Int32) : Void
  fun egl_image_target_renderbuffer_storage_oes = "glEGLImageTargetRenderbufferStorageOES"(target : UInt32, image : Void*) : Void
  fun egl_image_target_texture2does = "glEGLImageTargetTexture2DOES"(target : UInt32, image : Void*) : Void
  fun edge_flag = "glEdgeFlag"(flag : UInt8) : Void
  fun edge_flag_format_nv = "glEdgeFlagFormatNV"(stride : Int32) : Void
  fun edge_flag_pointer = "glEdgeFlagPointer"(stride : Int32, pointer : Void*) : Void
  fun edge_flag_pointer_ext = "glEdgeFlagPointerEXT"(stride : Int32, count : Int32, pointer : UInt8*) : Void
  fun edge_flag_pointer_list_ibm = "glEdgeFlagPointerListIBM"(stride : Int32, pointer : UInt8*, ptrstride : Int32) : Void
  fun edge_flagv = "glEdgeFlagv"(flag : UInt8*) : Void
  fun element_pointer_apple = "glElementPointerAPPLE"(type : UInt32, pointer : Void*) : Void
  fun element_pointer_ati = "glElementPointerATI"(type : UInt32, pointer : Void*) : Void
  fun enable = "glEnable"(cap : UInt32) : Void
  fun enable_client_state = "glEnableClientState"(array : UInt32) : Void
  fun enable_client_state_indexed_ext = "glEnableClientStateIndexedEXT"(array : UInt32, index : UInt32) : Void
  fun enable_client_statei_ext = "glEnableClientStateiEXT"(array : UInt32, index : UInt32) : Void
  fun enable_driver_control_qcom = "glEnableDriverControlQCOM"(driverControl : UInt32) : Void
  fun enable_indexed_ext = "glEnableIndexedEXT"(target : UInt32, index : UInt32) : Void
  fun enable_variant_client_state_ext = "glEnableVariantClientStateEXT"(id : UInt32) : Void
  fun enable_vertex_array_attrib = "glEnableVertexArrayAttrib"(vaobj : UInt32, index : UInt32) : Void
  fun enable_vertex_array_attrib_ext = "glEnableVertexArrayAttribEXT"(vaobj : UInt32, index : UInt32) : Void
  fun enable_vertex_array_ext = "glEnableVertexArrayEXT"(vaobj : UInt32, array : UInt32) : Void
  fun enable_vertex_attrib_apple = "glEnableVertexAttribAPPLE"(index : UInt32, pname : UInt32) : Void
  fun enable_vertex_attrib_array = "glEnableVertexAttribArray"(index : UInt32) : Void
  fun enable_vertex_attrib_array_arb = "glEnableVertexAttribArrayARB"(index : UInt32) : Void
  fun enablei = "glEnablei"(target : UInt32, index : UInt32) : Void
  fun enablei_ext = "glEnableiEXT"(target : UInt32, index : UInt32) : Void
  fun enablei_nv = "glEnableiNV"(target : UInt32, index : UInt32) : Void
  fun enablei_oes = "glEnableiOES"(target : UInt32, index : UInt32) : Void
  fun end = "glEnd" : Void
  fun end_conditional_render = "glEndConditionalRender" : Void
  fun end_conditional_render_nv = "glEndConditionalRenderNV" : Void
  fun end_conditional_render_nvx = "glEndConditionalRenderNVX" : Void
  fun end_fragment_shader_ati = "glEndFragmentShaderATI" : Void
  fun end_list = "glEndList" : Void
  fun end_occlusion_query_nv = "glEndOcclusionQueryNV" : Void
  fun end_perf_monitor_amd = "glEndPerfMonitorAMD"(monitor : UInt32) : Void
  fun end_perf_query_intel = "glEndPerfQueryINTEL"(queryHandle : UInt32) : Void
  fun end_query = "glEndQuery"(target : UInt32) : Void
  fun end_query_arb = "glEndQueryARB"(target : UInt32) : Void
  fun end_query_ext = "glEndQueryEXT"(target : UInt32) : Void
  fun end_query_indexed = "glEndQueryIndexed"(target : UInt32, index : UInt32) : Void
  fun end_tiling_qcom = "glEndTilingQCOM"(preserveMask : UInt32) : Void
  fun end_transform_feedback = "glEndTransformFeedback" : Void
  fun end_transform_feedback_ext = "glEndTransformFeedbackEXT" : Void
  fun end_transform_feedback_nv = "glEndTransformFeedbackNV" : Void
  fun end_vertex_shader_ext = "glEndVertexShaderEXT" : Void
  fun end_video_capture_nv = "glEndVideoCaptureNV"(video_capture_slot : UInt32) : Void
  fun eval_coord1d = "glEvalCoord1d"(u : Float64) : Void
  fun eval_coord1dv = "glEvalCoord1dv"(u : Float64*) : Void
  fun eval_coord1f = "glEvalCoord1f"(u : Float32) : Void
  fun eval_coord1fv = "glEvalCoord1fv"(u : Float32*) : Void
  fun eval_coord1x_oes = "glEvalCoord1xOES"(u : Int32) : Void
  fun eval_coord1xv_oes = "glEvalCoord1xvOES"(coords : Int32*) : Void
  fun eval_coord2d = "glEvalCoord2d"(u : Float64, v : Float64) : Void
  fun eval_coord2dv = "glEvalCoord2dv"(u : Float64*) : Void
  fun eval_coord2f = "glEvalCoord2f"(u : Float32, v : Float32) : Void
  fun eval_coord2fv = "glEvalCoord2fv"(u : Float32*) : Void
  fun eval_coord2x_oes = "glEvalCoord2xOES"(u : Int32, v : Int32) : Void
  fun eval_coord2xv_oes = "glEvalCoord2xvOES"(coords : Int32*) : Void
  fun eval_maps_nv = "glEvalMapsNV"(target : UInt32, mode : UInt32) : Void
  fun eval_mesh1 = "glEvalMesh1"(mode : UInt32, i1 : Int32, i2 : Int32) : Void
  fun eval_mesh2 = "glEvalMesh2"(mode : UInt32, i1 : Int32, i2 : Int32, j1 : Int32, j2 : Int32) : Void
  fun eval_point1 = "glEvalPoint1"(i : Int32) : Void
  fun eval_point2 = "glEvalPoint2"(i : Int32, j : Int32) : Void
  fun evaluate_depth_values_arb = "glEvaluateDepthValuesARB" : Void
  fun execute_program_nv = "glExecuteProgramNV"(target : UInt32, id : UInt32, params : Float32*) : Void
  fun ext_get_buffer_pointerv_qcom = "glExtGetBufferPointervQCOM"(target : UInt32, params : Void*) : Void
  fun ext_get_buffers_qcom = "glExtGetBuffersQCOM"(buffers : UInt32*, maxBuffers : Int32, numBuffers : Int32*) : Void
  fun ext_get_framebuffers_qcom = "glExtGetFramebuffersQCOM"(framebuffers : UInt32*, maxFramebuffers : Int32, numFramebuffers : Int32*) : Void
  fun ext_get_program_binary_source_qcom = "glExtGetProgramBinarySourceQCOM"(program : UInt32, shadertype : UInt32, source : UInt8*, length : Int32*) : Void
  fun ext_get_programs_qcom = "glExtGetProgramsQCOM"(programs : UInt32*, maxPrograms : Int32, numPrograms : Int32*) : Void
  fun ext_get_renderbuffers_qcom = "glExtGetRenderbuffersQCOM"(renderbuffers : UInt32*, maxRenderbuffers : Int32, numRenderbuffers : Int32*) : Void
  fun ext_get_shaders_qcom = "glExtGetShadersQCOM"(shaders : UInt32*, maxShaders : Int32, numShaders : Int32*) : Void
  fun ext_get_tex_level_parameteriv_qcom = "glExtGetTexLevelParameterivQCOM"(texture : UInt32, face : UInt32, level : Int32, pname : UInt32, params : Int32*) : Void
  fun ext_get_tex_sub_image_qcom = "glExtGetTexSubImageQCOM"(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, format : UInt32, type : UInt32, texels : Void*) : Void
  fun ext_get_textures_qcom = "glExtGetTexturesQCOM"(textures : UInt32*, maxTextures : Int32, numTextures : Int32*) : Void
  fun ext_is_program_binary_qcom = "glExtIsProgramBinaryQCOM"(program : UInt32) : UInt8
  fun ext_tex_object_state_overridei_qcom = "glExtTexObjectStateOverrideiQCOM"(target : UInt32, pname : UInt32, param : Int32) : Void
  fun extract_component_ext = "glExtractComponentEXT"(res : UInt32, src : UInt32, num : UInt32) : Void
  fun feedback_buffer = "glFeedbackBuffer"(size : Int32, type : UInt32, buffer : Float32*) : Void
  fun feedback_bufferx_oes = "glFeedbackBufferxOES"(n : Int32, type : UInt32, buffer : Int32*) : Void
  fun fence_sync = "glFenceSync"(condition : UInt32, flags : UInt32) : Void*
  fun fence_sync_apple = "glFenceSyncAPPLE"(condition : UInt32, flags : UInt32) : Void*
  fun final_combiner_input_nv = "glFinalCombinerInputNV"(variable : UInt32, input : UInt32, mapping : UInt32, componentUsage : UInt32) : Void
  fun finish = "glFinish" : Void
  fun finish_async_sgix = "glFinishAsyncSGIX"(markerp : UInt32*) : Int32
  fun finish_fence_apple = "glFinishFenceAPPLE"(fence : UInt32) : Void
  fun finish_fence_nv = "glFinishFenceNV"(fence : UInt32) : Void
  fun finish_object_apple = "glFinishObjectAPPLE"(object : UInt32, name : Int32) : Void
  fun finish_texture_sunx = "glFinishTextureSUNX" : Void
  fun flush = "glFlush" : Void
  fun flush_mapped_buffer_range = "glFlushMappedBufferRange"(target : UInt32, offset : Int32, length : Int32) : Void
  fun flush_mapped_buffer_range_apple = "glFlushMappedBufferRangeAPPLE"(target : UInt32, offset : Int32, size : Int32) : Void
  fun flush_mapped_buffer_range_ext = "glFlushMappedBufferRangeEXT"(target : UInt32, offset : Int32, length : Int32) : Void
  fun flush_mapped_named_buffer_range = "glFlushMappedNamedBufferRange"(buffer : UInt32, offset : Int32, length : Int32) : Void
  fun flush_mapped_named_buffer_range_ext = "glFlushMappedNamedBufferRangeEXT"(buffer : UInt32, offset : Int32, length : Int32) : Void
  fun flush_pixel_data_range_nv = "glFlushPixelDataRangeNV"(target : UInt32) : Void
  fun flush_raster_sgix = "glFlushRasterSGIX" : Void
  fun flush_static_data_ibm = "glFlushStaticDataIBM"(target : UInt32) : Void
  fun flush_vertex_array_range_apple = "glFlushVertexArrayRangeAPPLE"(length : Int32, pointer : Void*) : Void
  fun flush_vertex_array_range_nv = "glFlushVertexArrayRangeNV" : Void
  fun fog_coord_format_nv = "glFogCoordFormatNV"(type : UInt32, stride : Int32) : Void
  fun fog_coord_pointer = "glFogCoordPointer"(type : UInt32, stride : Int32, pointer : Void*) : Void
  fun fog_coord_pointer_ext = "glFogCoordPointerEXT"(type : UInt32, stride : Int32, pointer : Void*) : Void
  fun fog_coord_pointer_list_ibm = "glFogCoordPointerListIBM"(type : UInt32, stride : Int32, pointer : Void*, ptrstride : Int32) : Void
  fun fog_coordd = "glFogCoordd"(coord : Float64) : Void
  fun fog_coordd_ext = "glFogCoorddEXT"(coord : Float64) : Void
  fun fog_coorddv = "glFogCoorddv"(coord : Float64*) : Void
  fun fog_coorddv_ext = "glFogCoorddvEXT"(coord : Float64*) : Void
  fun fog_coordf = "glFogCoordf"(coord : Float32) : Void
  fun fog_coordf_ext = "glFogCoordfEXT"(coord : Float32) : Void
  fun fog_coordfv = "glFogCoordfv"(coord : Float32*) : Void
  fun fog_coordfv_ext = "glFogCoordfvEXT"(coord : Float32*) : Void
  fun fog_coordh_nv = "glFogCoordhNV"(fog : UInt16) : Void
  fun fog_coordhv_nv = "glFogCoordhvNV"(fog : UInt16*) : Void
  fun fog_func_sgis = "glFogFuncSGIS"(n : Int32, points : Float32*) : Void
  fun fogf = "glFogf"(pname : UInt32, param : Float32) : Void
  fun fogfv = "glFogfv"(pname : UInt32, params : Float32*) : Void
  fun fogi = "glFogi"(pname : UInt32, param : Int32) : Void
  fun fogiv = "glFogiv"(pname : UInt32, params : Int32*) : Void
  fun fogx = "glFogx"(pname : UInt32, param : Int32) : Void
  fun fogx_oes = "glFogxOES"(pname : UInt32, param : Int32) : Void
  fun fogxv = "glFogxv"(pname : UInt32, param : Int32*) : Void
  fun fogxv_oes = "glFogxvOES"(pname : UInt32, param : Int32*) : Void
  fun fragment_color_material_sgix = "glFragmentColorMaterialSGIX"(face : UInt32, mode : UInt32) : Void
  fun fragment_coverage_color_nv = "glFragmentCoverageColorNV"(color : UInt32) : Void
  fun fragment_light_modelf_sgix = "glFragmentLightModelfSGIX"(pname : UInt32, param : Float32) : Void
  fun fragment_light_modelfv_sgix = "glFragmentLightModelfvSGIX"(pname : UInt32, params : Float32*) : Void
  fun fragment_light_modeli_sgix = "glFragmentLightModeliSGIX"(pname : UInt32, param : Int32) : Void
  fun fragment_light_modeliv_sgix = "glFragmentLightModelivSGIX"(pname : UInt32, params : Int32*) : Void
  fun fragment_lightf_sgix = "glFragmentLightfSGIX"(light : UInt32, pname : UInt32, param : Float32) : Void
  fun fragment_lightfv_sgix = "glFragmentLightfvSGIX"(light : UInt32, pname : UInt32, params : Float32*) : Void
  fun fragment_lighti_sgix = "glFragmentLightiSGIX"(light : UInt32, pname : UInt32, param : Int32) : Void
  fun fragment_lightiv_sgix = "glFragmentLightivSGIX"(light : UInt32, pname : UInt32, params : Int32*) : Void
  fun fragment_materialf_sgix = "glFragmentMaterialfSGIX"(face : UInt32, pname : UInt32, param : Float32) : Void
  fun fragment_materialfv_sgix = "glFragmentMaterialfvSGIX"(face : UInt32, pname : UInt32, params : Float32*) : Void
  fun fragment_materiali_sgix = "glFragmentMaterialiSGIX"(face : UInt32, pname : UInt32, param : Int32) : Void
  fun fragment_materialiv_sgix = "glFragmentMaterialivSGIX"(face : UInt32, pname : UInt32, params : Int32*) : Void
  fun frame_terminator_gremedy = "glFrameTerminatorGREMEDY" : Void
  fun frame_zoom_sgix = "glFrameZoomSGIX"(factor : Int32) : Void
  fun framebuffer_draw_buffer_ext = "glFramebufferDrawBufferEXT"(framebuffer : UInt32, mode : UInt32) : Void
  fun framebuffer_draw_buffers_ext = "glFramebufferDrawBuffersEXT"(framebuffer : UInt32, n : Int32, bufs : UInt32*) : Void
  fun framebuffer_parameteri = "glFramebufferParameteri"(target : UInt32, pname : UInt32, param : Int32) : Void
  fun framebuffer_pixel_local_storage_size_ext = "glFramebufferPixelLocalStorageSizeEXT"(target : UInt32, size : Int32) : Void
  fun framebuffer_read_buffer_ext = "glFramebufferReadBufferEXT"(framebuffer : UInt32, mode : UInt32) : Void
  fun framebuffer_renderbuffer = "glFramebufferRenderbuffer"(target : UInt32, attachment : UInt32, renderbuffertarget : UInt32, renderbuffer : UInt32) : Void
  fun framebuffer_renderbuffer_ext = "glFramebufferRenderbufferEXT"(target : UInt32, attachment : UInt32, renderbuffertarget : UInt32, renderbuffer : UInt32) : Void
  fun framebuffer_renderbuffer_oes = "glFramebufferRenderbufferOES"(target : UInt32, attachment : UInt32, renderbuffertarget : UInt32, renderbuffer : UInt32) : Void
  fun framebuffer_sample_locationsfv_arb = "glFramebufferSampleLocationsfvARB"(target : UInt32, start : UInt32, count : Int32, v : Float32*) : Void
  fun framebuffer_sample_locationsfv_nv = "glFramebufferSampleLocationsfvNV"(target : UInt32, start : UInt32, count : Int32, v : Float32*) : Void
  fun framebuffer_texture = "glFramebufferTexture"(target : UInt32, attachment : UInt32, texture : UInt32, level : Int32) : Void
  fun framebuffer_texture1d = "glFramebufferTexture1D"(target : UInt32, attachment : UInt32, textarget : UInt32, texture : UInt32, level : Int32) : Void
  fun framebuffer_texture1dext = "glFramebufferTexture1DEXT"(target : UInt32, attachment : UInt32, textarget : UInt32, texture : UInt32, level : Int32) : Void
  fun framebuffer_texture2d = "glFramebufferTexture2D"(target : UInt32, attachment : UInt32, textarget : UInt32, texture : UInt32, level : Int32) : Void
  fun framebuffer_texture2dext = "glFramebufferTexture2DEXT"(target : UInt32, attachment : UInt32, textarget : UInt32, texture : UInt32, level : Int32) : Void
  fun framebuffer_texture2d_downsample_img = "glFramebufferTexture2DDownsampleIMG"(target : UInt32, attachment : UInt32, textarget : UInt32, texture : UInt32, level : Int32, xscale : Int32, yscale : Int32) : Void
  fun framebuffer_texture2d_multisample_ext = "glFramebufferTexture2DMultisampleEXT"(target : UInt32, attachment : UInt32, textarget : UInt32, texture : UInt32, level : Int32, samples : Int32) : Void
  fun framebuffer_texture2d_multisample_img = "glFramebufferTexture2DMultisampleIMG"(target : UInt32, attachment : UInt32, textarget : UInt32, texture : UInt32, level : Int32, samples : Int32) : Void
  fun framebuffer_texture2does = "glFramebufferTexture2DOES"(target : UInt32, attachment : UInt32, textarget : UInt32, texture : UInt32, level : Int32) : Void
  fun framebuffer_texture3d = "glFramebufferTexture3D"(target : UInt32, attachment : UInt32, textarget : UInt32, texture : UInt32, level : Int32, zoffset : Int32) : Void
  fun framebuffer_texture3dext = "glFramebufferTexture3DEXT"(target : UInt32, attachment : UInt32, textarget : UInt32, texture : UInt32, level : Int32, zoffset : Int32) : Void
  fun framebuffer_texture3does = "glFramebufferTexture3DOES"(target : UInt32, attachment : UInt32, textarget : UInt32, texture : UInt32, level : Int32, zoffset : Int32) : Void
  fun framebuffer_texture_arb = "glFramebufferTextureARB"(target : UInt32, attachment : UInt32, texture : UInt32, level : Int32) : Void
  fun framebuffer_texture_ext = "glFramebufferTextureEXT"(target : UInt32, attachment : UInt32, texture : UInt32, level : Int32) : Void
  fun framebuffer_texture_face_arb = "glFramebufferTextureFaceARB"(target : UInt32, attachment : UInt32, texture : UInt32, level : Int32, face : UInt32) : Void
  fun framebuffer_texture_face_ext = "glFramebufferTextureFaceEXT"(target : UInt32, attachment : UInt32, texture : UInt32, level : Int32, face : UInt32) : Void
  fun framebuffer_texture_layer = "glFramebufferTextureLayer"(target : UInt32, attachment : UInt32, texture : UInt32, level : Int32, layer : Int32) : Void
  fun framebuffer_texture_layer_arb = "glFramebufferTextureLayerARB"(target : UInt32, attachment : UInt32, texture : UInt32, level : Int32, layer : Int32) : Void
  fun framebuffer_texture_layer_ext = "glFramebufferTextureLayerEXT"(target : UInt32, attachment : UInt32, texture : UInt32, level : Int32, layer : Int32) : Void
  fun framebuffer_texture_layer_downsample_img = "glFramebufferTextureLayerDownsampleIMG"(target : UInt32, attachment : UInt32, texture : UInt32, level : Int32, layer : Int32, xscale : Int32, yscale : Int32) : Void
  fun framebuffer_texture_multisample_multiview_ovr = "glFramebufferTextureMultisampleMultiviewOVR"(target : UInt32, attachment : UInt32, texture : UInt32, level : Int32, samples : Int32, baseViewIndex : Int32, numViews : Int32) : Void
  fun framebuffer_texture_multiview_ovr = "glFramebufferTextureMultiviewOVR"(target : UInt32, attachment : UInt32, texture : UInt32, level : Int32, baseViewIndex : Int32, numViews : Int32) : Void
  fun framebuffer_texture_oes = "glFramebufferTextureOES"(target : UInt32, attachment : UInt32, texture : UInt32, level : Int32) : Void
  fun free_object_buffer_ati = "glFreeObjectBufferATI"(buffer : UInt32) : Void
  fun front_face = "glFrontFace"(mode : UInt32) : Void
  fun frustum = "glFrustum"(left : Float64, right : Float64, bottom : Float64, top : Float64, zNear : Float64, zFar : Float64) : Void
  fun frustumf = "glFrustumf"(l : Float32, r : Float32, b : Float32, t : Float32, n : Float32, f : Float32) : Void
  fun frustumf_oes = "glFrustumfOES"(l : Float32, r : Float32, b : Float32, t : Float32, n : Float32, f : Float32) : Void
  fun frustumx = "glFrustumx"(l : Int32, r : Int32, b : Int32, t : Int32, n : Int32, f : Int32) : Void
  fun frustumx_oes = "glFrustumxOES"(l : Int32, r : Int32, b : Int32, t : Int32, n : Int32, f : Int32) : Void
  fun gen_async_markers_sgix = "glGenAsyncMarkersSGIX"(range : Int32) : UInt32
  fun gen_buffers = "glGenBuffers"(n : Int32, buffers : UInt32*) : Void
  fun gen_buffers_arb = "glGenBuffersARB"(n : Int32, buffers : UInt32*) : Void
  fun gen_fences_apple = "glGenFencesAPPLE"(n : Int32, fences : UInt32*) : Void
  fun gen_fences_nv = "glGenFencesNV"(n : Int32, fences : UInt32*) : Void
  fun gen_fragment_shaders_ati = "glGenFragmentShadersATI"(range : UInt32) : UInt32
  fun gen_framebuffers = "glGenFramebuffers"(n : Int32, framebuffers : UInt32*) : Void
  fun gen_framebuffers_ext = "glGenFramebuffersEXT"(n : Int32, framebuffers : UInt32*) : Void
  fun gen_framebuffers_oes = "glGenFramebuffersOES"(n : Int32, framebuffers : UInt32*) : Void
  fun gen_lists = "glGenLists"(range : Int32) : UInt32
  fun gen_names_amd = "glGenNamesAMD"(identifier : UInt32, num : UInt32, names : UInt32*) : Void
  fun gen_occlusion_queries_nv = "glGenOcclusionQueriesNV"(n : Int32, ids : UInt32*) : Void
  fun gen_paths_nv = "glGenPathsNV"(range : Int32) : UInt32
  fun gen_perf_monitors_amd = "glGenPerfMonitorsAMD"(n : Int32, monitors : UInt32*) : Void
  fun gen_program_pipelines = "glGenProgramPipelines"(n : Int32, pipelines : UInt32*) : Void
  fun gen_program_pipelines_ext = "glGenProgramPipelinesEXT"(n : Int32, pipelines : UInt32*) : Void
  fun gen_programs_arb = "glGenProgramsARB"(n : Int32, programs : UInt32*) : Void
  fun gen_programs_nv = "glGenProgramsNV"(n : Int32, programs : UInt32*) : Void
  fun gen_queries = "glGenQueries"(n : Int32, ids : UInt32*) : Void
  fun gen_queries_arb = "glGenQueriesARB"(n : Int32, ids : UInt32*) : Void
  fun gen_queries_ext = "glGenQueriesEXT"(n : Int32, ids : UInt32*) : Void
  fun gen_renderbuffers = "glGenRenderbuffers"(n : Int32, renderbuffers : UInt32*) : Void
  fun gen_renderbuffers_ext = "glGenRenderbuffersEXT"(n : Int32, renderbuffers : UInt32*) : Void
  fun gen_renderbuffers_oes = "glGenRenderbuffersOES"(n : Int32, renderbuffers : UInt32*) : Void
  fun gen_samplers = "glGenSamplers"(count : Int32, samplers : UInt32*) : Void
  fun gen_symbols_ext = "glGenSymbolsEXT"(datatype : UInt32, storagetype : UInt32, range : UInt32, components : UInt32) : UInt32
  fun gen_textures = "glGenTextures"(n : Int32, textures : UInt32*) : Void
  fun gen_textures_ext = "glGenTexturesEXT"(n : Int32, textures : UInt32*) : Void
  fun gen_transform_feedbacks = "glGenTransformFeedbacks"(n : Int32, ids : UInt32*) : Void
  fun gen_transform_feedbacks_nv = "glGenTransformFeedbacksNV"(n : Int32, ids : UInt32*) : Void
  fun gen_vertex_arrays = "glGenVertexArrays"(n : Int32, arrays : UInt32*) : Void
  fun gen_vertex_arrays_apple = "glGenVertexArraysAPPLE"(n : Int32, arrays : UInt32*) : Void
  fun gen_vertex_arrays_oes = "glGenVertexArraysOES"(n : Int32, arrays : UInt32*) : Void
  fun gen_vertex_shaders_ext = "glGenVertexShadersEXT"(range : UInt32) : UInt32
  fun generate_mipmap = "glGenerateMipmap"(target : UInt32) : Void
  fun generate_mipmap_ext = "glGenerateMipmapEXT"(target : UInt32) : Void
  fun generate_mipmap_oes = "glGenerateMipmapOES"(target : UInt32) : Void
  fun generate_multi_tex_mipmap_ext = "glGenerateMultiTexMipmapEXT"(texunit : UInt32, target : UInt32) : Void
  fun generate_texture_mipmap = "glGenerateTextureMipmap"(texture : UInt32) : Void
  fun generate_texture_mipmap_ext = "glGenerateTextureMipmapEXT"(texture : UInt32, target : UInt32) : Void
  fun get_active_atomic_counter_bufferiv = "glGetActiveAtomicCounterBufferiv"(program : UInt32, bufferIndex : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_active_attrib = "glGetActiveAttrib"(program : UInt32, index : UInt32, bufSize : Int32, length : Int32*, size : Int32*, type : UInt32*, name : UInt8*) : Void
  fun get_active_attrib_arb = "glGetActiveAttribARB"(programObj : Void*, index : UInt32, maxLength : Int32, length : Int32*, size : Int32*, type : UInt32*, name : UInt8*) : Void
  fun get_active_subroutine_name = "glGetActiveSubroutineName"(program : UInt32, shadertype : UInt32, index : UInt32, bufsize : Int32, length : Int32*, name : UInt8*) : Void
  fun get_active_subroutine_uniform_name = "glGetActiveSubroutineUniformName"(program : UInt32, shadertype : UInt32, index : UInt32, bufsize : Int32, length : Int32*, name : UInt8*) : Void
  fun get_active_subroutine_uniformiv = "glGetActiveSubroutineUniformiv"(program : UInt32, shadertype : UInt32, index : UInt32, pname : UInt32, values : Int32*) : Void
  fun get_active_uniform = "glGetActiveUniform"(program : UInt32, index : UInt32, bufSize : Int32, length : Int32*, size : Int32*, type : UInt32*, name : UInt8*) : Void
  fun get_active_uniform_arb = "glGetActiveUniformARB"(programObj : Void*, index : UInt32, maxLength : Int32, length : Int32*, size : Int32*, type : UInt32*, name : UInt8*) : Void
  fun get_active_uniform_block_name = "glGetActiveUniformBlockName"(program : UInt32, uniformBlockIndex : UInt32, bufSize : Int32, length : Int32*, uniformBlockName : UInt8*) : Void
  fun get_active_uniform_blockiv = "glGetActiveUniformBlockiv"(program : UInt32, uniformBlockIndex : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_active_uniform_name = "glGetActiveUniformName"(program : UInt32, uniformIndex : UInt32, bufSize : Int32, length : Int32*, uniformName : UInt8*) : Void
  fun get_active_uniformsiv = "glGetActiveUniformsiv"(program : UInt32, uniformCount : Int32, uniformIndices : UInt32*, pname : UInt32, params : Int32*) : Void
  fun get_active_varying_nv = "glGetActiveVaryingNV"(program : UInt32, index : UInt32, bufSize : Int32, length : Int32*, size : Int32*, type : UInt32*, name : UInt8*) : Void
  fun get_array_objectfv_ati = "glGetArrayObjectfvATI"(array : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_array_objectiv_ati = "glGetArrayObjectivATI"(array : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_attached_objects_arb = "glGetAttachedObjectsARB"(containerObj : Void*, maxCount : Int32, count : Int32*, obj : Void**) : Void
  fun get_attached_shaders = "glGetAttachedShaders"(program : UInt32, maxCount : Int32, count : Int32*, shaders : UInt32*) : Void
  fun get_attrib_location = "glGetAttribLocation"(program : UInt32, name : UInt8*) : Int32
  fun get_attrib_location_arb = "glGetAttribLocationARB"(programObj : Void*, name : UInt8*) : Int32
  fun get_boolean_indexedv_ext = "glGetBooleanIndexedvEXT"(target : UInt32, index : UInt32, data : UInt8*) : Void
  fun get_booleani_v = "glGetBooleani_v"(target : UInt32, index : UInt32, data : UInt8*) : Void
  fun get_booleanv = "glGetBooleanv"(pname : UInt32, data : UInt8*) : Void
  fun get_buffer_parameteri64v = "glGetBufferParameteri64v"(target : UInt32, pname : UInt32, params : Int64*) : Void
  fun get_buffer_parameteriv = "glGetBufferParameteriv"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_buffer_parameteriv_arb = "glGetBufferParameterivARB"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_buffer_parameterui64v_nv = "glGetBufferParameterui64vNV"(target : UInt32, pname : UInt32, params : UInt64*) : Void
  fun get_buffer_pointerv = "glGetBufferPointerv"(target : UInt32, pname : UInt32, params : Void*) : Void
  fun get_buffer_pointerv_arb = "glGetBufferPointervARB"(target : UInt32, pname : UInt32, params : Void*) : Void
  fun get_buffer_pointerv_oes = "glGetBufferPointervOES"(target : UInt32, pname : UInt32, params : Void*) : Void
  fun get_buffer_sub_data = "glGetBufferSubData"(target : UInt32, offset : Int32, size : Int32, data : Void*) : Void
  fun get_buffer_sub_data_arb = "glGetBufferSubDataARB"(target : UInt32, offset : Int32, size : Int32, data : Void*) : Void
  fun get_clip_plane = "glGetClipPlane"(plane : UInt32, equation : Float64*) : Void
  fun get_clip_planef = "glGetClipPlanef"(plane : UInt32, equation : Float32*) : Void
  fun get_clip_planef_oes = "glGetClipPlanefOES"(plane : UInt32, equation : Float32*) : Void
  fun get_clip_planex = "glGetClipPlanex"(plane : UInt32, equation : Int32*) : Void
  fun get_clip_planex_oes = "glGetClipPlanexOES"(plane : UInt32, equation : Int32*) : Void
  fun get_color_table = "glGetColorTable"(target : UInt32, format : UInt32, type : UInt32, table : Void*) : Void
  fun get_color_table_ext = "glGetColorTableEXT"(target : UInt32, format : UInt32, type : UInt32, data : Void*) : Void
  fun get_color_table_parameterfv = "glGetColorTableParameterfv"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_color_table_parameterfv_ext = "glGetColorTableParameterfvEXT"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_color_table_parameterfv_sgi = "glGetColorTableParameterfvSGI"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_color_table_parameteriv = "glGetColorTableParameteriv"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_color_table_parameteriv_ext = "glGetColorTableParameterivEXT"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_color_table_parameteriv_sgi = "glGetColorTableParameterivSGI"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_color_table_sgi = "glGetColorTableSGI"(target : UInt32, format : UInt32, type : UInt32, table : Void*) : Void
  fun get_combiner_input_parameterfv_nv = "glGetCombinerInputParameterfvNV"(stage : UInt32, portion : UInt32, variable : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_combiner_input_parameteriv_nv = "glGetCombinerInputParameterivNV"(stage : UInt32, portion : UInt32, variable : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_combiner_output_parameterfv_nv = "glGetCombinerOutputParameterfvNV"(stage : UInt32, portion : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_combiner_output_parameteriv_nv = "glGetCombinerOutputParameterivNV"(stage : UInt32, portion : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_combiner_stage_parameterfv_nv = "glGetCombinerStageParameterfvNV"(stage : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_command_header_nv = "glGetCommandHeaderNV"(tokenID : UInt32, size : UInt32) : UInt32
  fun get_compressed_multi_tex_image_ext = "glGetCompressedMultiTexImageEXT"(texunit : UInt32, target : UInt32, lod : Int32, img : Void*) : Void
  fun get_compressed_tex_image = "glGetCompressedTexImage"(target : UInt32, level : Int32, img : Void*) : Void
  fun get_compressed_tex_image_arb = "glGetCompressedTexImageARB"(target : UInt32, level : Int32, img : Void*) : Void
  fun get_compressed_texture_image = "glGetCompressedTextureImage"(texture : UInt32, level : Int32, bufSize : Int32, pixels : Void*) : Void
  fun get_compressed_texture_image_ext = "glGetCompressedTextureImageEXT"(texture : UInt32, target : UInt32, lod : Int32, img : Void*) : Void
  fun get_compressed_texture_sub_image = "glGetCompressedTextureSubImage"(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, bufSize : Int32, pixels : Void*) : Void
  fun get_convolution_filter = "glGetConvolutionFilter"(target : UInt32, format : UInt32, type : UInt32, image : Void*) : Void
  fun get_convolution_filter_ext = "glGetConvolutionFilterEXT"(target : UInt32, format : UInt32, type : UInt32, image : Void*) : Void
  fun get_convolution_parameterfv = "glGetConvolutionParameterfv"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_convolution_parameterfv_ext = "glGetConvolutionParameterfvEXT"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_convolution_parameteriv = "glGetConvolutionParameteriv"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_convolution_parameteriv_ext = "glGetConvolutionParameterivEXT"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_convolution_parameterxv_oes = "glGetConvolutionParameterxvOES"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_coverage_modulation_table_nv = "glGetCoverageModulationTableNV"(bufsize : Int32, v : Float32*) : Void
  fun get_debug_message_log = "glGetDebugMessageLog"(count : UInt32, bufSize : Int32, sources : UInt32*, types : UInt32*, ids : UInt32*, severities : UInt32*, lengths : Int32*, messageLog : UInt8*) : UInt32
  fun get_debug_message_log_amd = "glGetDebugMessageLogAMD"(count : UInt32, bufsize : Int32, categories : UInt32*, severities : UInt32*, ids : UInt32*, lengths : Int32*, message : UInt8*) : UInt32
  fun get_debug_message_log_arb = "glGetDebugMessageLogARB"(count : UInt32, bufSize : Int32, sources : UInt32*, types : UInt32*, ids : UInt32*, severities : UInt32*, lengths : Int32*, messageLog : UInt8*) : UInt32
  fun get_debug_message_log_khr = "glGetDebugMessageLogKHR"(count : UInt32, bufSize : Int32, sources : UInt32*, types : UInt32*, ids : UInt32*, severities : UInt32*, lengths : Int32*, messageLog : UInt8*) : UInt32
  fun get_detail_tex_func_sgis = "glGetDetailTexFuncSGIS"(target : UInt32, points : Float32*) : Void
  fun get_double_indexedv_ext = "glGetDoubleIndexedvEXT"(target : UInt32, index : UInt32, data : Float64*) : Void
  fun get_doublei_v = "glGetDoublei_v"(target : UInt32, index : UInt32, data : Float64*) : Void
  fun get_doublei_v_ext = "glGetDoublei_vEXT"(pname : UInt32, index : UInt32, params : Float64*) : Void
  fun get_doublev = "glGetDoublev"(pname : UInt32, data : Float64*) : Void
  fun get_driver_control_string_qcom = "glGetDriverControlStringQCOM"(driverControl : UInt32, bufSize : Int32, length : Int32*, driverControlString : UInt8*) : Void
  fun get_driver_controls_qcom = "glGetDriverControlsQCOM"(num : Int32*, size : Int32, driverControls : UInt32*) : Void
  fun get_error = "glGetError" : UInt32
  fun get_fenceiv_nv = "glGetFenceivNV"(fence : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_final_combiner_input_parameterfv_nv = "glGetFinalCombinerInputParameterfvNV"(variable : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_final_combiner_input_parameteriv_nv = "glGetFinalCombinerInputParameterivNV"(variable : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_first_perf_query_id_intel = "glGetFirstPerfQueryIdINTEL"(queryId : UInt32*) : Void
  fun get_fixedv = "glGetFixedv"(pname : UInt32, params : Int32*) : Void
  fun get_fixedv_oes = "glGetFixedvOES"(pname : UInt32, params : Int32*) : Void
  fun get_float_indexedv_ext = "glGetFloatIndexedvEXT"(target : UInt32, index : UInt32, data : Float32*) : Void
  fun get_floati_v = "glGetFloati_v"(target : UInt32, index : UInt32, data : Float32*) : Void
  fun get_floati_v_ext = "glGetFloati_vEXT"(pname : UInt32, index : UInt32, params : Float32*) : Void
  fun get_floati_v_nv = "glGetFloati_vNV"(target : UInt32, index : UInt32, data : Float32*) : Void
  fun get_floati_v_oes = "glGetFloati_vOES"(target : UInt32, index : UInt32, data : Float32*) : Void
  fun get_floatv = "glGetFloatv"(pname : UInt32, data : Float32*) : Void
  fun get_fog_func_sgis = "glGetFogFuncSGIS"(points : Float32*) : Void
  fun get_frag_data_index = "glGetFragDataIndex"(program : UInt32, name : UInt8*) : Int32
  fun get_frag_data_index_ext = "glGetFragDataIndexEXT"(program : UInt32, name : UInt8*) : Int32
  fun get_frag_data_location = "glGetFragDataLocation"(program : UInt32, name : UInt8*) : Int32
  fun get_frag_data_location_ext = "glGetFragDataLocationEXT"(program : UInt32, name : UInt8*) : Int32
  fun get_fragment_lightfv_sgix = "glGetFragmentLightfvSGIX"(light : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_fragment_lightiv_sgix = "glGetFragmentLightivSGIX"(light : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_fragment_materialfv_sgix = "glGetFragmentMaterialfvSGIX"(face : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_fragment_materialiv_sgix = "glGetFragmentMaterialivSGIX"(face : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_framebuffer_attachment_parameteriv = "glGetFramebufferAttachmentParameteriv"(target : UInt32, attachment : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_framebuffer_attachment_parameteriv_ext = "glGetFramebufferAttachmentParameterivEXT"(target : UInt32, attachment : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_framebuffer_attachment_parameteriv_oes = "glGetFramebufferAttachmentParameterivOES"(target : UInt32, attachment : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_framebuffer_parameteriv = "glGetFramebufferParameteriv"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_framebuffer_parameteriv_ext = "glGetFramebufferParameterivEXT"(framebuffer : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_framebuffer_pixel_local_storage_size_ext = "glGetFramebufferPixelLocalStorageSizeEXT"(target : UInt32) : Int32
  fun get_graphics_reset_status = "glGetGraphicsResetStatus" : UInt32
  fun get_graphics_reset_status_arb = "glGetGraphicsResetStatusARB" : UInt32
  fun get_graphics_reset_status_ext = "glGetGraphicsResetStatusEXT" : UInt32
  fun get_graphics_reset_status_khr = "glGetGraphicsResetStatusKHR" : UInt32
  fun get_handle_arb = "glGetHandleARB"(pname : UInt32) : Void*
  fun get_histogram = "glGetHistogram"(target : UInt32, reset : UInt8, format : UInt32, type : UInt32, values : Void*) : Void
  fun get_histogram_ext = "glGetHistogramEXT"(target : UInt32, reset : UInt8, format : UInt32, type : UInt32, values : Void*) : Void
  fun get_histogram_parameterfv = "glGetHistogramParameterfv"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_histogram_parameterfv_ext = "glGetHistogramParameterfvEXT"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_histogram_parameteriv = "glGetHistogramParameteriv"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_histogram_parameteriv_ext = "glGetHistogramParameterivEXT"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_histogram_parameterxv_oes = "glGetHistogramParameterxvOES"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_image_handle_arb = "glGetImageHandleARB"(texture : UInt32, level : Int32, layered : UInt8, layer : Int32, format : UInt32) : UInt64
  fun get_image_handle_nv = "glGetImageHandleNV"(texture : UInt32, level : Int32, layered : UInt8, layer : Int32, format : UInt32) : UInt64
  fun get_image_transform_parameterfv_hp = "glGetImageTransformParameterfvHP"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_image_transform_parameteriv_hp = "glGetImageTransformParameterivHP"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_info_log_arb = "glGetInfoLogARB"(obj : Void*, maxLength : Int32, length : Int32*, infoLog : UInt8*) : Void
  fun get_instruments_sgix = "glGetInstrumentsSGIX" : Int32
  fun get_integer64i_v = "glGetInteger64i_v"(target : UInt32, index : UInt32, data : Int64*) : Void
  fun get_integer64v = "glGetInteger64v"(pname : UInt32, data : Int64*) : Void
  fun get_integer64v_apple = "glGetInteger64vAPPLE"(pname : UInt32, params : Int64*) : Void
  fun get_integer_indexedv_ext = "glGetIntegerIndexedvEXT"(target : UInt32, index : UInt32, data : Int32*) : Void
  fun get_integeri_v = "glGetIntegeri_v"(target : UInt32, index : UInt32, data : Int32*) : Void
  fun get_integeri_v_ext = "glGetIntegeri_vEXT"(target : UInt32, index : UInt32, data : Int32*) : Void
  fun get_integerui64i_v_nv = "glGetIntegerui64i_vNV"(value : UInt32, index : UInt32, result : UInt64*) : Void
  fun get_integerui64v_nv = "glGetIntegerui64vNV"(value : UInt32, result : UInt64*) : Void
  fun get_integerv = "glGetIntegerv"(pname : UInt32, data : Int32*) : Void
  fun get_internalformat_sampleiv_nv = "glGetInternalformatSampleivNV"(target : UInt32, internalformat : UInt32, samples : Int32, pname : UInt32, bufSize : Int32, params : Int32*) : Void
  fun get_internalformati64v = "glGetInternalformati64v"(target : UInt32, internalformat : UInt32, pname : UInt32, bufSize : Int32, params : Int64*) : Void
  fun get_internalformativ = "glGetInternalformativ"(target : UInt32, internalformat : UInt32, pname : UInt32, bufSize : Int32, params : Int32*) : Void
  fun get_invariant_booleanv_ext = "glGetInvariantBooleanvEXT"(id : UInt32, value : UInt32, data : UInt8*) : Void
  fun get_invariant_floatv_ext = "glGetInvariantFloatvEXT"(id : UInt32, value : UInt32, data : Float32*) : Void
  fun get_invariant_integerv_ext = "glGetInvariantIntegervEXT"(id : UInt32, value : UInt32, data : Int32*) : Void
  fun get_lightfv = "glGetLightfv"(light : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_lightiv = "glGetLightiv"(light : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_lightx_oes = "glGetLightxOES"(light : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_lightxv = "glGetLightxv"(light : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_lightxv_oes = "glGetLightxvOES"(light : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_list_parameterfv_sgix = "glGetListParameterfvSGIX"(list : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_list_parameteriv_sgix = "glGetListParameterivSGIX"(list : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_local_constant_booleanv_ext = "glGetLocalConstantBooleanvEXT"(id : UInt32, value : UInt32, data : UInt8*) : Void
  fun get_local_constant_floatv_ext = "glGetLocalConstantFloatvEXT"(id : UInt32, value : UInt32, data : Float32*) : Void
  fun get_local_constant_integerv_ext = "glGetLocalConstantIntegervEXT"(id : UInt32, value : UInt32, data : Int32*) : Void
  fun get_map_attrib_parameterfv_nv = "glGetMapAttribParameterfvNV"(target : UInt32, index : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_map_attrib_parameteriv_nv = "glGetMapAttribParameterivNV"(target : UInt32, index : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_map_control_points_nv = "glGetMapControlPointsNV"(target : UInt32, index : UInt32, type : UInt32, ustride : Int32, vstride : Int32, packed : UInt8, points : Void*) : Void
  fun get_map_parameterfv_nv = "glGetMapParameterfvNV"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_map_parameteriv_nv = "glGetMapParameterivNV"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_mapdv = "glGetMapdv"(target : UInt32, query : UInt32, v : Float64*) : Void
  fun get_mapfv = "glGetMapfv"(target : UInt32, query : UInt32, v : Float32*) : Void
  fun get_mapiv = "glGetMapiv"(target : UInt32, query : UInt32, v : Int32*) : Void
  fun get_mapxv_oes = "glGetMapxvOES"(target : UInt32, query : UInt32, v : Int32*) : Void
  fun get_materialfv = "glGetMaterialfv"(face : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_materialiv = "glGetMaterialiv"(face : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_materialx_oes = "glGetMaterialxOES"(face : UInt32, pname : UInt32, param : Int32) : Void
  fun get_materialxv = "glGetMaterialxv"(face : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_materialxv_oes = "glGetMaterialxvOES"(face : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_minmax = "glGetMinmax"(target : UInt32, reset : UInt8, format : UInt32, type : UInt32, values : Void*) : Void
  fun get_minmax_ext = "glGetMinmaxEXT"(target : UInt32, reset : UInt8, format : UInt32, type : UInt32, values : Void*) : Void
  fun get_minmax_parameterfv = "glGetMinmaxParameterfv"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_minmax_parameterfv_ext = "glGetMinmaxParameterfvEXT"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_minmax_parameteriv = "glGetMinmaxParameteriv"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_minmax_parameteriv_ext = "glGetMinmaxParameterivEXT"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_multi_tex_envfv_ext = "glGetMultiTexEnvfvEXT"(texunit : UInt32, target : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_multi_tex_enviv_ext = "glGetMultiTexEnvivEXT"(texunit : UInt32, target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_multi_tex_gendv_ext = "glGetMultiTexGendvEXT"(texunit : UInt32, coord : UInt32, pname : UInt32, params : Float64*) : Void
  fun get_multi_tex_genfv_ext = "glGetMultiTexGenfvEXT"(texunit : UInt32, coord : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_multi_tex_geniv_ext = "glGetMultiTexGenivEXT"(texunit : UInt32, coord : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_multi_tex_image_ext = "glGetMultiTexImageEXT"(texunit : UInt32, target : UInt32, level : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun get_multi_tex_level_parameterfv_ext = "glGetMultiTexLevelParameterfvEXT"(texunit : UInt32, target : UInt32, level : Int32, pname : UInt32, params : Float32*) : Void
  fun get_multi_tex_level_parameteriv_ext = "glGetMultiTexLevelParameterivEXT"(texunit : UInt32, target : UInt32, level : Int32, pname : UInt32, params : Int32*) : Void
  fun get_multi_tex_parameter_iiv_ext = "glGetMultiTexParameterIivEXT"(texunit : UInt32, target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_multi_tex_parameter_iuiv_ext = "glGetMultiTexParameterIuivEXT"(texunit : UInt32, target : UInt32, pname : UInt32, params : UInt32*) : Void
  fun get_multi_tex_parameterfv_ext = "glGetMultiTexParameterfvEXT"(texunit : UInt32, target : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_multi_tex_parameteriv_ext = "glGetMultiTexParameterivEXT"(texunit : UInt32, target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_multisamplefv = "glGetMultisamplefv"(pname : UInt32, index : UInt32, val : Float32*) : Void
  fun get_multisamplefv_nv = "glGetMultisamplefvNV"(pname : UInt32, index : UInt32, val : Float32*) : Void
  fun get_named_buffer_parameteri64v = "glGetNamedBufferParameteri64v"(buffer : UInt32, pname : UInt32, params : Int64*) : Void
  fun get_named_buffer_parameteriv = "glGetNamedBufferParameteriv"(buffer : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_named_buffer_parameteriv_ext = "glGetNamedBufferParameterivEXT"(buffer : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_named_buffer_parameterui64v_nv = "glGetNamedBufferParameterui64vNV"(buffer : UInt32, pname : UInt32, params : UInt64*) : Void
  fun get_named_buffer_pointerv = "glGetNamedBufferPointerv"(buffer : UInt32, pname : UInt32, params : Void*) : Void
  fun get_named_buffer_pointerv_ext = "glGetNamedBufferPointervEXT"(buffer : UInt32, pname : UInt32, params : Void*) : Void
  fun get_named_buffer_sub_data = "glGetNamedBufferSubData"(buffer : UInt32, offset : Int32, size : Int32, data : Void*) : Void
  fun get_named_buffer_sub_data_ext = "glGetNamedBufferSubDataEXT"(buffer : UInt32, offset : Int32, size : Int32, data : Void*) : Void
  fun get_named_framebuffer_attachment_parameteriv = "glGetNamedFramebufferAttachmentParameteriv"(framebuffer : UInt32, attachment : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_named_framebuffer_attachment_parameteriv_ext = "glGetNamedFramebufferAttachmentParameterivEXT"(framebuffer : UInt32, attachment : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_named_framebuffer_parameteriv = "glGetNamedFramebufferParameteriv"(framebuffer : UInt32, pname : UInt32, param : Int32*) : Void
  fun get_named_framebuffer_parameteriv_ext = "glGetNamedFramebufferParameterivEXT"(framebuffer : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_named_program_local_parameter_iiv_ext = "glGetNamedProgramLocalParameterIivEXT"(program : UInt32, target : UInt32, index : UInt32, params : Int32*) : Void
  fun get_named_program_local_parameter_iuiv_ext = "glGetNamedProgramLocalParameterIuivEXT"(program : UInt32, target : UInt32, index : UInt32, params : UInt32*) : Void
  fun get_named_program_local_parameterdv_ext = "glGetNamedProgramLocalParameterdvEXT"(program : UInt32, target : UInt32, index : UInt32, params : Float64*) : Void
  fun get_named_program_local_parameterfv_ext = "glGetNamedProgramLocalParameterfvEXT"(program : UInt32, target : UInt32, index : UInt32, params : Float32*) : Void
  fun get_named_program_string_ext = "glGetNamedProgramStringEXT"(program : UInt32, target : UInt32, pname : UInt32, string : Void*) : Void
  fun get_named_programiv_ext = "glGetNamedProgramivEXT"(program : UInt32, target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_named_renderbuffer_parameteriv = "glGetNamedRenderbufferParameteriv"(renderbuffer : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_named_renderbuffer_parameteriv_ext = "glGetNamedRenderbufferParameterivEXT"(renderbuffer : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_named_string_arb = "glGetNamedStringARB"(namelen : Int32, name : UInt8*, bufSize : Int32, stringlen : Int32*, string : UInt8*) : Void
  fun get_named_stringiv_arb = "glGetNamedStringivARB"(namelen : Int32, name : UInt8*, pname : UInt32, params : Int32*) : Void
  fun get_next_perf_query_id_intel = "glGetNextPerfQueryIdINTEL"(queryId : UInt32, nextQueryId : UInt32*) : Void
  fun get_object_bufferfv_ati = "glGetObjectBufferfvATI"(buffer : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_object_bufferiv_ati = "glGetObjectBufferivATI"(buffer : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_object_label = "glGetObjectLabel"(identifier : UInt32, name : UInt32, bufSize : Int32, length : Int32*, label : UInt8*) : Void
  fun get_object_label_ext = "glGetObjectLabelEXT"(type : UInt32, object : UInt32, bufSize : Int32, length : Int32*, label : UInt8*) : Void
  fun get_object_label_khr = "glGetObjectLabelKHR"(identifier : UInt32, name : UInt32, bufSize : Int32, length : Int32*, label : UInt8*) : Void
  fun get_object_parameterfv_arb = "glGetObjectParameterfvARB"(obj : Void*, pname : UInt32, params : Float32*) : Void
  fun get_object_parameteriv_apple = "glGetObjectParameterivAPPLE"(objectType : UInt32, name : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_object_parameteriv_arb = "glGetObjectParameterivARB"(obj : Void*, pname : UInt32, params : Int32*) : Void
  fun get_object_ptr_label = "glGetObjectPtrLabel"(ptr : Void*, bufSize : Int32, length : Int32*, label : UInt8*) : Void
  fun get_object_ptr_label_khr = "glGetObjectPtrLabelKHR"(ptr : Void*, bufSize : Int32, length : Int32*, label : UInt8*) : Void
  fun get_occlusion_queryiv_nv = "glGetOcclusionQueryivNV"(id : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_occlusion_queryuiv_nv = "glGetOcclusionQueryuivNV"(id : UInt32, pname : UInt32, params : UInt32*) : Void
  fun get_path_color_genfv_nv = "glGetPathColorGenfvNV"(color : UInt32, pname : UInt32, value : Float32*) : Void
  fun get_path_color_geniv_nv = "glGetPathColorGenivNV"(color : UInt32, pname : UInt32, value : Int32*) : Void
  fun get_path_commands_nv = "glGetPathCommandsNV"(path : UInt32, commands : UInt8*) : Void
  fun get_path_coords_nv = "glGetPathCoordsNV"(path : UInt32, coords : Float32*) : Void
  fun get_path_dash_array_nv = "glGetPathDashArrayNV"(path : UInt32, dashArray : Float32*) : Void
  fun get_path_length_nv = "glGetPathLengthNV"(path : UInt32, startSegment : Int32, numSegments : Int32) : Float32
  fun get_path_metric_range_nv = "glGetPathMetricRangeNV"(metricQueryMask : UInt32, firstPathName : UInt32, numPaths : Int32, stride : Int32, metrics : Float32*) : Void
  fun get_path_metrics_nv = "glGetPathMetricsNV"(metricQueryMask : UInt32, numPaths : Int32, pathNameType : UInt32, paths : Void*, pathBase : UInt32, stride : Int32, metrics : Float32*) : Void
  fun get_path_parameterfv_nv = "glGetPathParameterfvNV"(path : UInt32, pname : UInt32, value : Float32*) : Void
  fun get_path_parameteriv_nv = "glGetPathParameterivNV"(path : UInt32, pname : UInt32, value : Int32*) : Void
  fun get_path_spacing_nv = "glGetPathSpacingNV"(pathListMode : UInt32, numPaths : Int32, pathNameType : UInt32, paths : Void*, pathBase : UInt32, advanceScale : Float32, kerningScale : Float32, transformType : UInt32, returnedSpacing : Float32*) : Void
  fun get_path_tex_genfv_nv = "glGetPathTexGenfvNV"(texCoordSet : UInt32, pname : UInt32, value : Float32*) : Void
  fun get_path_tex_geniv_nv = "glGetPathTexGenivNV"(texCoordSet : UInt32, pname : UInt32, value : Int32*) : Void
  fun get_perf_counter_info_intel = "glGetPerfCounterInfoINTEL"(queryId : UInt32, counterId : UInt32, counterNameLength : UInt32, counterName : UInt8*, counterDescLength : UInt32, counterDesc : UInt8*, counterOffset : UInt32*, counterDataSize : UInt32*, counterTypeEnum : UInt32*, counterDataTypeEnum : UInt32*, rawCounterMaxValue : UInt64*) : Void
  fun get_perf_monitor_counter_data_amd = "glGetPerfMonitorCounterDataAMD"(monitor : UInt32, pname : UInt32, dataSize : Int32, data : UInt32*, bytesWritten : Int32*) : Void
  fun get_perf_monitor_counter_info_amd = "glGetPerfMonitorCounterInfoAMD"(group : UInt32, counter : UInt32, pname : UInt32, data : Void*) : Void
  fun get_perf_monitor_counter_string_amd = "glGetPerfMonitorCounterStringAMD"(group : UInt32, counter : UInt32, bufSize : Int32, length : Int32*, counterString : UInt8*) : Void
  fun get_perf_monitor_counters_amd = "glGetPerfMonitorCountersAMD"(group : UInt32, numCounters : Int32*, maxActiveCounters : Int32*, counterSize : Int32, counters : UInt32*) : Void
  fun get_perf_monitor_group_string_amd = "glGetPerfMonitorGroupStringAMD"(group : UInt32, bufSize : Int32, length : Int32*, groupString : UInt8*) : Void
  fun get_perf_monitor_groups_amd = "glGetPerfMonitorGroupsAMD"(numGroups : Int32*, groupsSize : Int32, groups : UInt32*) : Void
  fun get_perf_query_data_intel = "glGetPerfQueryDataINTEL"(queryHandle : UInt32, flags : UInt32, dataSize : Int32, data : Void*, bytesWritten : UInt32*) : Void
  fun get_perf_query_id_by_name_intel = "glGetPerfQueryIdByNameINTEL"(queryName : UInt8*, queryId : UInt32*) : Void
  fun get_perf_query_info_intel = "glGetPerfQueryInfoINTEL"(queryId : UInt32, queryNameLength : UInt32, queryName : UInt8*, dataSize : UInt32*, noCounters : UInt32*, noInstances : UInt32*, capsMask : UInt32*) : Void
  fun get_pixel_mapfv = "glGetPixelMapfv"(map : UInt32, values : Float32*) : Void
  fun get_pixel_mapuiv = "glGetPixelMapuiv"(map : UInt32, values : UInt32*) : Void
  fun get_pixel_mapusv = "glGetPixelMapusv"(map : UInt32, values : UInt16*) : Void
  fun get_pixel_mapxv = "glGetPixelMapxv"(map : UInt32, size : Int32, values : Int32*) : Void
  fun get_pixel_tex_gen_parameterfv_sgis = "glGetPixelTexGenParameterfvSGIS"(pname : UInt32, params : Float32*) : Void
  fun get_pixel_tex_gen_parameteriv_sgis = "glGetPixelTexGenParameterivSGIS"(pname : UInt32, params : Int32*) : Void
  fun get_pixel_transform_parameterfv_ext = "glGetPixelTransformParameterfvEXT"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_pixel_transform_parameteriv_ext = "glGetPixelTransformParameterivEXT"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_pointer_indexedv_ext = "glGetPointerIndexedvEXT"(target : UInt32, index : UInt32, data : Void*) : Void
  fun get_pointeri_v_ext = "glGetPointeri_vEXT"(pname : UInt32, index : UInt32, params : Void*) : Void
  fun get_pointerv = "glGetPointerv"(pname : UInt32, params : Void*) : Void
  fun get_pointerv_ext = "glGetPointervEXT"(pname : UInt32, params : Void*) : Void
  fun get_pointerv_khr = "glGetPointervKHR"(pname : UInt32, params : Void*) : Void
  fun get_polygon_stipple = "glGetPolygonStipple"(mask : UInt8*) : Void
  fun get_program_binary = "glGetProgramBinary"(program : UInt32, bufSize : Int32, length : Int32*, binaryFormat : UInt32*, binary : Void*) : Void
  fun get_program_binary_oes = "glGetProgramBinaryOES"(program : UInt32, bufSize : Int32, length : Int32*, binaryFormat : UInt32*, binary : Void*) : Void
  fun get_program_env_parameter_iiv_nv = "glGetProgramEnvParameterIivNV"(target : UInt32, index : UInt32, params : Int32*) : Void
  fun get_program_env_parameter_iuiv_nv = "glGetProgramEnvParameterIuivNV"(target : UInt32, index : UInt32, params : UInt32*) : Void
  fun get_program_env_parameterdv_arb = "glGetProgramEnvParameterdvARB"(target : UInt32, index : UInt32, params : Float64*) : Void
  fun get_program_env_parameterfv_arb = "glGetProgramEnvParameterfvARB"(target : UInt32, index : UInt32, params : Float32*) : Void
  fun get_program_info_log = "glGetProgramInfoLog"(program : UInt32, bufSize : Int32, length : Int32*, infoLog : UInt8*) : Void
  fun get_program_interfaceiv = "glGetProgramInterfaceiv"(program : UInt32, programInterface : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_program_local_parameter_iiv_nv = "glGetProgramLocalParameterIivNV"(target : UInt32, index : UInt32, params : Int32*) : Void
  fun get_program_local_parameter_iuiv_nv = "glGetProgramLocalParameterIuivNV"(target : UInt32, index : UInt32, params : UInt32*) : Void
  fun get_program_local_parameterdv_arb = "glGetProgramLocalParameterdvARB"(target : UInt32, index : UInt32, params : Float64*) : Void
  fun get_program_local_parameterfv_arb = "glGetProgramLocalParameterfvARB"(target : UInt32, index : UInt32, params : Float32*) : Void
  fun get_program_named_parameterdv_nv = "glGetProgramNamedParameterdvNV"(id : UInt32, len : Int32, name : UInt8*, params : Float64*) : Void
  fun get_program_named_parameterfv_nv = "glGetProgramNamedParameterfvNV"(id : UInt32, len : Int32, name : UInt8*, params : Float32*) : Void
  fun get_program_parameterdv_nv = "glGetProgramParameterdvNV"(target : UInt32, index : UInt32, pname : UInt32, params : Float64*) : Void
  fun get_program_parameterfv_nv = "glGetProgramParameterfvNV"(target : UInt32, index : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_program_pipeline_info_log = "glGetProgramPipelineInfoLog"(pipeline : UInt32, bufSize : Int32, length : Int32*, infoLog : UInt8*) : Void
  fun get_program_pipeline_info_log_ext = "glGetProgramPipelineInfoLogEXT"(pipeline : UInt32, bufSize : Int32, length : Int32*, infoLog : UInt8*) : Void
  fun get_program_pipelineiv = "glGetProgramPipelineiv"(pipeline : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_program_pipelineiv_ext = "glGetProgramPipelineivEXT"(pipeline : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_program_resource_index = "glGetProgramResourceIndex"(program : UInt32, programInterface : UInt32, name : UInt8*) : UInt32
  fun get_program_resource_location = "glGetProgramResourceLocation"(program : UInt32, programInterface : UInt32, name : UInt8*) : Int32
  fun get_program_resource_location_index = "glGetProgramResourceLocationIndex"(program : UInt32, programInterface : UInt32, name : UInt8*) : Int32
  fun get_program_resource_location_index_ext = "glGetProgramResourceLocationIndexEXT"(program : UInt32, programInterface : UInt32, name : UInt8*) : Int32
  fun get_program_resource_name = "glGetProgramResourceName"(program : UInt32, programInterface : UInt32, index : UInt32, bufSize : Int32, length : Int32*, name : UInt8*) : Void
  fun get_program_resourcefv_nv = "glGetProgramResourcefvNV"(program : UInt32, programInterface : UInt32, index : UInt32, propCount : Int32, props : UInt32*, bufSize : Int32, length : Int32*, params : Float32*) : Void
  fun get_program_resourceiv = "glGetProgramResourceiv"(program : UInt32, programInterface : UInt32, index : UInt32, propCount : Int32, props : UInt32*, bufSize : Int32, length : Int32*, params : Int32*) : Void
  fun get_program_stageiv = "glGetProgramStageiv"(program : UInt32, shadertype : UInt32, pname : UInt32, values : Int32*) : Void
  fun get_program_string_arb = "glGetProgramStringARB"(target : UInt32, pname : UInt32, string : Void*) : Void
  fun get_program_string_nv = "glGetProgramStringNV"(id : UInt32, pname : UInt32, program : UInt8*) : Void
  fun get_program_subroutine_parameteruiv_nv = "glGetProgramSubroutineParameteruivNV"(target : UInt32, index : UInt32, param : UInt32*) : Void
  fun get_programiv = "glGetProgramiv"(program : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_programiv_arb = "glGetProgramivARB"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_programiv_nv = "glGetProgramivNV"(id : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_query_buffer_objecti64v = "glGetQueryBufferObjecti64v"(id : UInt32, buffer : UInt32, pname : UInt32, offset : Int32) : Void
  fun get_query_buffer_objectiv = "glGetQueryBufferObjectiv"(id : UInt32, buffer : UInt32, pname : UInt32, offset : Int32) : Void
  fun get_query_buffer_objectui64v = "glGetQueryBufferObjectui64v"(id : UInt32, buffer : UInt32, pname : UInt32, offset : Int32) : Void
  fun get_query_buffer_objectuiv = "glGetQueryBufferObjectuiv"(id : UInt32, buffer : UInt32, pname : UInt32, offset : Int32) : Void
  fun get_query_indexediv = "glGetQueryIndexediv"(target : UInt32, index : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_query_objecti64v = "glGetQueryObjecti64v"(id : UInt32, pname : UInt32, params : Int64*) : Void
  fun get_query_objecti64v_ext = "glGetQueryObjecti64vEXT"(id : UInt32, pname : UInt32, params : Int64*) : Void
  fun get_query_objectiv = "glGetQueryObjectiv"(id : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_query_objectiv_arb = "glGetQueryObjectivARB"(id : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_query_objectiv_ext = "glGetQueryObjectivEXT"(id : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_query_objectui64v = "glGetQueryObjectui64v"(id : UInt32, pname : UInt32, params : UInt64*) : Void
  fun get_query_objectui64v_ext = "glGetQueryObjectui64vEXT"(id : UInt32, pname : UInt32, params : UInt64*) : Void
  fun get_query_objectuiv = "glGetQueryObjectuiv"(id : UInt32, pname : UInt32, params : UInt32*) : Void
  fun get_query_objectuiv_arb = "glGetQueryObjectuivARB"(id : UInt32, pname : UInt32, params : UInt32*) : Void
  fun get_query_objectuiv_ext = "glGetQueryObjectuivEXT"(id : UInt32, pname : UInt32, params : UInt32*) : Void
  fun get_queryiv = "glGetQueryiv"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_queryiv_arb = "glGetQueryivARB"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_queryiv_ext = "glGetQueryivEXT"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_renderbuffer_parameteriv = "glGetRenderbufferParameteriv"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_renderbuffer_parameteriv_ext = "glGetRenderbufferParameterivEXT"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_renderbuffer_parameteriv_oes = "glGetRenderbufferParameterivOES"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_sampler_parameter_iiv = "glGetSamplerParameterIiv"(sampler : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_sampler_parameter_iiv_ext = "glGetSamplerParameterIivEXT"(sampler : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_sampler_parameter_iiv_oes = "glGetSamplerParameterIivOES"(sampler : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_sampler_parameter_iuiv = "glGetSamplerParameterIuiv"(sampler : UInt32, pname : UInt32, params : UInt32*) : Void
  fun get_sampler_parameter_iuiv_ext = "glGetSamplerParameterIuivEXT"(sampler : UInt32, pname : UInt32, params : UInt32*) : Void
  fun get_sampler_parameter_iuiv_oes = "glGetSamplerParameterIuivOES"(sampler : UInt32, pname : UInt32, params : UInt32*) : Void
  fun get_sampler_parameterfv = "glGetSamplerParameterfv"(sampler : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_sampler_parameteriv = "glGetSamplerParameteriv"(sampler : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_separable_filter = "glGetSeparableFilter"(target : UInt32, format : UInt32, type : UInt32, row : Void*, column : Void*, span : Void*) : Void
  fun get_separable_filter_ext = "glGetSeparableFilterEXT"(target : UInt32, format : UInt32, type : UInt32, row : Void*, column : Void*, span : Void*) : Void
  fun get_shader_info_log = "glGetShaderInfoLog"(shader : UInt32, bufSize : Int32, length : Int32*, infoLog : UInt8*) : Void
  fun get_shader_precision_format = "glGetShaderPrecisionFormat"(shadertype : UInt32, precisiontype : UInt32, range : Int32*, precision : Int32*) : Void
  fun get_shader_source = "glGetShaderSource"(shader : UInt32, bufSize : Int32, length : Int32*, source : UInt8*) : Void
  fun get_shader_source_arb = "glGetShaderSourceARB"(obj : Void*, maxLength : Int32, length : Int32*, source : UInt8*) : Void
  fun get_shaderiv = "glGetShaderiv"(shader : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_sharpen_tex_func_sgis = "glGetSharpenTexFuncSGIS"(target : UInt32, points : Float32*) : Void
  fun get_stage_index_nv = "glGetStageIndexNV"(shadertype : UInt32) : UInt16
  fun get_string = "glGetString"(name : UInt32) : UInt8*
  fun get_stringi = "glGetStringi"(name : UInt32, index : UInt32) : UInt8*
  fun get_subroutine_index = "glGetSubroutineIndex"(program : UInt32, shadertype : UInt32, name : UInt8*) : UInt32
  fun get_subroutine_uniform_location = "glGetSubroutineUniformLocation"(program : UInt32, shadertype : UInt32, name : UInt8*) : Int32
  fun get_synciv = "glGetSynciv"(sync : Void*, pname : UInt32, bufSize : Int32, length : Int32*, values : Int32*) : Void
  fun get_synciv_apple = "glGetSyncivAPPLE"(sync : Void*, pname : UInt32, bufSize : Int32, length : Int32*, values : Int32*) : Void
  fun get_tex_bump_parameterfv_ati = "glGetTexBumpParameterfvATI"(pname : UInt32, param : Float32*) : Void
  fun get_tex_bump_parameteriv_ati = "glGetTexBumpParameterivATI"(pname : UInt32, param : Int32*) : Void
  fun get_tex_envfv = "glGetTexEnvfv"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_tex_enviv = "glGetTexEnviv"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_tex_envxv = "glGetTexEnvxv"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_tex_envxv_oes = "glGetTexEnvxvOES"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_tex_filter_func_sgis = "glGetTexFilterFuncSGIS"(target : UInt32, filter : UInt32, weights : Float32*) : Void
  fun get_tex_gendv = "glGetTexGendv"(coord : UInt32, pname : UInt32, params : Float64*) : Void
  fun get_tex_genfv = "glGetTexGenfv"(coord : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_tex_genfv_oes = "glGetTexGenfvOES"(coord : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_tex_geniv = "glGetTexGeniv"(coord : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_tex_geniv_oes = "glGetTexGenivOES"(coord : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_tex_genxv_oes = "glGetTexGenxvOES"(coord : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_tex_image = "glGetTexImage"(target : UInt32, level : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun get_tex_level_parameterfv = "glGetTexLevelParameterfv"(target : UInt32, level : Int32, pname : UInt32, params : Float32*) : Void
  fun get_tex_level_parameteriv = "glGetTexLevelParameteriv"(target : UInt32, level : Int32, pname : UInt32, params : Int32*) : Void
  fun get_tex_level_parameterxv_oes = "glGetTexLevelParameterxvOES"(target : UInt32, level : Int32, pname : UInt32, params : Int32*) : Void
  fun get_tex_parameter_iiv = "glGetTexParameterIiv"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_tex_parameter_iiv_ext = "glGetTexParameterIivEXT"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_tex_parameter_iiv_oes = "glGetTexParameterIivOES"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_tex_parameter_iuiv = "glGetTexParameterIuiv"(target : UInt32, pname : UInt32, params : UInt32*) : Void
  fun get_tex_parameter_iuiv_ext = "glGetTexParameterIuivEXT"(target : UInt32, pname : UInt32, params : UInt32*) : Void
  fun get_tex_parameter_iuiv_oes = "glGetTexParameterIuivOES"(target : UInt32, pname : UInt32, params : UInt32*) : Void
  fun get_tex_parameter_pointerv_apple = "glGetTexParameterPointervAPPLE"(target : UInt32, pname : UInt32, params : Void*) : Void
  fun get_tex_parameterfv = "glGetTexParameterfv"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_tex_parameteriv = "glGetTexParameteriv"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_tex_parameterxv = "glGetTexParameterxv"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_tex_parameterxv_oes = "glGetTexParameterxvOES"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_texture_handle_arb = "glGetTextureHandleARB"(texture : UInt32) : UInt64
  fun get_texture_handle_img = "glGetTextureHandleIMG"(texture : UInt32) : UInt64
  fun get_texture_handle_nv = "glGetTextureHandleNV"(texture : UInt32) : UInt64
  fun get_texture_image = "glGetTextureImage"(texture : UInt32, level : Int32, format : UInt32, type : UInt32, bufSize : Int32, pixels : Void*) : Void
  fun get_texture_image_ext = "glGetTextureImageEXT"(texture : UInt32, target : UInt32, level : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun get_texture_level_parameterfv = "glGetTextureLevelParameterfv"(texture : UInt32, level : Int32, pname : UInt32, params : Float32*) : Void
  fun get_texture_level_parameterfv_ext = "glGetTextureLevelParameterfvEXT"(texture : UInt32, target : UInt32, level : Int32, pname : UInt32, params : Float32*) : Void
  fun get_texture_level_parameteriv = "glGetTextureLevelParameteriv"(texture : UInt32, level : Int32, pname : UInt32, params : Int32*) : Void
  fun get_texture_level_parameteriv_ext = "glGetTextureLevelParameterivEXT"(texture : UInt32, target : UInt32, level : Int32, pname : UInt32, params : Int32*) : Void
  fun get_texture_parameter_iiv = "glGetTextureParameterIiv"(texture : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_texture_parameter_iiv_ext = "glGetTextureParameterIivEXT"(texture : UInt32, target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_texture_parameter_iuiv = "glGetTextureParameterIuiv"(texture : UInt32, pname : UInt32, params : UInt32*) : Void
  fun get_texture_parameter_iuiv_ext = "glGetTextureParameterIuivEXT"(texture : UInt32, target : UInt32, pname : UInt32, params : UInt32*) : Void
  fun get_texture_parameterfv = "glGetTextureParameterfv"(texture : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_texture_parameterfv_ext = "glGetTextureParameterfvEXT"(texture : UInt32, target : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_texture_parameteriv = "glGetTextureParameteriv"(texture : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_texture_parameteriv_ext = "glGetTextureParameterivEXT"(texture : UInt32, target : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_texture_sampler_handle_arb = "glGetTextureSamplerHandleARB"(texture : UInt32, sampler : UInt32) : UInt64
  fun get_texture_sampler_handle_img = "glGetTextureSamplerHandleIMG"(texture : UInt32, sampler : UInt32) : UInt64
  fun get_texture_sampler_handle_nv = "glGetTextureSamplerHandleNV"(texture : UInt32, sampler : UInt32) : UInt64
  fun get_texture_sub_image = "glGetTextureSubImage"(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, format : UInt32, type : UInt32, bufSize : Int32, pixels : Void*) : Void
  fun get_track_matrixiv_nv = "glGetTrackMatrixivNV"(target : UInt32, address : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_transform_feedback_varying = "glGetTransformFeedbackVarying"(program : UInt32, index : UInt32, bufSize : Int32, length : Int32*, size : Int32*, type : UInt32*, name : UInt8*) : Void
  fun get_transform_feedback_varying_ext = "glGetTransformFeedbackVaryingEXT"(program : UInt32, index : UInt32, bufSize : Int32, length : Int32*, size : Int32*, type : UInt32*, name : UInt8*) : Void
  fun get_transform_feedback_varying_nv = "glGetTransformFeedbackVaryingNV"(program : UInt32, index : UInt32, location : Int32*) : Void
  fun get_transform_feedbacki64_v = "glGetTransformFeedbacki64_v"(xfb : UInt32, pname : UInt32, index : UInt32, param : Int64*) : Void
  fun get_transform_feedbacki_v = "glGetTransformFeedbacki_v"(xfb : UInt32, pname : UInt32, index : UInt32, param : Int32*) : Void
  fun get_transform_feedbackiv = "glGetTransformFeedbackiv"(xfb : UInt32, pname : UInt32, param : Int32*) : Void
  fun get_translated_shader_source_angle = "glGetTranslatedShaderSourceANGLE"(shader : UInt32, bufsize : Int32, length : Int32*, source : UInt8*) : Void
  fun get_uniform_block_index = "glGetUniformBlockIndex"(program : UInt32, uniformBlockName : UInt8*) : UInt32
  fun get_uniform_buffer_size_ext = "glGetUniformBufferSizeEXT"(program : UInt32, location : Int32) : Int32
  fun get_uniform_indices = "glGetUniformIndices"(program : UInt32, uniformCount : Int32, uniformNames : UInt8*, uniformIndices : UInt32*) : Void
  fun get_uniform_location = "glGetUniformLocation"(program : UInt32, name : UInt8*) : Int32
  fun get_uniform_location_arb = "glGetUniformLocationARB"(programObj : Void*, name : UInt8*) : Int32
  fun get_uniform_offset_ext = "glGetUniformOffsetEXT"(program : UInt32, location : Int32) : Int32
  fun get_uniform_subroutineuiv = "glGetUniformSubroutineuiv"(shadertype : UInt32, location : Int32, params : UInt32*) : Void
  fun get_uniformdv = "glGetUniformdv"(program : UInt32, location : Int32, params : Float64*) : Void
  fun get_uniformfv = "glGetUniformfv"(program : UInt32, location : Int32, params : Float32*) : Void
  fun get_uniformfv_arb = "glGetUniformfvARB"(programObj : Void*, location : Int32, params : Float32*) : Void
  fun get_uniformi64v_arb = "glGetUniformi64vARB"(program : UInt32, location : Int32, params : Int64*) : Void
  fun get_uniformi64v_nv = "glGetUniformi64vNV"(program : UInt32, location : Int32, params : Int64*) : Void
  fun get_uniformiv = "glGetUniformiv"(program : UInt32, location : Int32, params : Int32*) : Void
  fun get_uniformiv_arb = "glGetUniformivARB"(programObj : Void*, location : Int32, params : Int32*) : Void
  fun get_uniformui64v_arb = "glGetUniformui64vARB"(program : UInt32, location : Int32, params : UInt64*) : Void
  fun get_uniformui64v_nv = "glGetUniformui64vNV"(program : UInt32, location : Int32, params : UInt64*) : Void
  fun get_uniformuiv = "glGetUniformuiv"(program : UInt32, location : Int32, params : UInt32*) : Void
  fun get_uniformuiv_ext = "glGetUniformuivEXT"(program : UInt32, location : Int32, params : UInt32*) : Void
  fun get_variant_array_objectfv_ati = "glGetVariantArrayObjectfvATI"(id : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_variant_array_objectiv_ati = "glGetVariantArrayObjectivATI"(id : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_variant_booleanv_ext = "glGetVariantBooleanvEXT"(id : UInt32, value : UInt32, data : UInt8*) : Void
  fun get_variant_floatv_ext = "glGetVariantFloatvEXT"(id : UInt32, value : UInt32, data : Float32*) : Void
  fun get_variant_integerv_ext = "glGetVariantIntegervEXT"(id : UInt32, value : UInt32, data : Int32*) : Void
  fun get_variant_pointerv_ext = "glGetVariantPointervEXT"(id : UInt32, value : UInt32, data : Void*) : Void
  fun get_varying_location_nv = "glGetVaryingLocationNV"(program : UInt32, name : UInt8*) : Int32
  fun get_vertex_array_indexed64iv = "glGetVertexArrayIndexed64iv"(vaobj : UInt32, index : UInt32, pname : UInt32, param : Int64*) : Void
  fun get_vertex_array_indexediv = "glGetVertexArrayIndexediv"(vaobj : UInt32, index : UInt32, pname : UInt32, param : Int32*) : Void
  fun get_vertex_array_integeri_v_ext = "glGetVertexArrayIntegeri_vEXT"(vaobj : UInt32, index : UInt32, pname : UInt32, param : Int32*) : Void
  fun get_vertex_array_integerv_ext = "glGetVertexArrayIntegervEXT"(vaobj : UInt32, pname : UInt32, param : Int32*) : Void
  fun get_vertex_array_pointeri_v_ext = "glGetVertexArrayPointeri_vEXT"(vaobj : UInt32, index : UInt32, pname : UInt32, param : Void*) : Void
  fun get_vertex_array_pointerv_ext = "glGetVertexArrayPointervEXT"(vaobj : UInt32, pname : UInt32, param : Void*) : Void
  fun get_vertex_arrayiv = "glGetVertexArrayiv"(vaobj : UInt32, pname : UInt32, param : Int32*) : Void
  fun get_vertex_attrib_array_objectfv_ati = "glGetVertexAttribArrayObjectfvATI"(index : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_vertex_attrib_array_objectiv_ati = "glGetVertexAttribArrayObjectivATI"(index : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_vertex_attrib_iiv = "glGetVertexAttribIiv"(index : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_vertex_attrib_iiv_ext = "glGetVertexAttribIivEXT"(index : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_vertex_attrib_iuiv = "glGetVertexAttribIuiv"(index : UInt32, pname : UInt32, params : UInt32*) : Void
  fun get_vertex_attrib_iuiv_ext = "glGetVertexAttribIuivEXT"(index : UInt32, pname : UInt32, params : UInt32*) : Void
  fun get_vertex_attrib_ldv = "glGetVertexAttribLdv"(index : UInt32, pname : UInt32, params : Float64*) : Void
  fun get_vertex_attrib_ldv_ext = "glGetVertexAttribLdvEXT"(index : UInt32, pname : UInt32, params : Float64*) : Void
  fun get_vertex_attrib_li64v_nv = "glGetVertexAttribLi64vNV"(index : UInt32, pname : UInt32, params : Int64*) : Void
  fun get_vertex_attrib_lui64v_arb = "glGetVertexAttribLui64vARB"(index : UInt32, pname : UInt32, params : UInt64*) : Void
  fun get_vertex_attrib_lui64v_nv = "glGetVertexAttribLui64vNV"(index : UInt32, pname : UInt32, params : UInt64*) : Void
  fun get_vertex_attrib_pointerv = "glGetVertexAttribPointerv"(index : UInt32, pname : UInt32, pointer : Void*) : Void
  fun get_vertex_attrib_pointerv_arb = "glGetVertexAttribPointervARB"(index : UInt32, pname : UInt32, pointer : Void*) : Void
  fun get_vertex_attrib_pointerv_nv = "glGetVertexAttribPointervNV"(index : UInt32, pname : UInt32, pointer : Void*) : Void
  fun get_vertex_attribdv = "glGetVertexAttribdv"(index : UInt32, pname : UInt32, params : Float64*) : Void
  fun get_vertex_attribdv_arb = "glGetVertexAttribdvARB"(index : UInt32, pname : UInt32, params : Float64*) : Void
  fun get_vertex_attribdv_nv = "glGetVertexAttribdvNV"(index : UInt32, pname : UInt32, params : Float64*) : Void
  fun get_vertex_attribfv = "glGetVertexAttribfv"(index : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_vertex_attribfv_arb = "glGetVertexAttribfvARB"(index : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_vertex_attribfv_nv = "glGetVertexAttribfvNV"(index : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_vertex_attribiv = "glGetVertexAttribiv"(index : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_vertex_attribiv_arb = "glGetVertexAttribivARB"(index : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_vertex_attribiv_nv = "glGetVertexAttribivNV"(index : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_video_capture_streamdv_nv = "glGetVideoCaptureStreamdvNV"(video_capture_slot : UInt32, stream : UInt32, pname : UInt32, params : Float64*) : Void
  fun get_video_capture_streamfv_nv = "glGetVideoCaptureStreamfvNV"(video_capture_slot : UInt32, stream : UInt32, pname : UInt32, params : Float32*) : Void
  fun get_video_capture_streamiv_nv = "glGetVideoCaptureStreamivNV"(video_capture_slot : UInt32, stream : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_video_captureiv_nv = "glGetVideoCaptureivNV"(video_capture_slot : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_videoi64v_nv = "glGetVideoi64vNV"(video_slot : UInt32, pname : UInt32, params : Int64*) : Void
  fun get_videoiv_nv = "glGetVideoivNV"(video_slot : UInt32, pname : UInt32, params : Int32*) : Void
  fun get_videoui64v_nv = "glGetVideoui64vNV"(video_slot : UInt32, pname : UInt32, params : UInt64*) : Void
  fun get_videouiv_nv = "glGetVideouivNV"(video_slot : UInt32, pname : UInt32, params : UInt32*) : Void
  fun getn_color_table = "glGetnColorTable"(target : UInt32, format : UInt32, type : UInt32, bufSize : Int32, table : Void*) : Void
  fun getn_color_table_arb = "glGetnColorTableARB"(target : UInt32, format : UInt32, type : UInt32, bufSize : Int32, table : Void*) : Void
  fun getn_compressed_tex_image = "glGetnCompressedTexImage"(target : UInt32, lod : Int32, bufSize : Int32, pixels : Void*) : Void
  fun getn_compressed_tex_image_arb = "glGetnCompressedTexImageARB"(target : UInt32, lod : Int32, bufSize : Int32, img : Void*) : Void
  fun getn_convolution_filter = "glGetnConvolutionFilter"(target : UInt32, format : UInt32, type : UInt32, bufSize : Int32, image : Void*) : Void
  fun getn_convolution_filter_arb = "glGetnConvolutionFilterARB"(target : UInt32, format : UInt32, type : UInt32, bufSize : Int32, image : Void*) : Void
  fun getn_histogram = "glGetnHistogram"(target : UInt32, reset : UInt8, format : UInt32, type : UInt32, bufSize : Int32, values : Void*) : Void
  fun getn_histogram_arb = "glGetnHistogramARB"(target : UInt32, reset : UInt8, format : UInt32, type : UInt32, bufSize : Int32, values : Void*) : Void
  fun getn_mapdv = "glGetnMapdv"(target : UInt32, query : UInt32, bufSize : Int32, v : Float64*) : Void
  fun getn_mapdv_arb = "glGetnMapdvARB"(target : UInt32, query : UInt32, bufSize : Int32, v : Float64*) : Void
  fun getn_mapfv = "glGetnMapfv"(target : UInt32, query : UInt32, bufSize : Int32, v : Float32*) : Void
  fun getn_mapfv_arb = "glGetnMapfvARB"(target : UInt32, query : UInt32, bufSize : Int32, v : Float32*) : Void
  fun getn_mapiv = "glGetnMapiv"(target : UInt32, query : UInt32, bufSize : Int32, v : Int32*) : Void
  fun getn_mapiv_arb = "glGetnMapivARB"(target : UInt32, query : UInt32, bufSize : Int32, v : Int32*) : Void
  fun getn_minmax = "glGetnMinmax"(target : UInt32, reset : UInt8, format : UInt32, type : UInt32, bufSize : Int32, values : Void*) : Void
  fun getn_minmax_arb = "glGetnMinmaxARB"(target : UInt32, reset : UInt8, format : UInt32, type : UInt32, bufSize : Int32, values : Void*) : Void
  fun getn_pixel_mapfv = "glGetnPixelMapfv"(map : UInt32, bufSize : Int32, values : Float32*) : Void
  fun getn_pixel_mapfv_arb = "glGetnPixelMapfvARB"(map : UInt32, bufSize : Int32, values : Float32*) : Void
  fun getn_pixel_mapuiv = "glGetnPixelMapuiv"(map : UInt32, bufSize : Int32, values : UInt32*) : Void
  fun getn_pixel_mapuiv_arb = "glGetnPixelMapuivARB"(map : UInt32, bufSize : Int32, values : UInt32*) : Void
  fun getn_pixel_mapusv = "glGetnPixelMapusv"(map : UInt32, bufSize : Int32, values : UInt16*) : Void
  fun getn_pixel_mapusv_arb = "glGetnPixelMapusvARB"(map : UInt32, bufSize : Int32, values : UInt16*) : Void
  fun getn_polygon_stipple = "glGetnPolygonStipple"(bufSize : Int32, pattern : UInt8*) : Void
  fun getn_polygon_stipple_arb = "glGetnPolygonStippleARB"(bufSize : Int32, pattern : UInt8*) : Void
  fun getn_separable_filter = "glGetnSeparableFilter"(target : UInt32, format : UInt32, type : UInt32, rowBufSize : Int32, row : Void*, columnBufSize : Int32, column : Void*, span : Void*) : Void
  fun getn_separable_filter_arb = "glGetnSeparableFilterARB"(target : UInt32, format : UInt32, type : UInt32, rowBufSize : Int32, row : Void*, columnBufSize : Int32, column : Void*, span : Void*) : Void
  fun getn_tex_image = "glGetnTexImage"(target : UInt32, level : Int32, format : UInt32, type : UInt32, bufSize : Int32, pixels : Void*) : Void
  fun getn_tex_image_arb = "glGetnTexImageARB"(target : UInt32, level : Int32, format : UInt32, type : UInt32, bufSize : Int32, img : Void*) : Void
  fun getn_uniformdv = "glGetnUniformdv"(program : UInt32, location : Int32, bufSize : Int32, params : Float64*) : Void
  fun getn_uniformdv_arb = "glGetnUniformdvARB"(program : UInt32, location : Int32, bufSize : Int32, params : Float64*) : Void
  fun getn_uniformfv = "glGetnUniformfv"(program : UInt32, location : Int32, bufSize : Int32, params : Float32*) : Void
  fun getn_uniformfv_arb = "glGetnUniformfvARB"(program : UInt32, location : Int32, bufSize : Int32, params : Float32*) : Void
  fun getn_uniformfv_ext = "glGetnUniformfvEXT"(program : UInt32, location : Int32, bufSize : Int32, params : Float32*) : Void
  fun getn_uniformfv_khr = "glGetnUniformfvKHR"(program : UInt32, location : Int32, bufSize : Int32, params : Float32*) : Void
  fun getn_uniformi64v_arb = "glGetnUniformi64vARB"(program : UInt32, location : Int32, bufSize : Int32, params : Int64*) : Void
  fun getn_uniformiv = "glGetnUniformiv"(program : UInt32, location : Int32, bufSize : Int32, params : Int32*) : Void
  fun getn_uniformiv_arb = "glGetnUniformivARB"(program : UInt32, location : Int32, bufSize : Int32, params : Int32*) : Void
  fun getn_uniformiv_ext = "glGetnUniformivEXT"(program : UInt32, location : Int32, bufSize : Int32, params : Int32*) : Void
  fun getn_uniformiv_khr = "glGetnUniformivKHR"(program : UInt32, location : Int32, bufSize : Int32, params : Int32*) : Void
  fun getn_uniformui64v_arb = "glGetnUniformui64vARB"(program : UInt32, location : Int32, bufSize : Int32, params : UInt64*) : Void
  fun getn_uniformuiv = "glGetnUniformuiv"(program : UInt32, location : Int32, bufSize : Int32, params : UInt32*) : Void
  fun getn_uniformuiv_arb = "glGetnUniformuivARB"(program : UInt32, location : Int32, bufSize : Int32, params : UInt32*) : Void
  fun getn_uniformuiv_khr = "glGetnUniformuivKHR"(program : UInt32, location : Int32, bufSize : Int32, params : UInt32*) : Void
  fun global_alpha_factorb_sun = "glGlobalAlphaFactorbSUN"(factor : Int8) : Void
  fun global_alpha_factord_sun = "glGlobalAlphaFactordSUN"(factor : Float64) : Void
  fun global_alpha_factorf_sun = "glGlobalAlphaFactorfSUN"(factor : Float32) : Void
  fun global_alpha_factori_sun = "glGlobalAlphaFactoriSUN"(factor : Int32) : Void
  fun global_alpha_factors_sun = "glGlobalAlphaFactorsSUN"(factor : Int16) : Void
  fun global_alpha_factorub_sun = "glGlobalAlphaFactorubSUN"(factor : UInt8) : Void
  fun global_alpha_factorui_sun = "glGlobalAlphaFactoruiSUN"(factor : UInt32) : Void
  fun global_alpha_factorus_sun = "glGlobalAlphaFactorusSUN"(factor : UInt16) : Void
  fun hint = "glHint"(target : UInt32, mode : UInt32) : Void
  fun hint_pgi = "glHintPGI"(target : UInt32, mode : Int32) : Void
  fun histogram = "glHistogram"(target : UInt32, width : Int32, internalformat : UInt32, sink : UInt8) : Void
  fun histogram_ext = "glHistogramEXT"(target : UInt32, width : Int32, internalformat : UInt32, sink : UInt8) : Void
  fun igloo_interface_sgix = "glIglooInterfaceSGIX"(pname : UInt32, params : Void*) : Void
  fun image_transform_parameterf_hp = "glImageTransformParameterfHP"(target : UInt32, pname : UInt32, param : Float32) : Void
  fun image_transform_parameterfv_hp = "glImageTransformParameterfvHP"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun image_transform_parameteri_hp = "glImageTransformParameteriHP"(target : UInt32, pname : UInt32, param : Int32) : Void
  fun image_transform_parameteriv_hp = "glImageTransformParameterivHP"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun import_sync_ext = "glImportSyncEXT"(external_sync_type : UInt32, external_sync : Int32, flags : UInt32) : Void*
  fun index_format_nv = "glIndexFormatNV"(type : UInt32, stride : Int32) : Void
  fun index_func_ext = "glIndexFuncEXT"(func : UInt32, ref : Float32) : Void
  fun index_mask = "glIndexMask"(mask : UInt32) : Void
  fun index_material_ext = "glIndexMaterialEXT"(face : UInt32, mode : UInt32) : Void
  fun index_pointer = "glIndexPointer"(type : UInt32, stride : Int32, pointer : Void*) : Void
  fun index_pointer_ext = "glIndexPointerEXT"(type : UInt32, stride : Int32, count : Int32, pointer : Void*) : Void
  fun index_pointer_list_ibm = "glIndexPointerListIBM"(type : UInt32, stride : Int32, pointer : Void*, ptrstride : Int32) : Void
  fun indexd = "glIndexd"(c : Float64) : Void
  fun indexdv = "glIndexdv"(c : Float64*) : Void
  fun indexf = "glIndexf"(c : Float32) : Void
  fun indexfv = "glIndexfv"(c : Float32*) : Void
  fun indexi = "glIndexi"(c : Int32) : Void
  fun indexiv = "glIndexiv"(c : Int32*) : Void
  fun indexs = "glIndexs"(c : Int16) : Void
  fun indexsv = "glIndexsv"(c : Int16*) : Void
  fun indexub = "glIndexub"(c : UInt8) : Void
  fun indexubv = "glIndexubv"(c : UInt8*) : Void
  fun indexx_oes = "glIndexxOES"(component : Int32) : Void
  fun indexxv_oes = "glIndexxvOES"(component : Int32*) : Void
  fun init_names = "glInitNames" : Void
  fun insert_component_ext = "glInsertComponentEXT"(res : UInt32, src : UInt32, num : UInt32) : Void
  fun insert_event_marker_ext = "glInsertEventMarkerEXT"(length : Int32, marker : UInt8*) : Void
  fun instruments_buffer_sgix = "glInstrumentsBufferSGIX"(size : Int32, buffer : Int32*) : Void
  fun interleaved_arrays = "glInterleavedArrays"(format : UInt32, stride : Int32, pointer : Void*) : Void
  fun interpolate_paths_nv = "glInterpolatePathsNV"(resultPath : UInt32, pathA : UInt32, pathB : UInt32, weight : Float32) : Void
  fun invalidate_buffer_data = "glInvalidateBufferData"(buffer : UInt32) : Void
  fun invalidate_buffer_sub_data = "glInvalidateBufferSubData"(buffer : UInt32, offset : Int32, length : Int32) : Void
  fun invalidate_framebuffer = "glInvalidateFramebuffer"(target : UInt32, numAttachments : Int32, attachments : UInt32*) : Void
  fun invalidate_named_framebuffer_data = "glInvalidateNamedFramebufferData"(framebuffer : UInt32, numAttachments : Int32, attachments : UInt32*) : Void
  fun invalidate_named_framebuffer_sub_data = "glInvalidateNamedFramebufferSubData"(framebuffer : UInt32, numAttachments : Int32, attachments : UInt32*, x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun invalidate_sub_framebuffer = "glInvalidateSubFramebuffer"(target : UInt32, numAttachments : Int32, attachments : UInt32*, x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun invalidate_tex_image = "glInvalidateTexImage"(texture : UInt32, level : Int32) : Void
  fun invalidate_tex_sub_image = "glInvalidateTexSubImage"(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32) : Void
  fun is_async_marker_sgix = "glIsAsyncMarkerSGIX"(marker : UInt32) : UInt8
  fun is_buffer = "glIsBuffer"(buffer : UInt32) : UInt8
  fun is_buffer_arb = "glIsBufferARB"(buffer : UInt32) : UInt8
  fun is_buffer_resident_nv = "glIsBufferResidentNV"(target : UInt32) : UInt8
  fun is_command_list_nv = "glIsCommandListNV"(list : UInt32) : UInt8
  fun is_enabled = "glIsEnabled"(cap : UInt32) : UInt8
  fun is_enabled_indexed_ext = "glIsEnabledIndexedEXT"(target : UInt32, index : UInt32) : UInt8
  fun is_enabledi = "glIsEnabledi"(target : UInt32, index : UInt32) : UInt8
  fun is_enabledi_ext = "glIsEnablediEXT"(target : UInt32, index : UInt32) : UInt8
  fun is_enabledi_nv = "glIsEnablediNV"(target : UInt32, index : UInt32) : UInt8
  fun is_enabledi_oes = "glIsEnablediOES"(target : UInt32, index : UInt32) : UInt8
  fun is_fence_apple = "glIsFenceAPPLE"(fence : UInt32) : UInt8
  fun is_fence_nv = "glIsFenceNV"(fence : UInt32) : UInt8
  fun is_framebuffer = "glIsFramebuffer"(framebuffer : UInt32) : UInt8
  fun is_framebuffer_ext = "glIsFramebufferEXT"(framebuffer : UInt32) : UInt8
  fun is_framebuffer_oes = "glIsFramebufferOES"(framebuffer : UInt32) : UInt8
  fun is_image_handle_resident_arb = "glIsImageHandleResidentARB"(handle : UInt64) : UInt8
  fun is_image_handle_resident_nv = "glIsImageHandleResidentNV"(handle : UInt64) : UInt8
  fun is_list = "glIsList"(list : UInt32) : UInt8
  fun is_name_amd = "glIsNameAMD"(identifier : UInt32, name : UInt32) : UInt8
  fun is_named_buffer_resident_nv = "glIsNamedBufferResidentNV"(buffer : UInt32) : UInt8
  fun is_named_string_arb = "glIsNamedStringARB"(namelen : Int32, name : UInt8*) : UInt8
  fun is_object_buffer_ati = "glIsObjectBufferATI"(buffer : UInt32) : UInt8
  fun is_occlusion_query_nv = "glIsOcclusionQueryNV"(id : UInt32) : UInt8
  fun is_path_nv = "glIsPathNV"(path : UInt32) : UInt8
  fun is_point_in_fill_path_nv = "glIsPointInFillPathNV"(path : UInt32, mask : UInt32, x : Float32, y : Float32) : UInt8
  fun is_point_in_stroke_path_nv = "glIsPointInStrokePathNV"(path : UInt32, x : Float32, y : Float32) : UInt8
  fun is_program = "glIsProgram"(program : UInt32) : UInt8
  fun is_program_arb = "glIsProgramARB"(program : UInt32) : UInt8
  fun is_program_nv = "glIsProgramNV"(id : UInt32) : UInt8
  fun is_program_pipeline = "glIsProgramPipeline"(pipeline : UInt32) : UInt8
  fun is_program_pipeline_ext = "glIsProgramPipelineEXT"(pipeline : UInt32) : UInt8
  fun is_query = "glIsQuery"(id : UInt32) : UInt8
  fun is_query_arb = "glIsQueryARB"(id : UInt32) : UInt8
  fun is_query_ext = "glIsQueryEXT"(id : UInt32) : UInt8
  fun is_renderbuffer = "glIsRenderbuffer"(renderbuffer : UInt32) : UInt8
  fun is_renderbuffer_ext = "glIsRenderbufferEXT"(renderbuffer : UInt32) : UInt8
  fun is_renderbuffer_oes = "glIsRenderbufferOES"(renderbuffer : UInt32) : UInt8
  fun is_sampler = "glIsSampler"(sampler : UInt32) : UInt8
  fun is_shader = "glIsShader"(shader : UInt32) : UInt8
  fun is_state_nv = "glIsStateNV"(state : UInt32) : UInt8
  fun is_sync = "glIsSync"(sync : Void*) : UInt8
  fun is_sync_apple = "glIsSyncAPPLE"(sync : Void*) : UInt8
  fun is_texture = "glIsTexture"(texture : UInt32) : UInt8
  fun is_texture_ext = "glIsTextureEXT"(texture : UInt32) : UInt8
  fun is_texture_handle_resident_arb = "glIsTextureHandleResidentARB"(handle : UInt64) : UInt8
  fun is_texture_handle_resident_nv = "glIsTextureHandleResidentNV"(handle : UInt64) : UInt8
  fun is_transform_feedback = "glIsTransformFeedback"(id : UInt32) : UInt8
  fun is_transform_feedback_nv = "glIsTransformFeedbackNV"(id : UInt32) : UInt8
  fun is_variant_enabled_ext = "glIsVariantEnabledEXT"(id : UInt32, cap : UInt32) : UInt8
  fun is_vertex_array = "glIsVertexArray"(array : UInt32) : UInt8
  fun is_vertex_array_apple = "glIsVertexArrayAPPLE"(array : UInt32) : UInt8
  fun is_vertex_array_oes = "glIsVertexArrayOES"(array : UInt32) : UInt8
  fun is_vertex_attrib_enabled_apple = "glIsVertexAttribEnabledAPPLE"(index : UInt32, pname : UInt32) : UInt8
  fun label_object_ext = "glLabelObjectEXT"(type : UInt32, object : UInt32, length : Int32, label : UInt8*) : Void
  fun light_envi_sgix = "glLightEnviSGIX"(pname : UInt32, param : Int32) : Void
  fun light_modelf = "glLightModelf"(pname : UInt32, param : Float32) : Void
  fun light_modelfv = "glLightModelfv"(pname : UInt32, params : Float32*) : Void
  fun light_modeli = "glLightModeli"(pname : UInt32, param : Int32) : Void
  fun light_modeliv = "glLightModeliv"(pname : UInt32, params : Int32*) : Void
  fun light_modelx = "glLightModelx"(pname : UInt32, param : Int32) : Void
  fun light_modelx_oes = "glLightModelxOES"(pname : UInt32, param : Int32) : Void
  fun light_modelxv = "glLightModelxv"(pname : UInt32, param : Int32*) : Void
  fun light_modelxv_oes = "glLightModelxvOES"(pname : UInt32, param : Int32*) : Void
  fun lightf = "glLightf"(light : UInt32, pname : UInt32, param : Float32) : Void
  fun lightfv = "glLightfv"(light : UInt32, pname : UInt32, params : Float32*) : Void
  fun lighti = "glLighti"(light : UInt32, pname : UInt32, param : Int32) : Void
  fun lightiv = "glLightiv"(light : UInt32, pname : UInt32, params : Int32*) : Void
  fun lightx = "glLightx"(light : UInt32, pname : UInt32, param : Int32) : Void
  fun lightx_oes = "glLightxOES"(light : UInt32, pname : UInt32, param : Int32) : Void
  fun lightxv = "glLightxv"(light : UInt32, pname : UInt32, params : Int32*) : Void
  fun lightxv_oes = "glLightxvOES"(light : UInt32, pname : UInt32, params : Int32*) : Void
  fun line_stipple = "glLineStipple"(factor : Int32, pattern : UInt16) : Void
  fun line_width = "glLineWidth"(width : Float32) : Void
  fun line_widthx = "glLineWidthx"(width : Int32) : Void
  fun line_widthx_oes = "glLineWidthxOES"(width : Int32) : Void
  fun link_program = "glLinkProgram"(program : UInt32) : Void
  fun link_program_arb = "glLinkProgramARB"(programObj : Void*) : Void
  fun list_base = "glListBase"(base : UInt32) : Void
  fun list_draw_commands_states_client_nv = "glListDrawCommandsStatesClientNV"(list : UInt32, segment : UInt32, indirects : Void*, sizes : Int32*, states : UInt32*, fbos : UInt32*, count : UInt32) : Void
  fun list_parameterf_sgix = "glListParameterfSGIX"(list : UInt32, pname : UInt32, param : Float32) : Void
  fun list_parameterfv_sgix = "glListParameterfvSGIX"(list : UInt32, pname : UInt32, params : Float32*) : Void
  fun list_parameteri_sgix = "glListParameteriSGIX"(list : UInt32, pname : UInt32, param : Int32) : Void
  fun list_parameteriv_sgix = "glListParameterivSGIX"(list : UInt32, pname : UInt32, params : Int32*) : Void
  fun load_identity = "glLoadIdentity" : Void
  fun load_identity_deformation_map_sgix = "glLoadIdentityDeformationMapSGIX"(mask : UInt32) : Void
  fun load_matrixd = "glLoadMatrixd"(m : Float64*) : Void
  fun load_matrixf = "glLoadMatrixf"(m : Float32*) : Void
  fun load_matrixx = "glLoadMatrixx"(m : Int32*) : Void
  fun load_matrixx_oes = "glLoadMatrixxOES"(m : Int32*) : Void
  fun load_name = "glLoadName"(name : UInt32) : Void
  fun load_palette_from_model_view_matrix_oes = "glLoadPaletteFromModelViewMatrixOES" : Void
  fun load_program_nv = "glLoadProgramNV"(target : UInt32, id : UInt32, len : Int32, program : UInt8*) : Void
  fun load_transpose_matrixd = "glLoadTransposeMatrixd"(m : Float64*) : Void
  fun load_transpose_matrixd_arb = "glLoadTransposeMatrixdARB"(m : Float64*) : Void
  fun load_transpose_matrixf = "glLoadTransposeMatrixf"(m : Float32*) : Void
  fun load_transpose_matrixf_arb = "glLoadTransposeMatrixfARB"(m : Float32*) : Void
  fun load_transpose_matrixx_oes = "glLoadTransposeMatrixxOES"(m : Int32*) : Void
  fun lock_arrays_ext = "glLockArraysEXT"(first : Int32, count : Int32) : Void
  fun logic_op = "glLogicOp"(opcode : UInt32) : Void
  fun make_buffer_non_resident_nv = "glMakeBufferNonResidentNV"(target : UInt32) : Void
  fun make_buffer_resident_nv = "glMakeBufferResidentNV"(target : UInt32, access : UInt32) : Void
  fun make_image_handle_non_resident_arb = "glMakeImageHandleNonResidentARB"(handle : UInt64) : Void
  fun make_image_handle_non_resident_nv = "glMakeImageHandleNonResidentNV"(handle : UInt64) : Void
  fun make_image_handle_resident_arb = "glMakeImageHandleResidentARB"(handle : UInt64, access : UInt32) : Void
  fun make_image_handle_resident_nv = "glMakeImageHandleResidentNV"(handle : UInt64, access : UInt32) : Void
  fun make_named_buffer_non_resident_nv = "glMakeNamedBufferNonResidentNV"(buffer : UInt32) : Void
  fun make_named_buffer_resident_nv = "glMakeNamedBufferResidentNV"(buffer : UInt32, access : UInt32) : Void
  fun make_texture_handle_non_resident_arb = "glMakeTextureHandleNonResidentARB"(handle : UInt64) : Void
  fun make_texture_handle_non_resident_nv = "glMakeTextureHandleNonResidentNV"(handle : UInt64) : Void
  fun make_texture_handle_resident_arb = "glMakeTextureHandleResidentARB"(handle : UInt64) : Void
  fun make_texture_handle_resident_nv = "glMakeTextureHandleResidentNV"(handle : UInt64) : Void
  fun map1d = "glMap1d"(target : UInt32, u1 : Float64, u2 : Float64, stride : Int32, order : Int32, points : Float64*) : Void
  fun map1f = "glMap1f"(target : UInt32, u1 : Float32, u2 : Float32, stride : Int32, order : Int32, points : Float32*) : Void
  fun map1x_oes = "glMap1xOES"(target : UInt32, u1 : Int32, u2 : Int32, stride : Int32, order : Int32, points : Int32) : Void
  fun map2d = "glMap2d"(target : UInt32, u1 : Float64, u2 : Float64, ustride : Int32, uorder : Int32, v1 : Float64, v2 : Float64, vstride : Int32, vorder : Int32, points : Float64*) : Void
  fun map2f = "glMap2f"(target : UInt32, u1 : Float32, u2 : Float32, ustride : Int32, uorder : Int32, v1 : Float32, v2 : Float32, vstride : Int32, vorder : Int32, points : Float32*) : Void
  fun map2x_oes = "glMap2xOES"(target : UInt32, u1 : Int32, u2 : Int32, ustride : Int32, uorder : Int32, v1 : Int32, v2 : Int32, vstride : Int32, vorder : Int32, points : Int32) : Void
  fun map_buffer = "glMapBuffer"(target : UInt32, access : UInt32) : Void*
  fun map_buffer_arb = "glMapBufferARB"(target : UInt32, access : UInt32) : Void*
  fun map_buffer_oes = "glMapBufferOES"(target : UInt32, access : UInt32) : Void*
  fun map_buffer_range = "glMapBufferRange"(target : UInt32, offset : Int32, length : Int32, access : UInt32) : Void*
  fun map_buffer_range_ext = "glMapBufferRangeEXT"(target : UInt32, offset : Int32, length : Int32, access : UInt32) : Void*
  fun map_control_points_nv = "glMapControlPointsNV"(target : UInt32, index : UInt32, type : UInt32, ustride : Int32, vstride : Int32, uorder : Int32, vorder : Int32, packed : UInt8, points : Void*) : Void
  fun map_grid1d = "glMapGrid1d"(un : Int32, u1 : Float64, u2 : Float64) : Void
  fun map_grid1f = "glMapGrid1f"(un : Int32, u1 : Float32, u2 : Float32) : Void
  fun map_grid1x_oes = "glMapGrid1xOES"(n : Int32, u1 : Int32, u2 : Int32) : Void
  fun map_grid2d = "glMapGrid2d"(un : Int32, u1 : Float64, u2 : Float64, vn : Int32, v1 : Float64, v2 : Float64) : Void
  fun map_grid2f = "glMapGrid2f"(un : Int32, u1 : Float32, u2 : Float32, vn : Int32, v1 : Float32, v2 : Float32) : Void
  fun map_grid2x_oes = "glMapGrid2xOES"(n : Int32, u1 : Int32, u2 : Int32, v1 : Int32, v2 : Int32) : Void
  fun map_named_buffer = "glMapNamedBuffer"(buffer : UInt32, access : UInt32) : Void*
  fun map_named_buffer_ext = "glMapNamedBufferEXT"(buffer : UInt32, access : UInt32) : Void*
  fun map_named_buffer_range = "glMapNamedBufferRange"(buffer : UInt32, offset : Int32, length : Int32, access : UInt32) : Void*
  fun map_named_buffer_range_ext = "glMapNamedBufferRangeEXT"(buffer : UInt32, offset : Int32, length : Int32, access : UInt32) : Void*
  fun map_object_buffer_ati = "glMapObjectBufferATI"(buffer : UInt32) : Void*
  fun map_parameterfv_nv = "glMapParameterfvNV"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun map_parameteriv_nv = "glMapParameterivNV"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun map_texture2dintel = "glMapTexture2DINTEL"(texture : UInt32, level : Int32, access : UInt32, stride : Int32*, layout : UInt32*) : Void*
  fun map_vertex_attrib1d_apple = "glMapVertexAttrib1dAPPLE"(index : UInt32, size : UInt32, u1 : Float64, u2 : Float64, stride : Int32, order : Int32, points : Float64*) : Void
  fun map_vertex_attrib1f_apple = "glMapVertexAttrib1fAPPLE"(index : UInt32, size : UInt32, u1 : Float32, u2 : Float32, stride : Int32, order : Int32, points : Float32*) : Void
  fun map_vertex_attrib2d_apple = "glMapVertexAttrib2dAPPLE"(index : UInt32, size : UInt32, u1 : Float64, u2 : Float64, ustride : Int32, uorder : Int32, v1 : Float64, v2 : Float64, vstride : Int32, vorder : Int32, points : Float64*) : Void
  fun map_vertex_attrib2f_apple = "glMapVertexAttrib2fAPPLE"(index : UInt32, size : UInt32, u1 : Float32, u2 : Float32, ustride : Int32, uorder : Int32, v1 : Float32, v2 : Float32, vstride : Int32, vorder : Int32, points : Float32*) : Void
  fun materialf = "glMaterialf"(face : UInt32, pname : UInt32, param : Float32) : Void
  fun materialfv = "glMaterialfv"(face : UInt32, pname : UInt32, params : Float32*) : Void
  fun materiali = "glMateriali"(face : UInt32, pname : UInt32, param : Int32) : Void
  fun materialiv = "glMaterialiv"(face : UInt32, pname : UInt32, params : Int32*) : Void
  fun materialx = "glMaterialx"(face : UInt32, pname : UInt32, param : Int32) : Void
  fun materialx_oes = "glMaterialxOES"(face : UInt32, pname : UInt32, param : Int32) : Void
  fun materialxv = "glMaterialxv"(face : UInt32, pname : UInt32, param : Int32*) : Void
  fun materialxv_oes = "glMaterialxvOES"(face : UInt32, pname : UInt32, param : Int32*) : Void
  fun matrix_frustum_ext = "glMatrixFrustumEXT"(mode : UInt32, left : Float64, right : Float64, bottom : Float64, top : Float64, zNear : Float64, zFar : Float64) : Void
  fun matrix_index_pointer_arb = "glMatrixIndexPointerARB"(size : Int32, type : UInt32, stride : Int32, pointer : Void*) : Void
  fun matrix_index_pointer_oes = "glMatrixIndexPointerOES"(size : Int32, type : UInt32, stride : Int32, pointer : Void*) : Void
  fun matrix_indexubv_arb = "glMatrixIndexubvARB"(size : Int32, indices : UInt8*) : Void
  fun matrix_indexuiv_arb = "glMatrixIndexuivARB"(size : Int32, indices : UInt32*) : Void
  fun matrix_indexusv_arb = "glMatrixIndexusvARB"(size : Int32, indices : UInt16*) : Void
  fun matrix_load3x2f_nv = "glMatrixLoad3x2fNV"(matrixMode : UInt32, m : Float32*) : Void
  fun matrix_load3x3f_nv = "glMatrixLoad3x3fNV"(matrixMode : UInt32, m : Float32*) : Void
  fun matrix_load_identity_ext = "glMatrixLoadIdentityEXT"(mode : UInt32) : Void
  fun matrix_load_transpose3x3f_nv = "glMatrixLoadTranspose3x3fNV"(matrixMode : UInt32, m : Float32*) : Void
  fun matrix_load_transposed_ext = "glMatrixLoadTransposedEXT"(mode : UInt32, m : Float64*) : Void
  fun matrix_load_transposef_ext = "glMatrixLoadTransposefEXT"(mode : UInt32, m : Float32*) : Void
  fun matrix_loadd_ext = "glMatrixLoaddEXT"(mode : UInt32, m : Float64*) : Void
  fun matrix_loadf_ext = "glMatrixLoadfEXT"(mode : UInt32, m : Float32*) : Void
  fun matrix_mode = "glMatrixMode"(mode : UInt32) : Void
  fun matrix_mult3x2f_nv = "glMatrixMult3x2fNV"(matrixMode : UInt32, m : Float32*) : Void
  fun matrix_mult3x3f_nv = "glMatrixMult3x3fNV"(matrixMode : UInt32, m : Float32*) : Void
  fun matrix_mult_transpose3x3f_nv = "glMatrixMultTranspose3x3fNV"(matrixMode : UInt32, m : Float32*) : Void
  fun matrix_mult_transposed_ext = "glMatrixMultTransposedEXT"(mode : UInt32, m : Float64*) : Void
  fun matrix_mult_transposef_ext = "glMatrixMultTransposefEXT"(mode : UInt32, m : Float32*) : Void
  fun matrix_multd_ext = "glMatrixMultdEXT"(mode : UInt32, m : Float64*) : Void
  fun matrix_multf_ext = "glMatrixMultfEXT"(mode : UInt32, m : Float32*) : Void
  fun matrix_ortho_ext = "glMatrixOrthoEXT"(mode : UInt32, left : Float64, right : Float64, bottom : Float64, top : Float64, zNear : Float64, zFar : Float64) : Void
  fun matrix_pop_ext = "glMatrixPopEXT"(mode : UInt32) : Void
  fun matrix_push_ext = "glMatrixPushEXT"(mode : UInt32) : Void
  fun matrix_rotated_ext = "glMatrixRotatedEXT"(mode : UInt32, angle : Float64, x : Float64, y : Float64, z : Float64) : Void
  fun matrix_rotatef_ext = "glMatrixRotatefEXT"(mode : UInt32, angle : Float32, x : Float32, y : Float32, z : Float32) : Void
  fun matrix_scaled_ext = "glMatrixScaledEXT"(mode : UInt32, x : Float64, y : Float64, z : Float64) : Void
  fun matrix_scalef_ext = "glMatrixScalefEXT"(mode : UInt32, x : Float32, y : Float32, z : Float32) : Void
  fun matrix_translated_ext = "glMatrixTranslatedEXT"(mode : UInt32, x : Float64, y : Float64, z : Float64) : Void
  fun matrix_translatef_ext = "glMatrixTranslatefEXT"(mode : UInt32, x : Float32, y : Float32, z : Float32) : Void
  fun max_shader_compiler_threads_arb = "glMaxShaderCompilerThreadsARB"(count : UInt32) : Void
  fun memory_barrier = "glMemoryBarrier"(barriers : UInt32) : Void
  fun memory_barrier_by_region = "glMemoryBarrierByRegion"(barriers : UInt32) : Void
  fun memory_barrier_ext = "glMemoryBarrierEXT"(barriers : UInt32) : Void
  fun min_sample_shading = "glMinSampleShading"(value : Float32) : Void
  fun min_sample_shading_arb = "glMinSampleShadingARB"(value : Float32) : Void
  fun min_sample_shading_oes = "glMinSampleShadingOES"(value : Float32) : Void
  fun minmax = "glMinmax"(target : UInt32, internalformat : UInt32, sink : UInt8) : Void
  fun minmax_ext = "glMinmaxEXT"(target : UInt32, internalformat : UInt32, sink : UInt8) : Void
  fun mult_matrixd = "glMultMatrixd"(m : Float64*) : Void
  fun mult_matrixf = "glMultMatrixf"(m : Float32*) : Void
  fun mult_matrixx = "glMultMatrixx"(m : Int32*) : Void
  fun mult_matrixx_oes = "glMultMatrixxOES"(m : Int32*) : Void
  fun mult_transpose_matrixd = "glMultTransposeMatrixd"(m : Float64*) : Void
  fun mult_transpose_matrixd_arb = "glMultTransposeMatrixdARB"(m : Float64*) : Void
  fun mult_transpose_matrixf = "glMultTransposeMatrixf"(m : Float32*) : Void
  fun mult_transpose_matrixf_arb = "glMultTransposeMatrixfARB"(m : Float32*) : Void
  fun mult_transpose_matrixx_oes = "glMultTransposeMatrixxOES"(m : Int32*) : Void
  fun multi_draw_arrays = "glMultiDrawArrays"(mode : UInt32, first : Int32*, count : Int32*, drawcount : Int32) : Void
  fun multi_draw_arrays_ext = "glMultiDrawArraysEXT"(mode : UInt32, first : Int32*, count : Int32*, primcount : Int32) : Void
  fun multi_draw_arrays_indirect = "glMultiDrawArraysIndirect"(mode : UInt32, indirect : Void*, drawcount : Int32, stride : Int32) : Void
  fun multi_draw_arrays_indirect_amd = "glMultiDrawArraysIndirectAMD"(mode : UInt32, indirect : Void*, primcount : Int32, stride : Int32) : Void
  fun multi_draw_arrays_indirect_bindless_count_nv = "glMultiDrawArraysIndirectBindlessCountNV"(mode : UInt32, indirect : Void*, drawCount : Int32, maxDrawCount : Int32, stride : Int32, vertexBufferCount : Int32) : Void
  fun multi_draw_arrays_indirect_bindless_nv = "glMultiDrawArraysIndirectBindlessNV"(mode : UInt32, indirect : Void*, drawCount : Int32, stride : Int32, vertexBufferCount : Int32) : Void
  fun multi_draw_arrays_indirect_count_arb = "glMultiDrawArraysIndirectCountARB"(mode : UInt32, indirect : Int32, drawcount : Int32, maxdrawcount : Int32, stride : Int32) : Void
  fun multi_draw_arrays_indirect_ext = "glMultiDrawArraysIndirectEXT"(mode : UInt32, indirect : Void*, drawcount : Int32, stride : Int32) : Void
  fun multi_draw_element_array_apple = "glMultiDrawElementArrayAPPLE"(mode : UInt32, first : Int32*, count : Int32*, primcount : Int32) : Void
  fun multi_draw_elements = "glMultiDrawElements"(mode : UInt32, count : Int32*, type : UInt32, indices : Void*, drawcount : Int32) : Void
  fun multi_draw_elements_base_vertex = "glMultiDrawElementsBaseVertex"(mode : UInt32, count : Int32*, type : UInt32, indices : Void*, drawcount : Int32, basevertex : Int32*) : Void
  fun multi_draw_elements_base_vertex_ext = "glMultiDrawElementsBaseVertexEXT"(mode : UInt32, count : Int32*, type : UInt32, indices : Void*, primcount : Int32, basevertex : Int32*) : Void
  fun multi_draw_elements_base_vertex_oes = "glMultiDrawElementsBaseVertexOES"(mode : UInt32, count : Int32*, type : UInt32, indices : Void*, primcount : Int32, basevertex : Int32*) : Void
  fun multi_draw_elements_ext = "glMultiDrawElementsEXT"(mode : UInt32, count : Int32*, type : UInt32, indices : Void*, primcount : Int32) : Void
  fun multi_draw_elements_indirect = "glMultiDrawElementsIndirect"(mode : UInt32, type : UInt32, indirect : Void*, drawcount : Int32, stride : Int32) : Void
  fun multi_draw_elements_indirect_amd = "glMultiDrawElementsIndirectAMD"(mode : UInt32, type : UInt32, indirect : Void*, primcount : Int32, stride : Int32) : Void
  fun multi_draw_elements_indirect_bindless_count_nv = "glMultiDrawElementsIndirectBindlessCountNV"(mode : UInt32, type : UInt32, indirect : Void*, drawCount : Int32, maxDrawCount : Int32, stride : Int32, vertexBufferCount : Int32) : Void
  fun multi_draw_elements_indirect_bindless_nv = "glMultiDrawElementsIndirectBindlessNV"(mode : UInt32, type : UInt32, indirect : Void*, drawCount : Int32, stride : Int32, vertexBufferCount : Int32) : Void
  fun multi_draw_elements_indirect_count_arb = "glMultiDrawElementsIndirectCountARB"(mode : UInt32, type : UInt32, indirect : Int32, drawcount : Int32, maxdrawcount : Int32, stride : Int32) : Void
  fun multi_draw_elements_indirect_ext = "glMultiDrawElementsIndirectEXT"(mode : UInt32, type : UInt32, indirect : Void*, drawcount : Int32, stride : Int32) : Void
  fun multi_draw_range_element_array_apple = "glMultiDrawRangeElementArrayAPPLE"(mode : UInt32, start : UInt32, end : UInt32, first : Int32*, count : Int32*, primcount : Int32) : Void
  fun multi_mode_draw_arrays_ibm = "glMultiModeDrawArraysIBM"(mode : UInt32*, first : Int32*, count : Int32*, primcount : Int32, modestride : Int32) : Void
  fun multi_mode_draw_elements_ibm = "glMultiModeDrawElementsIBM"(mode : UInt32*, count : Int32*, type : UInt32, indices : Void*, primcount : Int32, modestride : Int32) : Void
  fun multi_tex_buffer_ext = "glMultiTexBufferEXT"(texunit : UInt32, target : UInt32, internalformat : UInt32, buffer : UInt32) : Void
  fun multi_tex_coord1b_oes = "glMultiTexCoord1bOES"(texture : UInt32, s : Int8) : Void
  fun multi_tex_coord1bv_oes = "glMultiTexCoord1bvOES"(texture : UInt32, coords : Int8*) : Void
  fun multi_tex_coord1d = "glMultiTexCoord1d"(target : UInt32, s : Float64) : Void
  fun multi_tex_coord1d_arb = "glMultiTexCoord1dARB"(target : UInt32, s : Float64) : Void
  fun multi_tex_coord1dv = "glMultiTexCoord1dv"(target : UInt32, v : Float64*) : Void
  fun multi_tex_coord1dv_arb = "glMultiTexCoord1dvARB"(target : UInt32, v : Float64*) : Void
  fun multi_tex_coord1f = "glMultiTexCoord1f"(target : UInt32, s : Float32) : Void
  fun multi_tex_coord1f_arb = "glMultiTexCoord1fARB"(target : UInt32, s : Float32) : Void
  fun multi_tex_coord1fv = "glMultiTexCoord1fv"(target : UInt32, v : Float32*) : Void
  fun multi_tex_coord1fv_arb = "glMultiTexCoord1fvARB"(target : UInt32, v : Float32*) : Void
  fun multi_tex_coord1h_nv = "glMultiTexCoord1hNV"(target : UInt32, s : UInt16) : Void
  fun multi_tex_coord1hv_nv = "glMultiTexCoord1hvNV"(target : UInt32, v : UInt16*) : Void
  fun multi_tex_coord1i = "glMultiTexCoord1i"(target : UInt32, s : Int32) : Void
  fun multi_tex_coord1i_arb = "glMultiTexCoord1iARB"(target : UInt32, s : Int32) : Void
  fun multi_tex_coord1iv = "glMultiTexCoord1iv"(target : UInt32, v : Int32*) : Void
  fun multi_tex_coord1iv_arb = "glMultiTexCoord1ivARB"(target : UInt32, v : Int32*) : Void
  fun multi_tex_coord1s = "glMultiTexCoord1s"(target : UInt32, s : Int16) : Void
  fun multi_tex_coord1s_arb = "glMultiTexCoord1sARB"(target : UInt32, s : Int16) : Void
  fun multi_tex_coord1sv = "glMultiTexCoord1sv"(target : UInt32, v : Int16*) : Void
  fun multi_tex_coord1sv_arb = "glMultiTexCoord1svARB"(target : UInt32, v : Int16*) : Void
  fun multi_tex_coord1x_oes = "glMultiTexCoord1xOES"(texture : UInt32, s : Int32) : Void
  fun multi_tex_coord1xv_oes = "glMultiTexCoord1xvOES"(texture : UInt32, coords : Int32*) : Void
  fun multi_tex_coord2b_oes = "glMultiTexCoord2bOES"(texture : UInt32, s : Int8, t : Int8) : Void
  fun multi_tex_coord2bv_oes = "glMultiTexCoord2bvOES"(texture : UInt32, coords : Int8*) : Void
  fun multi_tex_coord2d = "glMultiTexCoord2d"(target : UInt32, s : Float64, t : Float64) : Void
  fun multi_tex_coord2d_arb = "glMultiTexCoord2dARB"(target : UInt32, s : Float64, t : Float64) : Void
  fun multi_tex_coord2dv = "glMultiTexCoord2dv"(target : UInt32, v : Float64*) : Void
  fun multi_tex_coord2dv_arb = "glMultiTexCoord2dvARB"(target : UInt32, v : Float64*) : Void
  fun multi_tex_coord2f = "glMultiTexCoord2f"(target : UInt32, s : Float32, t : Float32) : Void
  fun multi_tex_coord2f_arb = "glMultiTexCoord2fARB"(target : UInt32, s : Float32, t : Float32) : Void
  fun multi_tex_coord2fv = "glMultiTexCoord2fv"(target : UInt32, v : Float32*) : Void
  fun multi_tex_coord2fv_arb = "glMultiTexCoord2fvARB"(target : UInt32, v : Float32*) : Void
  fun multi_tex_coord2h_nv = "glMultiTexCoord2hNV"(target : UInt32, s : UInt16, t : UInt16) : Void
  fun multi_tex_coord2hv_nv = "glMultiTexCoord2hvNV"(target : UInt32, v : UInt16*) : Void
  fun multi_tex_coord2i = "glMultiTexCoord2i"(target : UInt32, s : Int32, t : Int32) : Void
  fun multi_tex_coord2i_arb = "glMultiTexCoord2iARB"(target : UInt32, s : Int32, t : Int32) : Void
  fun multi_tex_coord2iv = "glMultiTexCoord2iv"(target : UInt32, v : Int32*) : Void
  fun multi_tex_coord2iv_arb = "glMultiTexCoord2ivARB"(target : UInt32, v : Int32*) : Void
  fun multi_tex_coord2s = "glMultiTexCoord2s"(target : UInt32, s : Int16, t : Int16) : Void
  fun multi_tex_coord2s_arb = "glMultiTexCoord2sARB"(target : UInt32, s : Int16, t : Int16) : Void
  fun multi_tex_coord2sv = "glMultiTexCoord2sv"(target : UInt32, v : Int16*) : Void
  fun multi_tex_coord2sv_arb = "glMultiTexCoord2svARB"(target : UInt32, v : Int16*) : Void
  fun multi_tex_coord2x_oes = "glMultiTexCoord2xOES"(texture : UInt32, s : Int32, t : Int32) : Void
  fun multi_tex_coord2xv_oes = "glMultiTexCoord2xvOES"(texture : UInt32, coords : Int32*) : Void
  fun multi_tex_coord3b_oes = "glMultiTexCoord3bOES"(texture : UInt32, s : Int8, t : Int8, r : Int8) : Void
  fun multi_tex_coord3bv_oes = "glMultiTexCoord3bvOES"(texture : UInt32, coords : Int8*) : Void
  fun multi_tex_coord3d = "glMultiTexCoord3d"(target : UInt32, s : Float64, t : Float64, r : Float64) : Void
  fun multi_tex_coord3d_arb = "glMultiTexCoord3dARB"(target : UInt32, s : Float64, t : Float64, r : Float64) : Void
  fun multi_tex_coord3dv = "glMultiTexCoord3dv"(target : UInt32, v : Float64*) : Void
  fun multi_tex_coord3dv_arb = "glMultiTexCoord3dvARB"(target : UInt32, v : Float64*) : Void
  fun multi_tex_coord3f = "glMultiTexCoord3f"(target : UInt32, s : Float32, t : Float32, r : Float32) : Void
  fun multi_tex_coord3f_arb = "glMultiTexCoord3fARB"(target : UInt32, s : Float32, t : Float32, r : Float32) : Void
  fun multi_tex_coord3fv = "glMultiTexCoord3fv"(target : UInt32, v : Float32*) : Void
  fun multi_tex_coord3fv_arb = "glMultiTexCoord3fvARB"(target : UInt32, v : Float32*) : Void
  fun multi_tex_coord3h_nv = "glMultiTexCoord3hNV"(target : UInt32, s : UInt16, t : UInt16, r : UInt16) : Void
  fun multi_tex_coord3hv_nv = "glMultiTexCoord3hvNV"(target : UInt32, v : UInt16*) : Void
  fun multi_tex_coord3i = "glMultiTexCoord3i"(target : UInt32, s : Int32, t : Int32, r : Int32) : Void
  fun multi_tex_coord3i_arb = "glMultiTexCoord3iARB"(target : UInt32, s : Int32, t : Int32, r : Int32) : Void
  fun multi_tex_coord3iv = "glMultiTexCoord3iv"(target : UInt32, v : Int32*) : Void
  fun multi_tex_coord3iv_arb = "glMultiTexCoord3ivARB"(target : UInt32, v : Int32*) : Void
  fun multi_tex_coord3s = "glMultiTexCoord3s"(target : UInt32, s : Int16, t : Int16, r : Int16) : Void
  fun multi_tex_coord3s_arb = "glMultiTexCoord3sARB"(target : UInt32, s : Int16, t : Int16, r : Int16) : Void
  fun multi_tex_coord3sv = "glMultiTexCoord3sv"(target : UInt32, v : Int16*) : Void
  fun multi_tex_coord3sv_arb = "glMultiTexCoord3svARB"(target : UInt32, v : Int16*) : Void
  fun multi_tex_coord3x_oes = "glMultiTexCoord3xOES"(texture : UInt32, s : Int32, t : Int32, r : Int32) : Void
  fun multi_tex_coord3xv_oes = "glMultiTexCoord3xvOES"(texture : UInt32, coords : Int32*) : Void
  fun multi_tex_coord4b_oes = "glMultiTexCoord4bOES"(texture : UInt32, s : Int8, t : Int8, r : Int8, q : Int8) : Void
  fun multi_tex_coord4bv_oes = "glMultiTexCoord4bvOES"(texture : UInt32, coords : Int8*) : Void
  fun multi_tex_coord4d = "glMultiTexCoord4d"(target : UInt32, s : Float64, t : Float64, r : Float64, q : Float64) : Void
  fun multi_tex_coord4d_arb = "glMultiTexCoord4dARB"(target : UInt32, s : Float64, t : Float64, r : Float64, q : Float64) : Void
  fun multi_tex_coord4dv = "glMultiTexCoord4dv"(target : UInt32, v : Float64*) : Void
  fun multi_tex_coord4dv_arb = "glMultiTexCoord4dvARB"(target : UInt32, v : Float64*) : Void
  fun multi_tex_coord4f = "glMultiTexCoord4f"(target : UInt32, s : Float32, t : Float32, r : Float32, q : Float32) : Void
  fun multi_tex_coord4f_arb = "glMultiTexCoord4fARB"(target : UInt32, s : Float32, t : Float32, r : Float32, q : Float32) : Void
  fun multi_tex_coord4fv = "glMultiTexCoord4fv"(target : UInt32, v : Float32*) : Void
  fun multi_tex_coord4fv_arb = "glMultiTexCoord4fvARB"(target : UInt32, v : Float32*) : Void
  fun multi_tex_coord4h_nv = "glMultiTexCoord4hNV"(target : UInt32, s : UInt16, t : UInt16, r : UInt16, q : UInt16) : Void
  fun multi_tex_coord4hv_nv = "glMultiTexCoord4hvNV"(target : UInt32, v : UInt16*) : Void
  fun multi_tex_coord4i = "glMultiTexCoord4i"(target : UInt32, s : Int32, t : Int32, r : Int32, q : Int32) : Void
  fun multi_tex_coord4i_arb = "glMultiTexCoord4iARB"(target : UInt32, s : Int32, t : Int32, r : Int32, q : Int32) : Void
  fun multi_tex_coord4iv = "glMultiTexCoord4iv"(target : UInt32, v : Int32*) : Void
  fun multi_tex_coord4iv_arb = "glMultiTexCoord4ivARB"(target : UInt32, v : Int32*) : Void
  fun multi_tex_coord4s = "glMultiTexCoord4s"(target : UInt32, s : Int16, t : Int16, r : Int16, q : Int16) : Void
  fun multi_tex_coord4s_arb = "glMultiTexCoord4sARB"(target : UInt32, s : Int16, t : Int16, r : Int16, q : Int16) : Void
  fun multi_tex_coord4sv = "glMultiTexCoord4sv"(target : UInt32, v : Int16*) : Void
  fun multi_tex_coord4sv_arb = "glMultiTexCoord4svARB"(target : UInt32, v : Int16*) : Void
  fun multi_tex_coord4x = "glMultiTexCoord4x"(texture : UInt32, s : Int32, t : Int32, r : Int32, q : Int32) : Void
  fun multi_tex_coord4x_oes = "glMultiTexCoord4xOES"(texture : UInt32, s : Int32, t : Int32, r : Int32, q : Int32) : Void
  fun multi_tex_coord4xv_oes = "glMultiTexCoord4xvOES"(texture : UInt32, coords : Int32*) : Void
  fun multi_tex_coord_p1ui = "glMultiTexCoordP1ui"(texture : UInt32, type : UInt32, coords : UInt32) : Void
  fun multi_tex_coord_p1uiv = "glMultiTexCoordP1uiv"(texture : UInt32, type : UInt32, coords : UInt32*) : Void
  fun multi_tex_coord_p2ui = "glMultiTexCoordP2ui"(texture : UInt32, type : UInt32, coords : UInt32) : Void
  fun multi_tex_coord_p2uiv = "glMultiTexCoordP2uiv"(texture : UInt32, type : UInt32, coords : UInt32*) : Void
  fun multi_tex_coord_p3ui = "glMultiTexCoordP3ui"(texture : UInt32, type : UInt32, coords : UInt32) : Void
  fun multi_tex_coord_p3uiv = "glMultiTexCoordP3uiv"(texture : UInt32, type : UInt32, coords : UInt32*) : Void
  fun multi_tex_coord_p4ui = "glMultiTexCoordP4ui"(texture : UInt32, type : UInt32, coords : UInt32) : Void
  fun multi_tex_coord_p4uiv = "glMultiTexCoordP4uiv"(texture : UInt32, type : UInt32, coords : UInt32*) : Void
  fun multi_tex_coord_pointer_ext = "glMultiTexCoordPointerEXT"(texunit : UInt32, size : Int32, type : UInt32, stride : Int32, pointer : Void*) : Void
  fun multi_tex_envf_ext = "glMultiTexEnvfEXT"(texunit : UInt32, target : UInt32, pname : UInt32, param : Float32) : Void
  fun multi_tex_envfv_ext = "glMultiTexEnvfvEXT"(texunit : UInt32, target : UInt32, pname : UInt32, params : Float32*) : Void
  fun multi_tex_envi_ext = "glMultiTexEnviEXT"(texunit : UInt32, target : UInt32, pname : UInt32, param : Int32) : Void
  fun multi_tex_enviv_ext = "glMultiTexEnvivEXT"(texunit : UInt32, target : UInt32, pname : UInt32, params : Int32*) : Void
  fun multi_tex_gend_ext = "glMultiTexGendEXT"(texunit : UInt32, coord : UInt32, pname : UInt32, param : Float64) : Void
  fun multi_tex_gendv_ext = "glMultiTexGendvEXT"(texunit : UInt32, coord : UInt32, pname : UInt32, params : Float64*) : Void
  fun multi_tex_genf_ext = "glMultiTexGenfEXT"(texunit : UInt32, coord : UInt32, pname : UInt32, param : Float32) : Void
  fun multi_tex_genfv_ext = "glMultiTexGenfvEXT"(texunit : UInt32, coord : UInt32, pname : UInt32, params : Float32*) : Void
  fun multi_tex_geni_ext = "glMultiTexGeniEXT"(texunit : UInt32, coord : UInt32, pname : UInt32, param : Int32) : Void
  fun multi_tex_geniv_ext = "glMultiTexGenivEXT"(texunit : UInt32, coord : UInt32, pname : UInt32, params : Int32*) : Void
  fun multi_tex_image1dext = "glMultiTexImage1DEXT"(texunit : UInt32, target : UInt32, level : Int32, internalformat : Int32, width : Int32, border : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun multi_tex_image2dext = "glMultiTexImage2DEXT"(texunit : UInt32, target : UInt32, level : Int32, internalformat : Int32, width : Int32, height : Int32, border : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun multi_tex_image3dext = "glMultiTexImage3DEXT"(texunit : UInt32, target : UInt32, level : Int32, internalformat : Int32, width : Int32, height : Int32, depth : Int32, border : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun multi_tex_parameter_iiv_ext = "glMultiTexParameterIivEXT"(texunit : UInt32, target : UInt32, pname : UInt32, params : Int32*) : Void
  fun multi_tex_parameter_iuiv_ext = "glMultiTexParameterIuivEXT"(texunit : UInt32, target : UInt32, pname : UInt32, params : UInt32*) : Void
  fun multi_tex_parameterf_ext = "glMultiTexParameterfEXT"(texunit : UInt32, target : UInt32, pname : UInt32, param : Float32) : Void
  fun multi_tex_parameterfv_ext = "glMultiTexParameterfvEXT"(texunit : UInt32, target : UInt32, pname : UInt32, params : Float32*) : Void
  fun multi_tex_parameteri_ext = "glMultiTexParameteriEXT"(texunit : UInt32, target : UInt32, pname : UInt32, param : Int32) : Void
  fun multi_tex_parameteriv_ext = "glMultiTexParameterivEXT"(texunit : UInt32, target : UInt32, pname : UInt32, params : Int32*) : Void
  fun multi_tex_renderbuffer_ext = "glMultiTexRenderbufferEXT"(texunit : UInt32, target : UInt32, renderbuffer : UInt32) : Void
  fun multi_tex_sub_image1dext = "glMultiTexSubImage1DEXT"(texunit : UInt32, target : UInt32, level : Int32, xoffset : Int32, width : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun multi_tex_sub_image2dext = "glMultiTexSubImage2DEXT"(texunit : UInt32, target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, width : Int32, height : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun multi_tex_sub_image3dext = "glMultiTexSubImage3DEXT"(texunit : UInt32, target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun named_buffer_data = "glNamedBufferData"(buffer : UInt32, size : Int32, data : Void*, usage : UInt32) : Void
  fun named_buffer_data_ext = "glNamedBufferDataEXT"(buffer : UInt32, size : Int32, data : Void*, usage : UInt32) : Void
  fun named_buffer_page_commitment_arb = "glNamedBufferPageCommitmentARB"(buffer : UInt32, offset : Int32, size : Int32, commit : UInt8) : Void
  fun named_buffer_page_commitment_ext = "glNamedBufferPageCommitmentEXT"(buffer : UInt32, offset : Int32, size : Int32, commit : UInt8) : Void
  fun named_buffer_storage = "glNamedBufferStorage"(buffer : UInt32, size : Int32, data : Void*, flags : UInt32) : Void
  fun named_buffer_storage_ext = "glNamedBufferStorageEXT"(buffer : UInt32, size : Int32, data : Void*, flags : UInt32) : Void
  fun named_buffer_sub_data = "glNamedBufferSubData"(buffer : UInt32, offset : Int32, size : Int32, data : Void*) : Void
  fun named_buffer_sub_data_ext = "glNamedBufferSubDataEXT"(buffer : UInt32, offset : Int32, size : Int32, data : Void*) : Void
  fun named_copy_buffer_sub_data_ext = "glNamedCopyBufferSubDataEXT"(readBuffer : UInt32, writeBuffer : UInt32, readOffset : Int32, writeOffset : Int32, size : Int32) : Void
  fun named_framebuffer_draw_buffer = "glNamedFramebufferDrawBuffer"(framebuffer : UInt32, buf : UInt32) : Void
  fun named_framebuffer_draw_buffers = "glNamedFramebufferDrawBuffers"(framebuffer : UInt32, n : Int32, bufs : UInt32*) : Void
  fun named_framebuffer_parameteri = "glNamedFramebufferParameteri"(framebuffer : UInt32, pname : UInt32, param : Int32) : Void
  fun named_framebuffer_parameteri_ext = "glNamedFramebufferParameteriEXT"(framebuffer : UInt32, pname : UInt32, param : Int32) : Void
  fun named_framebuffer_read_buffer = "glNamedFramebufferReadBuffer"(framebuffer : UInt32, src : UInt32) : Void
  fun named_framebuffer_renderbuffer = "glNamedFramebufferRenderbuffer"(framebuffer : UInt32, attachment : UInt32, renderbuffertarget : UInt32, renderbuffer : UInt32) : Void
  fun named_framebuffer_renderbuffer_ext = "glNamedFramebufferRenderbufferEXT"(framebuffer : UInt32, attachment : UInt32, renderbuffertarget : UInt32, renderbuffer : UInt32) : Void
  fun named_framebuffer_sample_locationsfv_arb = "glNamedFramebufferSampleLocationsfvARB"(framebuffer : UInt32, start : UInt32, count : Int32, v : Float32*) : Void
  fun named_framebuffer_sample_locationsfv_nv = "glNamedFramebufferSampleLocationsfvNV"(framebuffer : UInt32, start : UInt32, count : Int32, v : Float32*) : Void
  fun named_framebuffer_texture = "glNamedFramebufferTexture"(framebuffer : UInt32, attachment : UInt32, texture : UInt32, level : Int32) : Void
  fun named_framebuffer_texture1dext = "glNamedFramebufferTexture1DEXT"(framebuffer : UInt32, attachment : UInt32, textarget : UInt32, texture : UInt32, level : Int32) : Void
  fun named_framebuffer_texture2dext = "glNamedFramebufferTexture2DEXT"(framebuffer : UInt32, attachment : UInt32, textarget : UInt32, texture : UInt32, level : Int32) : Void
  fun named_framebuffer_texture3dext = "glNamedFramebufferTexture3DEXT"(framebuffer : UInt32, attachment : UInt32, textarget : UInt32, texture : UInt32, level : Int32, zoffset : Int32) : Void
  fun named_framebuffer_texture_ext = "glNamedFramebufferTextureEXT"(framebuffer : UInt32, attachment : UInt32, texture : UInt32, level : Int32) : Void
  fun named_framebuffer_texture_face_ext = "glNamedFramebufferTextureFaceEXT"(framebuffer : UInt32, attachment : UInt32, texture : UInt32, level : Int32, face : UInt32) : Void
  fun named_framebuffer_texture_layer = "glNamedFramebufferTextureLayer"(framebuffer : UInt32, attachment : UInt32, texture : UInt32, level : Int32, layer : Int32) : Void
  fun named_framebuffer_texture_layer_ext = "glNamedFramebufferTextureLayerEXT"(framebuffer : UInt32, attachment : UInt32, texture : UInt32, level : Int32, layer : Int32) : Void
  fun named_program_local_parameter4d_ext = "glNamedProgramLocalParameter4dEXT"(program : UInt32, target : UInt32, index : UInt32, x : Float64, y : Float64, z : Float64, w : Float64) : Void
  fun named_program_local_parameter4dv_ext = "glNamedProgramLocalParameter4dvEXT"(program : UInt32, target : UInt32, index : UInt32, params : Float64*) : Void
  fun named_program_local_parameter4f_ext = "glNamedProgramLocalParameter4fEXT"(program : UInt32, target : UInt32, index : UInt32, x : Float32, y : Float32, z : Float32, w : Float32) : Void
  fun named_program_local_parameter4fv_ext = "glNamedProgramLocalParameter4fvEXT"(program : UInt32, target : UInt32, index : UInt32, params : Float32*) : Void
  fun named_program_local_parameter_i4i_ext = "glNamedProgramLocalParameterI4iEXT"(program : UInt32, target : UInt32, index : UInt32, x : Int32, y : Int32, z : Int32, w : Int32) : Void
  fun named_program_local_parameter_i4iv_ext = "glNamedProgramLocalParameterI4ivEXT"(program : UInt32, target : UInt32, index : UInt32, params : Int32*) : Void
  fun named_program_local_parameter_i4ui_ext = "glNamedProgramLocalParameterI4uiEXT"(program : UInt32, target : UInt32, index : UInt32, x : UInt32, y : UInt32, z : UInt32, w : UInt32) : Void
  fun named_program_local_parameter_i4uiv_ext = "glNamedProgramLocalParameterI4uivEXT"(program : UInt32, target : UInt32, index : UInt32, params : UInt32*) : Void
  fun named_program_local_parameters4fv_ext = "glNamedProgramLocalParameters4fvEXT"(program : UInt32, target : UInt32, index : UInt32, count : Int32, params : Float32*) : Void
  fun named_program_local_parameters_i4iv_ext = "glNamedProgramLocalParametersI4ivEXT"(program : UInt32, target : UInt32, index : UInt32, count : Int32, params : Int32*) : Void
  fun named_program_local_parameters_i4uiv_ext = "glNamedProgramLocalParametersI4uivEXT"(program : UInt32, target : UInt32, index : UInt32, count : Int32, params : UInt32*) : Void
  fun named_program_string_ext = "glNamedProgramStringEXT"(program : UInt32, target : UInt32, format : UInt32, len : Int32, string : Void*) : Void
  fun named_renderbuffer_storage = "glNamedRenderbufferStorage"(renderbuffer : UInt32, internalformat : UInt32, width : Int32, height : Int32) : Void
  fun named_renderbuffer_storage_ext = "glNamedRenderbufferStorageEXT"(renderbuffer : UInt32, internalformat : UInt32, width : Int32, height : Int32) : Void
  fun named_renderbuffer_storage_multisample = "glNamedRenderbufferStorageMultisample"(renderbuffer : UInt32, samples : Int32, internalformat : UInt32, width : Int32, height : Int32) : Void
  fun named_renderbuffer_storage_multisample_coverage_ext = "glNamedRenderbufferStorageMultisampleCoverageEXT"(renderbuffer : UInt32, coverageSamples : Int32, colorSamples : Int32, internalformat : UInt32, width : Int32, height : Int32) : Void
  fun named_renderbuffer_storage_multisample_ext = "glNamedRenderbufferStorageMultisampleEXT"(renderbuffer : UInt32, samples : Int32, internalformat : UInt32, width : Int32, height : Int32) : Void
  fun named_string_arb = "glNamedStringARB"(type : UInt32, namelen : Int32, name : UInt8*, stringlen : Int32, string : UInt8*) : Void
  fun new_list = "glNewList"(list : UInt32, mode : UInt32) : Void
  fun new_object_buffer_ati = "glNewObjectBufferATI"(size : Int32, pointer : Void*, usage : UInt32) : UInt32
  fun normal3b = "glNormal3b"(nx : Int8, ny : Int8, nz : Int8) : Void
  fun normal3bv = "glNormal3bv"(v : Int8*) : Void
  fun normal3d = "glNormal3d"(nx : Float64, ny : Float64, nz : Float64) : Void
  fun normal3dv = "glNormal3dv"(v : Float64*) : Void
  fun normal3f = "glNormal3f"(nx : Float32, ny : Float32, nz : Float32) : Void
  fun normal3f_vertex3f_sun = "glNormal3fVertex3fSUN"(nx : Float32, ny : Float32, nz : Float32, x : Float32, y : Float32, z : Float32) : Void
  fun normal3f_vertex3fv_sun = "glNormal3fVertex3fvSUN"(n : Float32*, v : Float32*) : Void
  fun normal3fv = "glNormal3fv"(v : Float32*) : Void
  fun normal3h_nv = "glNormal3hNV"(nx : UInt16, ny : UInt16, nz : UInt16) : Void
  fun normal3hv_nv = "glNormal3hvNV"(v : UInt16*) : Void
  fun normal3i = "glNormal3i"(nx : Int32, ny : Int32, nz : Int32) : Void
  fun normal3iv = "glNormal3iv"(v : Int32*) : Void
  fun normal3s = "glNormal3s"(nx : Int16, ny : Int16, nz : Int16) : Void
  fun normal3sv = "glNormal3sv"(v : Int16*) : Void
  fun normal3x = "glNormal3x"(nx : Int32, ny : Int32, nz : Int32) : Void
  fun normal3x_oes = "glNormal3xOES"(nx : Int32, ny : Int32, nz : Int32) : Void
  fun normal3xv_oes = "glNormal3xvOES"(coords : Int32*) : Void
  fun normal_format_nv = "glNormalFormatNV"(type : UInt32, stride : Int32) : Void
  fun normal_p3ui = "glNormalP3ui"(type : UInt32, coords : UInt32) : Void
  fun normal_p3uiv = "glNormalP3uiv"(type : UInt32, coords : UInt32*) : Void
  fun normal_pointer = "glNormalPointer"(type : UInt32, stride : Int32, pointer : Void*) : Void
  fun normal_pointer_ext = "glNormalPointerEXT"(type : UInt32, stride : Int32, count : Int32, pointer : Void*) : Void
  fun normal_pointer_list_ibm = "glNormalPointerListIBM"(type : UInt32, stride : Int32, pointer : Void*, ptrstride : Int32) : Void
  fun normal_pointerv_intel = "glNormalPointervINTEL"(type : UInt32, pointer : Void*) : Void
  fun normal_stream3b_ati = "glNormalStream3bATI"(stream : UInt32, nx : Int8, ny : Int8, nz : Int8) : Void
  fun normal_stream3bv_ati = "glNormalStream3bvATI"(stream : UInt32, coords : Int8*) : Void
  fun normal_stream3d_ati = "glNormalStream3dATI"(stream : UInt32, nx : Float64, ny : Float64, nz : Float64) : Void
  fun normal_stream3dv_ati = "glNormalStream3dvATI"(stream : UInt32, coords : Float64*) : Void
  fun normal_stream3f_ati = "glNormalStream3fATI"(stream : UInt32, nx : Float32, ny : Float32, nz : Float32) : Void
  fun normal_stream3fv_ati = "glNormalStream3fvATI"(stream : UInt32, coords : Float32*) : Void
  fun normal_stream3i_ati = "glNormalStream3iATI"(stream : UInt32, nx : Int32, ny : Int32, nz : Int32) : Void
  fun normal_stream3iv_ati = "glNormalStream3ivATI"(stream : UInt32, coords : Int32*) : Void
  fun normal_stream3s_ati = "glNormalStream3sATI"(stream : UInt32, nx : Int16, ny : Int16, nz : Int16) : Void
  fun normal_stream3sv_ati = "glNormalStream3svATI"(stream : UInt32, coords : Int16*) : Void
  fun object_label = "glObjectLabel"(identifier : UInt32, name : UInt32, length : Int32, label : UInt8*) : Void
  fun object_label_khr = "glObjectLabelKHR"(identifier : UInt32, name : UInt32, length : Int32, label : UInt8*) : Void
  fun object_ptr_label = "glObjectPtrLabel"(ptr : Void*, length : Int32, label : UInt8*) : Void
  fun object_ptr_label_khr = "glObjectPtrLabelKHR"(ptr : Void*, length : Int32, label : UInt8*) : Void
  fun object_purgeable_apple = "glObjectPurgeableAPPLE"(objectType : UInt32, name : UInt32, option : UInt32) : UInt32
  fun object_unpurgeable_apple = "glObjectUnpurgeableAPPLE"(objectType : UInt32, name : UInt32, option : UInt32) : UInt32
  fun ortho = "glOrtho"(left : Float64, right : Float64, bottom : Float64, top : Float64, zNear : Float64, zFar : Float64) : Void
  fun orthof = "glOrthof"(l : Float32, r : Float32, b : Float32, t : Float32, n : Float32, f : Float32) : Void
  fun orthof_oes = "glOrthofOES"(l : Float32, r : Float32, b : Float32, t : Float32, n : Float32, f : Float32) : Void
  fun orthox = "glOrthox"(l : Int32, r : Int32, b : Int32, t : Int32, n : Int32, f : Int32) : Void
  fun orthox_oes = "glOrthoxOES"(l : Int32, r : Int32, b : Int32, t : Int32, n : Int32, f : Int32) : Void
  fun pn_trianglesf_ati = "glPNTrianglesfATI"(pname : UInt32, param : Float32) : Void
  fun pn_trianglesi_ati = "glPNTrianglesiATI"(pname : UInt32, param : Int32) : Void
  fun pass_tex_coord_ati = "glPassTexCoordATI"(dst : UInt32, coord : UInt32, swizzle : UInt32) : Void
  fun pass_through = "glPassThrough"(token : Float32) : Void
  fun pass_throughx_oes = "glPassThroughxOES"(token : Int32) : Void
  fun patch_parameterfv = "glPatchParameterfv"(pname : UInt32, values : Float32*) : Void
  fun patch_parameteri = "glPatchParameteri"(pname : UInt32, value : Int32) : Void
  fun patch_parameteri_ext = "glPatchParameteriEXT"(pname : UInt32, value : Int32) : Void
  fun patch_parameteri_oes = "glPatchParameteriOES"(pname : UInt32, value : Int32) : Void
  fun path_color_gen_nv = "glPathColorGenNV"(color : UInt32, genMode : UInt32, colorFormat : UInt32, coeffs : Float32*) : Void
  fun path_commands_nv = "glPathCommandsNV"(path : UInt32, numCommands : Int32, commands : UInt8*, numCoords : Int32, coordType : UInt32, coords : Void*) : Void
  fun path_coords_nv = "glPathCoordsNV"(path : UInt32, numCoords : Int32, coordType : UInt32, coords : Void*) : Void
  fun path_cover_depth_func_nv = "glPathCoverDepthFuncNV"(func : UInt32) : Void
  fun path_dash_array_nv = "glPathDashArrayNV"(path : UInt32, dashCount : Int32, dashArray : Float32*) : Void
  fun path_fog_gen_nv = "glPathFogGenNV"(genMode : UInt32) : Void
  fun path_glyph_index_array_nv = "glPathGlyphIndexArrayNV"(firstPathName : UInt32, fontTarget : UInt32, fontName : Void*, fontStyle : UInt32, firstGlyphIndex : UInt32, numGlyphs : Int32, pathParameterTemplate : UInt32, emScale : Float32) : UInt32
  fun path_glyph_index_range_nv = "glPathGlyphIndexRangeNV"(fontTarget : UInt32, fontName : Void*, fontStyle : UInt32, pathParameterTemplate : UInt32, emScale : Float32, baseAndCount : UInt32*) : UInt32
  fun path_glyph_range_nv = "glPathGlyphRangeNV"(firstPathName : UInt32, fontTarget : UInt32, fontName : Void*, fontStyle : UInt32, firstGlyph : UInt32, numGlyphs : Int32, handleMissingGlyphs : UInt32, pathParameterTemplate : UInt32, emScale : Float32) : Void
  fun path_glyphs_nv = "glPathGlyphsNV"(firstPathName : UInt32, fontTarget : UInt32, fontName : Void*, fontStyle : UInt32, numGlyphs : Int32, type : UInt32, charcodes : Void*, handleMissingGlyphs : UInt32, pathParameterTemplate : UInt32, emScale : Float32) : Void
  fun path_memory_glyph_index_array_nv = "glPathMemoryGlyphIndexArrayNV"(firstPathName : UInt32, fontTarget : UInt32, fontSize : Int32, fontData : Void*, faceIndex : Int32, firstGlyphIndex : UInt32, numGlyphs : Int32, pathParameterTemplate : UInt32, emScale : Float32) : UInt32
  fun path_parameterf_nv = "glPathParameterfNV"(path : UInt32, pname : UInt32, value : Float32) : Void
  fun path_parameterfv_nv = "glPathParameterfvNV"(path : UInt32, pname : UInt32, value : Float32*) : Void
  fun path_parameteri_nv = "glPathParameteriNV"(path : UInt32, pname : UInt32, value : Int32) : Void
  fun path_parameteriv_nv = "glPathParameterivNV"(path : UInt32, pname : UInt32, value : Int32*) : Void
  fun path_stencil_depth_offset_nv = "glPathStencilDepthOffsetNV"(factor : Float32, units : Float32) : Void
  fun path_stencil_func_nv = "glPathStencilFuncNV"(func : UInt32, ref : Int32, mask : UInt32) : Void
  fun path_string_nv = "glPathStringNV"(path : UInt32, format : UInt32, length : Int32, pathString : Void*) : Void
  fun path_sub_commands_nv = "glPathSubCommandsNV"(path : UInt32, commandStart : Int32, commandsToDelete : Int32, numCommands : Int32, commands : UInt8*, numCoords : Int32, coordType : UInt32, coords : Void*) : Void
  fun path_sub_coords_nv = "glPathSubCoordsNV"(path : UInt32, coordStart : Int32, numCoords : Int32, coordType : UInt32, coords : Void*) : Void
  fun path_tex_gen_nv = "glPathTexGenNV"(texCoordSet : UInt32, genMode : UInt32, components : Int32, coeffs : Float32*) : Void
  fun pause_transform_feedback = "glPauseTransformFeedback" : Void
  fun pause_transform_feedback_nv = "glPauseTransformFeedbackNV" : Void
  fun pixel_data_range_nv = "glPixelDataRangeNV"(target : UInt32, length : Int32, pointer : Void*) : Void
  fun pixel_mapfv = "glPixelMapfv"(map : UInt32, mapsize : Int32, values : Float32*) : Void
  fun pixel_mapuiv = "glPixelMapuiv"(map : UInt32, mapsize : Int32, values : UInt32*) : Void
  fun pixel_mapusv = "glPixelMapusv"(map : UInt32, mapsize : Int32, values : UInt16*) : Void
  fun pixel_mapx = "glPixelMapx"(map : UInt32, size : Int32, values : Int32*) : Void
  fun pixel_storef = "glPixelStoref"(pname : UInt32, param : Float32) : Void
  fun pixel_storei = "glPixelStorei"(pname : UInt32, param : Int32) : Void
  fun pixel_storex = "glPixelStorex"(pname : UInt32, param : Int32) : Void
  fun pixel_tex_gen_parameterf_sgis = "glPixelTexGenParameterfSGIS"(pname : UInt32, param : Float32) : Void
  fun pixel_tex_gen_parameterfv_sgis = "glPixelTexGenParameterfvSGIS"(pname : UInt32, params : Float32*) : Void
  fun pixel_tex_gen_parameteri_sgis = "glPixelTexGenParameteriSGIS"(pname : UInt32, param : Int32) : Void
  fun pixel_tex_gen_parameteriv_sgis = "glPixelTexGenParameterivSGIS"(pname : UInt32, params : Int32*) : Void
  fun pixel_tex_gen_sgix = "glPixelTexGenSGIX"(mode : UInt32) : Void
  fun pixel_transferf = "glPixelTransferf"(pname : UInt32, param : Float32) : Void
  fun pixel_transferi = "glPixelTransferi"(pname : UInt32, param : Int32) : Void
  fun pixel_transferx_oes = "glPixelTransferxOES"(pname : UInt32, param : Int32) : Void
  fun pixel_transform_parameterf_ext = "glPixelTransformParameterfEXT"(target : UInt32, pname : UInt32, param : Float32) : Void
  fun pixel_transform_parameterfv_ext = "glPixelTransformParameterfvEXT"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun pixel_transform_parameteri_ext = "glPixelTransformParameteriEXT"(target : UInt32, pname : UInt32, param : Int32) : Void
  fun pixel_transform_parameteriv_ext = "glPixelTransformParameterivEXT"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun pixel_zoom = "glPixelZoom"(xfactor : Float32, yfactor : Float32) : Void
  fun pixel_zoomx_oes = "glPixelZoomxOES"(xfactor : Int32, yfactor : Int32) : Void
  fun point_along_path_nv = "glPointAlongPathNV"(path : UInt32, startSegment : Int32, numSegments : Int32, distance : Float32, x : Float32*, y : Float32*, tangentX : Float32*, tangentY : Float32*) : UInt8
  fun point_parameterf = "glPointParameterf"(pname : UInt32, param : Float32) : Void
  fun point_parameterf_arb = "glPointParameterfARB"(pname : UInt32, param : Float32) : Void
  fun point_parameterf_ext = "glPointParameterfEXT"(pname : UInt32, param : Float32) : Void
  fun point_parameterf_sgis = "glPointParameterfSGIS"(pname : UInt32, param : Float32) : Void
  fun point_parameterfv = "glPointParameterfv"(pname : UInt32, params : Float32*) : Void
  fun point_parameterfv_arb = "glPointParameterfvARB"(pname : UInt32, params : Float32*) : Void
  fun point_parameterfv_ext = "glPointParameterfvEXT"(pname : UInt32, params : Float32*) : Void
  fun point_parameterfv_sgis = "glPointParameterfvSGIS"(pname : UInt32, params : Float32*) : Void
  fun point_parameteri = "glPointParameteri"(pname : UInt32, param : Int32) : Void
  fun point_parameteri_nv = "glPointParameteriNV"(pname : UInt32, param : Int32) : Void
  fun point_parameteriv = "glPointParameteriv"(pname : UInt32, params : Int32*) : Void
  fun point_parameteriv_nv = "glPointParameterivNV"(pname : UInt32, params : Int32*) : Void
  fun point_parameterx = "glPointParameterx"(pname : UInt32, param : Int32) : Void
  fun point_parameterx_oes = "glPointParameterxOES"(pname : UInt32, param : Int32) : Void
  fun point_parameterxv = "glPointParameterxv"(pname : UInt32, params : Int32*) : Void
  fun point_parameterxv_oes = "glPointParameterxvOES"(pname : UInt32, params : Int32*) : Void
  fun point_size = "glPointSize"(size : Float32) : Void
  fun point_size_pointer_oes = "glPointSizePointerOES"(type : UInt32, stride : Int32, pointer : Void*) : Void
  fun point_sizex = "glPointSizex"(size : Int32) : Void
  fun point_sizex_oes = "glPointSizexOES"(size : Int32) : Void
  fun poll_async_sgix = "glPollAsyncSGIX"(markerp : UInt32*) : Int32
  fun poll_instruments_sgix = "glPollInstrumentsSGIX"(marker_p : Int32*) : Int32
  fun polygon_mode = "glPolygonMode"(face : UInt32, mode : UInt32) : Void
  fun polygon_mode_nv = "glPolygonModeNV"(face : UInt32, mode : UInt32) : Void
  fun polygon_offset = "glPolygonOffset"(factor : Float32, units : Float32) : Void
  fun polygon_offset_clamp_ext = "glPolygonOffsetClampEXT"(factor : Float32, units : Float32, clamp : Float32) : Void
  fun polygon_offset_ext = "glPolygonOffsetEXT"(factor : Float32, bias : Float32) : Void
  fun polygon_offsetx = "glPolygonOffsetx"(factor : Int32, units : Int32) : Void
  fun polygon_offsetx_oes = "glPolygonOffsetxOES"(factor : Int32, units : Int32) : Void
  fun polygon_stipple = "glPolygonStipple"(mask : UInt8*) : Void
  fun pop_attrib = "glPopAttrib" : Void
  fun pop_client_attrib = "glPopClientAttrib" : Void
  fun pop_debug_group = "glPopDebugGroup" : Void
  fun pop_debug_group_khr = "glPopDebugGroupKHR" : Void
  fun pop_group_marker_ext = "glPopGroupMarkerEXT" : Void
  fun pop_matrix = "glPopMatrix" : Void
  fun pop_name = "glPopName" : Void
  fun present_frame_dual_fill_nv = "glPresentFrameDualFillNV"(video_slot : UInt32, minPresentTime : UInt64, beginPresentTimeId : UInt32, presentDurationId : UInt32, type : UInt32, target0 : UInt32, fill0 : UInt32, target1 : UInt32, fill1 : UInt32, target2 : UInt32, fill2 : UInt32, target3 : UInt32, fill3 : UInt32) : Void
  fun present_frame_keyed_nv = "glPresentFrameKeyedNV"(video_slot : UInt32, minPresentTime : UInt64, beginPresentTimeId : UInt32, presentDurationId : UInt32, type : UInt32, target0 : UInt32, fill0 : UInt32, key0 : UInt32, target1 : UInt32, fill1 : UInt32, key1 : UInt32) : Void
  fun primitive_bounding_box = "glPrimitiveBoundingBox"(minX : Float32, minY : Float32, minZ : Float32, minW : Float32, maxX : Float32, maxY : Float32, maxZ : Float32, maxW : Float32) : Void
  fun primitive_bounding_box_arb = "glPrimitiveBoundingBoxARB"(minX : Float32, minY : Float32, minZ : Float32, minW : Float32, maxX : Float32, maxY : Float32, maxZ : Float32, maxW : Float32) : Void
  fun primitive_bounding_box_ext = "glPrimitiveBoundingBoxEXT"(minX : Float32, minY : Float32, minZ : Float32, minW : Float32, maxX : Float32, maxY : Float32, maxZ : Float32, maxW : Float32) : Void
  fun primitive_bounding_box_oes = "glPrimitiveBoundingBoxOES"(minX : Float32, minY : Float32, minZ : Float32, minW : Float32, maxX : Float32, maxY : Float32, maxZ : Float32, maxW : Float32) : Void
  fun primitive_restart_index = "glPrimitiveRestartIndex"(index : UInt32) : Void
  fun primitive_restart_index_nv = "glPrimitiveRestartIndexNV"(index : UInt32) : Void
  fun primitive_restart_nv = "glPrimitiveRestartNV" : Void
  fun prioritize_textures = "glPrioritizeTextures"(n : Int32, textures : UInt32*, priorities : Float32*) : Void
  fun prioritize_textures_ext = "glPrioritizeTexturesEXT"(n : Int32, textures : UInt32*, priorities : Float32*) : Void
  fun prioritize_texturesx_oes = "glPrioritizeTexturesxOES"(n : Int32, textures : UInt32*, priorities : Int32*) : Void
  fun program_binary = "glProgramBinary"(program : UInt32, binaryFormat : UInt32, binary : Void*, length : Int32) : Void
  fun program_binary_oes = "glProgramBinaryOES"(program : UInt32, binaryFormat : UInt32, binary : Void*, length : Int32) : Void
  fun program_buffer_parameters_iiv_nv = "glProgramBufferParametersIivNV"(target : UInt32, bindingIndex : UInt32, wordIndex : UInt32, count : Int32, params : Int32*) : Void
  fun program_buffer_parameters_iuiv_nv = "glProgramBufferParametersIuivNV"(target : UInt32, bindingIndex : UInt32, wordIndex : UInt32, count : Int32, params : UInt32*) : Void
  fun program_buffer_parametersfv_nv = "glProgramBufferParametersfvNV"(target : UInt32, bindingIndex : UInt32, wordIndex : UInt32, count : Int32, params : Float32*) : Void
  fun program_env_parameter4d_arb = "glProgramEnvParameter4dARB"(target : UInt32, index : UInt32, x : Float64, y : Float64, z : Float64, w : Float64) : Void
  fun program_env_parameter4dv_arb = "glProgramEnvParameter4dvARB"(target : UInt32, index : UInt32, params : Float64*) : Void
  fun program_env_parameter4f_arb = "glProgramEnvParameter4fARB"(target : UInt32, index : UInt32, x : Float32, y : Float32, z : Float32, w : Float32) : Void
  fun program_env_parameter4fv_arb = "glProgramEnvParameter4fvARB"(target : UInt32, index : UInt32, params : Float32*) : Void
  fun program_env_parameter_i4i_nv = "glProgramEnvParameterI4iNV"(target : UInt32, index : UInt32, x : Int32, y : Int32, z : Int32, w : Int32) : Void
  fun program_env_parameter_i4iv_nv = "glProgramEnvParameterI4ivNV"(target : UInt32, index : UInt32, params : Int32*) : Void
  fun program_env_parameter_i4ui_nv = "glProgramEnvParameterI4uiNV"(target : UInt32, index : UInt32, x : UInt32, y : UInt32, z : UInt32, w : UInt32) : Void
  fun program_env_parameter_i4uiv_nv = "glProgramEnvParameterI4uivNV"(target : UInt32, index : UInt32, params : UInt32*) : Void
  fun program_env_parameters4fv_ext = "glProgramEnvParameters4fvEXT"(target : UInt32, index : UInt32, count : Int32, params : Float32*) : Void
  fun program_env_parameters_i4iv_nv = "glProgramEnvParametersI4ivNV"(target : UInt32, index : UInt32, count : Int32, params : Int32*) : Void
  fun program_env_parameters_i4uiv_nv = "glProgramEnvParametersI4uivNV"(target : UInt32, index : UInt32, count : Int32, params : UInt32*) : Void
  fun program_local_parameter4d_arb = "glProgramLocalParameter4dARB"(target : UInt32, index : UInt32, x : Float64, y : Float64, z : Float64, w : Float64) : Void
  fun program_local_parameter4dv_arb = "glProgramLocalParameter4dvARB"(target : UInt32, index : UInt32, params : Float64*) : Void
  fun program_local_parameter4f_arb = "glProgramLocalParameter4fARB"(target : UInt32, index : UInt32, x : Float32, y : Float32, z : Float32, w : Float32) : Void
  fun program_local_parameter4fv_arb = "glProgramLocalParameter4fvARB"(target : UInt32, index : UInt32, params : Float32*) : Void
  fun program_local_parameter_i4i_nv = "glProgramLocalParameterI4iNV"(target : UInt32, index : UInt32, x : Int32, y : Int32, z : Int32, w : Int32) : Void
  fun program_local_parameter_i4iv_nv = "glProgramLocalParameterI4ivNV"(target : UInt32, index : UInt32, params : Int32*) : Void
  fun program_local_parameter_i4ui_nv = "glProgramLocalParameterI4uiNV"(target : UInt32, index : UInt32, x : UInt32, y : UInt32, z : UInt32, w : UInt32) : Void
  fun program_local_parameter_i4uiv_nv = "glProgramLocalParameterI4uivNV"(target : UInt32, index : UInt32, params : UInt32*) : Void
  fun program_local_parameters4fv_ext = "glProgramLocalParameters4fvEXT"(target : UInt32, index : UInt32, count : Int32, params : Float32*) : Void
  fun program_local_parameters_i4iv_nv = "glProgramLocalParametersI4ivNV"(target : UInt32, index : UInt32, count : Int32, params : Int32*) : Void
  fun program_local_parameters_i4uiv_nv = "glProgramLocalParametersI4uivNV"(target : UInt32, index : UInt32, count : Int32, params : UInt32*) : Void
  fun program_named_parameter4d_nv = "glProgramNamedParameter4dNV"(id : UInt32, len : Int32, name : UInt8*, x : Float64, y : Float64, z : Float64, w : Float64) : Void
  fun program_named_parameter4dv_nv = "glProgramNamedParameter4dvNV"(id : UInt32, len : Int32, name : UInt8*, v : Float64*) : Void
  fun program_named_parameter4f_nv = "glProgramNamedParameter4fNV"(id : UInt32, len : Int32, name : UInt8*, x : Float32, y : Float32, z : Float32, w : Float32) : Void
  fun program_named_parameter4fv_nv = "glProgramNamedParameter4fvNV"(id : UInt32, len : Int32, name : UInt8*, v : Float32*) : Void
  fun program_parameter4d_nv = "glProgramParameter4dNV"(target : UInt32, index : UInt32, x : Float64, y : Float64, z : Float64, w : Float64) : Void
  fun program_parameter4dv_nv = "glProgramParameter4dvNV"(target : UInt32, index : UInt32, v : Float64*) : Void
  fun program_parameter4f_nv = "glProgramParameter4fNV"(target : UInt32, index : UInt32, x : Float32, y : Float32, z : Float32, w : Float32) : Void
  fun program_parameter4fv_nv = "glProgramParameter4fvNV"(target : UInt32, index : UInt32, v : Float32*) : Void
  fun program_parameteri = "glProgramParameteri"(program : UInt32, pname : UInt32, value : Int32) : Void
  fun program_parameteri_arb = "glProgramParameteriARB"(program : UInt32, pname : UInt32, value : Int32) : Void
  fun program_parameteri_ext = "glProgramParameteriEXT"(program : UInt32, pname : UInt32, value : Int32) : Void
  fun program_parameters4dv_nv = "glProgramParameters4dvNV"(target : UInt32, index : UInt32, count : Int32, v : Float64*) : Void
  fun program_parameters4fv_nv = "glProgramParameters4fvNV"(target : UInt32, index : UInt32, count : Int32, v : Float32*) : Void
  fun program_path_fragment_input_gen_nv = "glProgramPathFragmentInputGenNV"(program : UInt32, location : Int32, genMode : UInt32, components : Int32, coeffs : Float32*) : Void
  fun program_string_arb = "glProgramStringARB"(target : UInt32, format : UInt32, len : Int32, string : Void*) : Void
  fun program_subroutine_parametersuiv_nv = "glProgramSubroutineParametersuivNV"(target : UInt32, count : Int32, params : UInt32*) : Void
  fun program_uniform1d = "glProgramUniform1d"(program : UInt32, location : Int32, v0 : Float64) : Void
  fun program_uniform1d_ext = "glProgramUniform1dEXT"(program : UInt32, location : Int32, x : Float64) : Void
  fun program_uniform1dv = "glProgramUniform1dv"(program : UInt32, location : Int32, count : Int32, value : Float64*) : Void
  fun program_uniform1dv_ext = "glProgramUniform1dvEXT"(program : UInt32, location : Int32, count : Int32, value : Float64*) : Void
  fun program_uniform1f = "glProgramUniform1f"(program : UInt32, location : Int32, v0 : Float32) : Void
  fun program_uniform1f_ext = "glProgramUniform1fEXT"(program : UInt32, location : Int32, v0 : Float32) : Void
  fun program_uniform1fv = "glProgramUniform1fv"(program : UInt32, location : Int32, count : Int32, value : Float32*) : Void
  fun program_uniform1fv_ext = "glProgramUniform1fvEXT"(program : UInt32, location : Int32, count : Int32, value : Float32*) : Void
  fun program_uniform1i = "glProgramUniform1i"(program : UInt32, location : Int32, v0 : Int32) : Void
  fun program_uniform1i64arb = "glProgramUniform1i64ARB"(program : UInt32, location : Int32, x : Int64) : Void
  fun program_uniform1i64nv = "glProgramUniform1i64NV"(program : UInt32, location : Int32, x : Int64) : Void
  fun program_uniform1i64v_arb = "glProgramUniform1i64vARB"(program : UInt32, location : Int32, count : Int32, value : Int64*) : Void
  fun program_uniform1i64v_nv = "glProgramUniform1i64vNV"(program : UInt32, location : Int32, count : Int32, value : Int64*) : Void
  fun program_uniform1i_ext = "glProgramUniform1iEXT"(program : UInt32, location : Int32, v0 : Int32) : Void
  fun program_uniform1iv = "glProgramUniform1iv"(program : UInt32, location : Int32, count : Int32, value : Int32*) : Void
  fun program_uniform1iv_ext = "glProgramUniform1ivEXT"(program : UInt32, location : Int32, count : Int32, value : Int32*) : Void
  fun program_uniform1ui = "glProgramUniform1ui"(program : UInt32, location : Int32, v0 : UInt32) : Void
  fun program_uniform1ui64arb = "glProgramUniform1ui64ARB"(program : UInt32, location : Int32, x : UInt64) : Void
  fun program_uniform1ui64nv = "glProgramUniform1ui64NV"(program : UInt32, location : Int32, x : UInt64) : Void
  fun program_uniform1ui64v_arb = "glProgramUniform1ui64vARB"(program : UInt32, location : Int32, count : Int32, value : UInt64*) : Void
  fun program_uniform1ui64v_nv = "glProgramUniform1ui64vNV"(program : UInt32, location : Int32, count : Int32, value : UInt64*) : Void
  fun program_uniform1ui_ext = "glProgramUniform1uiEXT"(program : UInt32, location : Int32, v0 : UInt32) : Void
  fun program_uniform1uiv = "glProgramUniform1uiv"(program : UInt32, location : Int32, count : Int32, value : UInt32*) : Void
  fun program_uniform1uiv_ext = "glProgramUniform1uivEXT"(program : UInt32, location : Int32, count : Int32, value : UInt32*) : Void
  fun program_uniform2d = "glProgramUniform2d"(program : UInt32, location : Int32, v0 : Float64, v1 : Float64) : Void
  fun program_uniform2d_ext = "glProgramUniform2dEXT"(program : UInt32, location : Int32, x : Float64, y : Float64) : Void
  fun program_uniform2dv = "glProgramUniform2dv"(program : UInt32, location : Int32, count : Int32, value : Float64*) : Void
  fun program_uniform2dv_ext = "glProgramUniform2dvEXT"(program : UInt32, location : Int32, count : Int32, value : Float64*) : Void
  fun program_uniform2f = "glProgramUniform2f"(program : UInt32, location : Int32, v0 : Float32, v1 : Float32) : Void
  fun program_uniform2f_ext = "glProgramUniform2fEXT"(program : UInt32, location : Int32, v0 : Float32, v1 : Float32) : Void
  fun program_uniform2fv = "glProgramUniform2fv"(program : UInt32, location : Int32, count : Int32, value : Float32*) : Void
  fun program_uniform2fv_ext = "glProgramUniform2fvEXT"(program : UInt32, location : Int32, count : Int32, value : Float32*) : Void
  fun program_uniform2i = "glProgramUniform2i"(program : UInt32, location : Int32, v0 : Int32, v1 : Int32) : Void
  fun program_uniform2i64arb = "glProgramUniform2i64ARB"(program : UInt32, location : Int32, x : Int64, y : Int64) : Void
  fun program_uniform2i64nv = "glProgramUniform2i64NV"(program : UInt32, location : Int32, x : Int64, y : Int64) : Void
  fun program_uniform2i64v_arb = "glProgramUniform2i64vARB"(program : UInt32, location : Int32, count : Int32, value : Int64*) : Void
  fun program_uniform2i64v_nv = "glProgramUniform2i64vNV"(program : UInt32, location : Int32, count : Int32, value : Int64*) : Void
  fun program_uniform2i_ext = "glProgramUniform2iEXT"(program : UInt32, location : Int32, v0 : Int32, v1 : Int32) : Void
  fun program_uniform2iv = "glProgramUniform2iv"(program : UInt32, location : Int32, count : Int32, value : Int32*) : Void
  fun program_uniform2iv_ext = "glProgramUniform2ivEXT"(program : UInt32, location : Int32, count : Int32, value : Int32*) : Void
  fun program_uniform2ui = "glProgramUniform2ui"(program : UInt32, location : Int32, v0 : UInt32, v1 : UInt32) : Void
  fun program_uniform2ui64arb = "glProgramUniform2ui64ARB"(program : UInt32, location : Int32, x : UInt64, y : UInt64) : Void
  fun program_uniform2ui64nv = "glProgramUniform2ui64NV"(program : UInt32, location : Int32, x : UInt64, y : UInt64) : Void
  fun program_uniform2ui64v_arb = "glProgramUniform2ui64vARB"(program : UInt32, location : Int32, count : Int32, value : UInt64*) : Void
  fun program_uniform2ui64v_nv = "glProgramUniform2ui64vNV"(program : UInt32, location : Int32, count : Int32, value : UInt64*) : Void
  fun program_uniform2ui_ext = "glProgramUniform2uiEXT"(program : UInt32, location : Int32, v0 : UInt32, v1 : UInt32) : Void
  fun program_uniform2uiv = "glProgramUniform2uiv"(program : UInt32, location : Int32, count : Int32, value : UInt32*) : Void
  fun program_uniform2uiv_ext = "glProgramUniform2uivEXT"(program : UInt32, location : Int32, count : Int32, value : UInt32*) : Void
  fun program_uniform3d = "glProgramUniform3d"(program : UInt32, location : Int32, v0 : Float64, v1 : Float64, v2 : Float64) : Void
  fun program_uniform3d_ext = "glProgramUniform3dEXT"(program : UInt32, location : Int32, x : Float64, y : Float64, z : Float64) : Void
  fun program_uniform3dv = "glProgramUniform3dv"(program : UInt32, location : Int32, count : Int32, value : Float64*) : Void
  fun program_uniform3dv_ext = "glProgramUniform3dvEXT"(program : UInt32, location : Int32, count : Int32, value : Float64*) : Void
  fun program_uniform3f = "glProgramUniform3f"(program : UInt32, location : Int32, v0 : Float32, v1 : Float32, v2 : Float32) : Void
  fun program_uniform3f_ext = "glProgramUniform3fEXT"(program : UInt32, location : Int32, v0 : Float32, v1 : Float32, v2 : Float32) : Void
  fun program_uniform3fv = "glProgramUniform3fv"(program : UInt32, location : Int32, count : Int32, value : Float32*) : Void
  fun program_uniform3fv_ext = "glProgramUniform3fvEXT"(program : UInt32, location : Int32, count : Int32, value : Float32*) : Void
  fun program_uniform3i = "glProgramUniform3i"(program : UInt32, location : Int32, v0 : Int32, v1 : Int32, v2 : Int32) : Void
  fun program_uniform3i64arb = "glProgramUniform3i64ARB"(program : UInt32, location : Int32, x : Int64, y : Int64, z : Int64) : Void
  fun program_uniform3i64nv = "glProgramUniform3i64NV"(program : UInt32, location : Int32, x : Int64, y : Int64, z : Int64) : Void
  fun program_uniform3i64v_arb = "glProgramUniform3i64vARB"(program : UInt32, location : Int32, count : Int32, value : Int64*) : Void
  fun program_uniform3i64v_nv = "glProgramUniform3i64vNV"(program : UInt32, location : Int32, count : Int32, value : Int64*) : Void
  fun program_uniform3i_ext = "glProgramUniform3iEXT"(program : UInt32, location : Int32, v0 : Int32, v1 : Int32, v2 : Int32) : Void
  fun program_uniform3iv = "glProgramUniform3iv"(program : UInt32, location : Int32, count : Int32, value : Int32*) : Void
  fun program_uniform3iv_ext = "glProgramUniform3ivEXT"(program : UInt32, location : Int32, count : Int32, value : Int32*) : Void
  fun program_uniform3ui = "glProgramUniform3ui"(program : UInt32, location : Int32, v0 : UInt32, v1 : UInt32, v2 : UInt32) : Void
  fun program_uniform3ui64arb = "glProgramUniform3ui64ARB"(program : UInt32, location : Int32, x : UInt64, y : UInt64, z : UInt64) : Void
  fun program_uniform3ui64nv = "glProgramUniform3ui64NV"(program : UInt32, location : Int32, x : UInt64, y : UInt64, z : UInt64) : Void
  fun program_uniform3ui64v_arb = "glProgramUniform3ui64vARB"(program : UInt32, location : Int32, count : Int32, value : UInt64*) : Void
  fun program_uniform3ui64v_nv = "glProgramUniform3ui64vNV"(program : UInt32, location : Int32, count : Int32, value : UInt64*) : Void
  fun program_uniform3ui_ext = "glProgramUniform3uiEXT"(program : UInt32, location : Int32, v0 : UInt32, v1 : UInt32, v2 : UInt32) : Void
  fun program_uniform3uiv = "glProgramUniform3uiv"(program : UInt32, location : Int32, count : Int32, value : UInt32*) : Void
  fun program_uniform3uiv_ext = "glProgramUniform3uivEXT"(program : UInt32, location : Int32, count : Int32, value : UInt32*) : Void
  fun program_uniform4d = "glProgramUniform4d"(program : UInt32, location : Int32, v0 : Float64, v1 : Float64, v2 : Float64, v3 : Float64) : Void
  fun program_uniform4d_ext = "glProgramUniform4dEXT"(program : UInt32, location : Int32, x : Float64, y : Float64, z : Float64, w : Float64) : Void
  fun program_uniform4dv = "glProgramUniform4dv"(program : UInt32, location : Int32, count : Int32, value : Float64*) : Void
  fun program_uniform4dv_ext = "glProgramUniform4dvEXT"(program : UInt32, location : Int32, count : Int32, value : Float64*) : Void
  fun program_uniform4f = "glProgramUniform4f"(program : UInt32, location : Int32, v0 : Float32, v1 : Float32, v2 : Float32, v3 : Float32) : Void
  fun program_uniform4f_ext = "glProgramUniform4fEXT"(program : UInt32, location : Int32, v0 : Float32, v1 : Float32, v2 : Float32, v3 : Float32) : Void
  fun program_uniform4fv = "glProgramUniform4fv"(program : UInt32, location : Int32, count : Int32, value : Float32*) : Void
  fun program_uniform4fv_ext = "glProgramUniform4fvEXT"(program : UInt32, location : Int32, count : Int32, value : Float32*) : Void
  fun program_uniform4i = "glProgramUniform4i"(program : UInt32, location : Int32, v0 : Int32, v1 : Int32, v2 : Int32, v3 : Int32) : Void
  fun program_uniform4i64arb = "glProgramUniform4i64ARB"(program : UInt32, location : Int32, x : Int64, y : Int64, z : Int64, w : Int64) : Void
  fun program_uniform4i64nv = "glProgramUniform4i64NV"(program : UInt32, location : Int32, x : Int64, y : Int64, z : Int64, w : Int64) : Void
  fun program_uniform4i64v_arb = "glProgramUniform4i64vARB"(program : UInt32, location : Int32, count : Int32, value : Int64*) : Void
  fun program_uniform4i64v_nv = "glProgramUniform4i64vNV"(program : UInt32, location : Int32, count : Int32, value : Int64*) : Void
  fun program_uniform4i_ext = "glProgramUniform4iEXT"(program : UInt32, location : Int32, v0 : Int32, v1 : Int32, v2 : Int32, v3 : Int32) : Void
  fun program_uniform4iv = "glProgramUniform4iv"(program : UInt32, location : Int32, count : Int32, value : Int32*) : Void
  fun program_uniform4iv_ext = "glProgramUniform4ivEXT"(program : UInt32, location : Int32, count : Int32, value : Int32*) : Void
  fun program_uniform4ui = "glProgramUniform4ui"(program : UInt32, location : Int32, v0 : UInt32, v1 : UInt32, v2 : UInt32, v3 : UInt32) : Void
  fun program_uniform4ui64arb = "glProgramUniform4ui64ARB"(program : UInt32, location : Int32, x : UInt64, y : UInt64, z : UInt64, w : UInt64) : Void
  fun program_uniform4ui64nv = "glProgramUniform4ui64NV"(program : UInt32, location : Int32, x : UInt64, y : UInt64, z : UInt64, w : UInt64) : Void
  fun program_uniform4ui64v_arb = "glProgramUniform4ui64vARB"(program : UInt32, location : Int32, count : Int32, value : UInt64*) : Void
  fun program_uniform4ui64v_nv = "glProgramUniform4ui64vNV"(program : UInt32, location : Int32, count : Int32, value : UInt64*) : Void
  fun program_uniform4ui_ext = "glProgramUniform4uiEXT"(program : UInt32, location : Int32, v0 : UInt32, v1 : UInt32, v2 : UInt32, v3 : UInt32) : Void
  fun program_uniform4uiv = "glProgramUniform4uiv"(program : UInt32, location : Int32, count : Int32, value : UInt32*) : Void
  fun program_uniform4uiv_ext = "glProgramUniform4uivEXT"(program : UInt32, location : Int32, count : Int32, value : UInt32*) : Void
  fun program_uniform_handleui64arb = "glProgramUniformHandleui64ARB"(program : UInt32, location : Int32, value : UInt64) : Void
  fun program_uniform_handleui64img = "glProgramUniformHandleui64IMG"(program : UInt32, location : Int32, value : UInt64) : Void
  fun program_uniform_handleui64nv = "glProgramUniformHandleui64NV"(program : UInt32, location : Int32, value : UInt64) : Void
  fun program_uniform_handleui64v_arb = "glProgramUniformHandleui64vARB"(program : UInt32, location : Int32, count : Int32, values : UInt64*) : Void
  fun program_uniform_handleui64v_img = "glProgramUniformHandleui64vIMG"(program : UInt32, location : Int32, count : Int32, values : UInt64*) : Void
  fun program_uniform_handleui64v_nv = "glProgramUniformHandleui64vNV"(program : UInt32, location : Int32, count : Int32, values : UInt64*) : Void
  fun program_uniform_matrix2dv = "glProgramUniformMatrix2dv"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun program_uniform_matrix2dv_ext = "glProgramUniformMatrix2dvEXT"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun program_uniform_matrix2fv = "glProgramUniformMatrix2fv"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun program_uniform_matrix2fv_ext = "glProgramUniformMatrix2fvEXT"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun program_uniform_matrix2x3dv = "glProgramUniformMatrix2x3dv"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun program_uniform_matrix2x3dv_ext = "glProgramUniformMatrix2x3dvEXT"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun program_uniform_matrix2x3fv = "glProgramUniformMatrix2x3fv"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun program_uniform_matrix2x3fv_ext = "glProgramUniformMatrix2x3fvEXT"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun program_uniform_matrix2x4dv = "glProgramUniformMatrix2x4dv"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun program_uniform_matrix2x4dv_ext = "glProgramUniformMatrix2x4dvEXT"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun program_uniform_matrix2x4fv = "glProgramUniformMatrix2x4fv"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun program_uniform_matrix2x4fv_ext = "glProgramUniformMatrix2x4fvEXT"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun program_uniform_matrix3dv = "glProgramUniformMatrix3dv"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun program_uniform_matrix3dv_ext = "glProgramUniformMatrix3dvEXT"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun program_uniform_matrix3fv = "glProgramUniformMatrix3fv"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun program_uniform_matrix3fv_ext = "glProgramUniformMatrix3fvEXT"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun program_uniform_matrix3x2dv = "glProgramUniformMatrix3x2dv"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun program_uniform_matrix3x2dv_ext = "glProgramUniformMatrix3x2dvEXT"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun program_uniform_matrix3x2fv = "glProgramUniformMatrix3x2fv"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun program_uniform_matrix3x2fv_ext = "glProgramUniformMatrix3x2fvEXT"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun program_uniform_matrix3x4dv = "glProgramUniformMatrix3x4dv"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun program_uniform_matrix3x4dv_ext = "glProgramUniformMatrix3x4dvEXT"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun program_uniform_matrix3x4fv = "glProgramUniformMatrix3x4fv"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun program_uniform_matrix3x4fv_ext = "glProgramUniformMatrix3x4fvEXT"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun program_uniform_matrix4dv = "glProgramUniformMatrix4dv"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun program_uniform_matrix4dv_ext = "glProgramUniformMatrix4dvEXT"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun program_uniform_matrix4fv = "glProgramUniformMatrix4fv"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun program_uniform_matrix4fv_ext = "glProgramUniformMatrix4fvEXT"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun program_uniform_matrix4x2dv = "glProgramUniformMatrix4x2dv"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun program_uniform_matrix4x2dv_ext = "glProgramUniformMatrix4x2dvEXT"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun program_uniform_matrix4x2fv = "glProgramUniformMatrix4x2fv"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun program_uniform_matrix4x2fv_ext = "glProgramUniformMatrix4x2fvEXT"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun program_uniform_matrix4x3dv = "glProgramUniformMatrix4x3dv"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun program_uniform_matrix4x3dv_ext = "glProgramUniformMatrix4x3dvEXT"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun program_uniform_matrix4x3fv = "glProgramUniformMatrix4x3fv"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun program_uniform_matrix4x3fv_ext = "glProgramUniformMatrix4x3fvEXT"(program : UInt32, location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun program_uniformui64nv = "glProgramUniformui64NV"(program : UInt32, location : Int32, value : UInt64) : Void
  fun program_uniformui64v_nv = "glProgramUniformui64vNV"(program : UInt32, location : Int32, count : Int32, value : UInt64*) : Void
  fun program_vertex_limit_nv = "glProgramVertexLimitNV"(target : UInt32, limit : Int32) : Void
  fun provoking_vertex = "glProvokingVertex"(mode : UInt32) : Void
  fun provoking_vertex_ext = "glProvokingVertexEXT"(mode : UInt32) : Void
  fun push_attrib = "glPushAttrib"(mask : UInt32) : Void
  fun push_client_attrib = "glPushClientAttrib"(mask : UInt32) : Void
  fun push_client_attrib_default_ext = "glPushClientAttribDefaultEXT"(mask : UInt32) : Void
  fun push_debug_group = "glPushDebugGroup"(source : UInt32, id : UInt32, length : Int32, message : UInt8*) : Void
  fun push_debug_group_khr = "glPushDebugGroupKHR"(source : UInt32, id : UInt32, length : Int32, message : UInt8*) : Void
  fun push_group_marker_ext = "glPushGroupMarkerEXT"(length : Int32, marker : UInt8*) : Void
  fun push_matrix = "glPushMatrix" : Void
  fun push_name = "glPushName"(name : UInt32) : Void
  fun query_counter = "glQueryCounter"(id : UInt32, target : UInt32) : Void
  fun query_counter_ext = "glQueryCounterEXT"(id : UInt32, target : UInt32) : Void
  fun query_matrixx_oes = "glQueryMatrixxOES"(mantissa : Int32*, exponent : Int32*) : UInt32
  fun query_object_parameterui_amd = "glQueryObjectParameteruiAMD"(target : UInt32, id : UInt32, pname : UInt32, param : UInt32) : Void
  fun raster_pos2d = "glRasterPos2d"(x : Float64, y : Float64) : Void
  fun raster_pos2dv = "glRasterPos2dv"(v : Float64*) : Void
  fun raster_pos2f = "glRasterPos2f"(x : Float32, y : Float32) : Void
  fun raster_pos2fv = "glRasterPos2fv"(v : Float32*) : Void
  fun raster_pos2i = "glRasterPos2i"(x : Int32, y : Int32) : Void
  fun raster_pos2iv = "glRasterPos2iv"(v : Int32*) : Void
  fun raster_pos2s = "glRasterPos2s"(x : Int16, y : Int16) : Void
  fun raster_pos2sv = "glRasterPos2sv"(v : Int16*) : Void
  fun raster_pos2x_oes = "glRasterPos2xOES"(x : Int32, y : Int32) : Void
  fun raster_pos2xv_oes = "glRasterPos2xvOES"(coords : Int32*) : Void
  fun raster_pos3d = "glRasterPos3d"(x : Float64, y : Float64, z : Float64) : Void
  fun raster_pos3dv = "glRasterPos3dv"(v : Float64*) : Void
  fun raster_pos3f = "glRasterPos3f"(x : Float32, y : Float32, z : Float32) : Void
  fun raster_pos3fv = "glRasterPos3fv"(v : Float32*) : Void
  fun raster_pos3i = "glRasterPos3i"(x : Int32, y : Int32, z : Int32) : Void
  fun raster_pos3iv = "glRasterPos3iv"(v : Int32*) : Void
  fun raster_pos3s = "glRasterPos3s"(x : Int16, y : Int16, z : Int16) : Void
  fun raster_pos3sv = "glRasterPos3sv"(v : Int16*) : Void
  fun raster_pos3x_oes = "glRasterPos3xOES"(x : Int32, y : Int32, z : Int32) : Void
  fun raster_pos3xv_oes = "glRasterPos3xvOES"(coords : Int32*) : Void
  fun raster_pos4d = "glRasterPos4d"(x : Float64, y : Float64, z : Float64, w : Float64) : Void
  fun raster_pos4dv = "glRasterPos4dv"(v : Float64*) : Void
  fun raster_pos4f = "glRasterPos4f"(x : Float32, y : Float32, z : Float32, w : Float32) : Void
  fun raster_pos4fv = "glRasterPos4fv"(v : Float32*) : Void
  fun raster_pos4i = "glRasterPos4i"(x : Int32, y : Int32, z : Int32, w : Int32) : Void
  fun raster_pos4iv = "glRasterPos4iv"(v : Int32*) : Void
  fun raster_pos4s = "glRasterPos4s"(x : Int16, y : Int16, z : Int16, w : Int16) : Void
  fun raster_pos4sv = "glRasterPos4sv"(v : Int16*) : Void
  fun raster_pos4x_oes = "glRasterPos4xOES"(x : Int32, y : Int32, z : Int32, w : Int32) : Void
  fun raster_pos4xv_oes = "glRasterPos4xvOES"(coords : Int32*) : Void
  fun raster_samples_ext = "glRasterSamplesEXT"(samples : UInt32, fixedsamplelocations : UInt8) : Void
  fun read_buffer = "glReadBuffer"(src : UInt32) : Void
  fun read_buffer_indexed_ext = "glReadBufferIndexedEXT"(src : UInt32, index : Int32) : Void
  fun read_buffer_nv = "glReadBufferNV"(mode : UInt32) : Void
  fun read_instruments_sgix = "glReadInstrumentsSGIX"(marker : Int32) : Void
  fun read_pixels = "glReadPixels"(x : Int32, y : Int32, width : Int32, height : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun readn_pixels = "glReadnPixels"(x : Int32, y : Int32, width : Int32, height : Int32, format : UInt32, type : UInt32, bufSize : Int32, data : Void*) : Void
  fun readn_pixels_arb = "glReadnPixelsARB"(x : Int32, y : Int32, width : Int32, height : Int32, format : UInt32, type : UInt32, bufSize : Int32, data : Void*) : Void
  fun readn_pixels_ext = "glReadnPixelsEXT"(x : Int32, y : Int32, width : Int32, height : Int32, format : UInt32, type : UInt32, bufSize : Int32, data : Void*) : Void
  fun readn_pixels_khr = "glReadnPixelsKHR"(x : Int32, y : Int32, width : Int32, height : Int32, format : UInt32, type : UInt32, bufSize : Int32, data : Void*) : Void
  fun rectd = "glRectd"(x1 : Float64, y1 : Float64, x2 : Float64, y2 : Float64) : Void
  fun rectdv = "glRectdv"(v1 : Float64*, v2 : Float64*) : Void
  fun rectf = "glRectf"(x1 : Float32, y1 : Float32, x2 : Float32, y2 : Float32) : Void
  fun rectfv = "glRectfv"(v1 : Float32*, v2 : Float32*) : Void
  fun recti = "glRecti"(x1 : Int32, y1 : Int32, x2 : Int32, y2 : Int32) : Void
  fun rectiv = "glRectiv"(v1 : Int32*, v2 : Int32*) : Void
  fun rects = "glRects"(x1 : Int16, y1 : Int16, x2 : Int16, y2 : Int16) : Void
  fun rectsv = "glRectsv"(v1 : Int16*, v2 : Int16*) : Void
  fun rectx_oes = "glRectxOES"(x1 : Int32, y1 : Int32, x2 : Int32, y2 : Int32) : Void
  fun rectxv_oes = "glRectxvOES"(v1 : Int32*, v2 : Int32*) : Void
  fun reference_plane_sgix = "glReferencePlaneSGIX"(equation : Float64*) : Void
  fun release_shader_compiler = "glReleaseShaderCompiler" : Void
  fun render_mode = "glRenderMode"(mode : UInt32) : Int32
  fun renderbuffer_storage = "glRenderbufferStorage"(target : UInt32, internalformat : UInt32, width : Int32, height : Int32) : Void
  fun renderbuffer_storage_ext = "glRenderbufferStorageEXT"(target : UInt32, internalformat : UInt32, width : Int32, height : Int32) : Void
  fun renderbuffer_storage_multisample = "glRenderbufferStorageMultisample"(target : UInt32, samples : Int32, internalformat : UInt32, width : Int32, height : Int32) : Void
  fun renderbuffer_storage_multisample_angle = "glRenderbufferStorageMultisampleANGLE"(target : UInt32, samples : Int32, internalformat : UInt32, width : Int32, height : Int32) : Void
  fun renderbuffer_storage_multisample_apple = "glRenderbufferStorageMultisampleAPPLE"(target : UInt32, samples : Int32, internalformat : UInt32, width : Int32, height : Int32) : Void
  fun renderbuffer_storage_multisample_coverage_nv = "glRenderbufferStorageMultisampleCoverageNV"(target : UInt32, coverageSamples : Int32, colorSamples : Int32, internalformat : UInt32, width : Int32, height : Int32) : Void
  fun renderbuffer_storage_multisample_ext = "glRenderbufferStorageMultisampleEXT"(target : UInt32, samples : Int32, internalformat : UInt32, width : Int32, height : Int32) : Void
  fun renderbuffer_storage_multisample_img = "glRenderbufferStorageMultisampleIMG"(target : UInt32, samples : Int32, internalformat : UInt32, width : Int32, height : Int32) : Void
  fun renderbuffer_storage_multisample_nv = "glRenderbufferStorageMultisampleNV"(target : UInt32, samples : Int32, internalformat : UInt32, width : Int32, height : Int32) : Void
  fun renderbuffer_storage_oes = "glRenderbufferStorageOES"(target : UInt32, internalformat : UInt32, width : Int32, height : Int32) : Void
  fun replacement_code_pointer_sun = "glReplacementCodePointerSUN"(type : UInt32, stride : Int32, pointer : Void*) : Void
  fun replacement_codeub_sun = "glReplacementCodeubSUN"(code : UInt8) : Void
  fun replacement_codeubv_sun = "glReplacementCodeubvSUN"(code : UInt8*) : Void
  fun replacement_codeui_color3f_vertex3f_sun = "glReplacementCodeuiColor3fVertex3fSUN"(rc : UInt32, r : Float32, g : Float32, b : Float32, x : Float32, y : Float32, z : Float32) : Void
  fun replacement_codeui_color3f_vertex3fv_sun = "glReplacementCodeuiColor3fVertex3fvSUN"(rc : UInt32*, c : Float32*, v : Float32*) : Void
  fun replacement_codeui_color4f_normal3f_vertex3f_sun = "glReplacementCodeuiColor4fNormal3fVertex3fSUN"(rc : UInt32, r : Float32, g : Float32, b : Float32, a : Float32, nx : Float32, ny : Float32, nz : Float32, x : Float32, y : Float32, z : Float32) : Void
  fun replacement_codeui_color4f_normal3f_vertex3fv_sun = "glReplacementCodeuiColor4fNormal3fVertex3fvSUN"(rc : UInt32*, c : Float32*, n : Float32*, v : Float32*) : Void
  fun replacement_codeui_color4ub_vertex3f_sun = "glReplacementCodeuiColor4ubVertex3fSUN"(rc : UInt32, r : UInt8, g : UInt8, b : UInt8, a : UInt8, x : Float32, y : Float32, z : Float32) : Void
  fun replacement_codeui_color4ub_vertex3fv_sun = "glReplacementCodeuiColor4ubVertex3fvSUN"(rc : UInt32*, c : UInt8*, v : Float32*) : Void
  fun replacement_codeui_normal3f_vertex3f_sun = "glReplacementCodeuiNormal3fVertex3fSUN"(rc : UInt32, nx : Float32, ny : Float32, nz : Float32, x : Float32, y : Float32, z : Float32) : Void
  fun replacement_codeui_normal3f_vertex3fv_sun = "glReplacementCodeuiNormal3fVertex3fvSUN"(rc : UInt32*, n : Float32*, v : Float32*) : Void
  fun replacement_codeui_sun = "glReplacementCodeuiSUN"(code : UInt32) : Void
  fun replacement_codeui_tex_coord2f_color4f_normal3f_vertex3f_sun = "glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN"(rc : UInt32, s : Float32, t : Float32, r : Float32, g : Float32, b : Float32, a : Float32, nx : Float32, ny : Float32, nz : Float32, x : Float32, y : Float32, z : Float32) : Void
  fun replacement_codeui_tex_coord2f_color4f_normal3f_vertex3fv_sun = "glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN"(rc : UInt32*, tc : Float32*, c : Float32*, n : Float32*, v : Float32*) : Void
  fun replacement_codeui_tex_coord2f_normal3f_vertex3f_sun = "glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN"(rc : UInt32, s : Float32, t : Float32, nx : Float32, ny : Float32, nz : Float32, x : Float32, y : Float32, z : Float32) : Void
  fun replacement_codeui_tex_coord2f_normal3f_vertex3fv_sun = "glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN"(rc : UInt32*, tc : Float32*, n : Float32*, v : Float32*) : Void
  fun replacement_codeui_tex_coord2f_vertex3f_sun = "glReplacementCodeuiTexCoord2fVertex3fSUN"(rc : UInt32, s : Float32, t : Float32, x : Float32, y : Float32, z : Float32) : Void
  fun replacement_codeui_tex_coord2f_vertex3fv_sun = "glReplacementCodeuiTexCoord2fVertex3fvSUN"(rc : UInt32*, tc : Float32*, v : Float32*) : Void
  fun replacement_codeui_vertex3f_sun = "glReplacementCodeuiVertex3fSUN"(rc : UInt32, x : Float32, y : Float32, z : Float32) : Void
  fun replacement_codeui_vertex3fv_sun = "glReplacementCodeuiVertex3fvSUN"(rc : UInt32*, v : Float32*) : Void
  fun replacement_codeuiv_sun = "glReplacementCodeuivSUN"(code : UInt32*) : Void
  fun replacement_codeus_sun = "glReplacementCodeusSUN"(code : UInt16) : Void
  fun replacement_codeusv_sun = "glReplacementCodeusvSUN"(code : UInt16*) : Void
  fun request_resident_programs_nv = "glRequestResidentProgramsNV"(n : Int32, programs : UInt32*) : Void
  fun reset_histogram = "glResetHistogram"(target : UInt32) : Void
  fun reset_histogram_ext = "glResetHistogramEXT"(target : UInt32) : Void
  fun reset_minmax = "glResetMinmax"(target : UInt32) : Void
  fun reset_minmax_ext = "glResetMinmaxEXT"(target : UInt32) : Void
  fun resize_buffers_mesa = "glResizeBuffersMESA" : Void
  fun resolve_depth_values_nv = "glResolveDepthValuesNV" : Void
  fun resolve_multisample_framebuffer_apple = "glResolveMultisampleFramebufferAPPLE" : Void
  fun resume_transform_feedback = "glResumeTransformFeedback" : Void
  fun resume_transform_feedback_nv = "glResumeTransformFeedbackNV" : Void
  fun rotated = "glRotated"(angle : Float64, x : Float64, y : Float64, z : Float64) : Void
  fun rotatef = "glRotatef"(angle : Float32, x : Float32, y : Float32, z : Float32) : Void
  fun rotatex = "glRotatex"(angle : Int32, x : Int32, y : Int32, z : Int32) : Void
  fun rotatex_oes = "glRotatexOES"(angle : Int32, x : Int32, y : Int32, z : Int32) : Void
  fun sample_coverage = "glSampleCoverage"(value : Float32, invert : UInt8) : Void
  fun sample_coverage_arb = "glSampleCoverageARB"(value : Float32, invert : UInt8) : Void
  fun sample_coveragex = "glSampleCoveragex"(value : Int32, invert : UInt8) : Void
  fun sample_coveragex_oes = "glSampleCoveragexOES"(value : Int32, invert : UInt8) : Void
  fun sample_map_ati = "glSampleMapATI"(dst : UInt32, interp : UInt32, swizzle : UInt32) : Void
  fun sample_mask_ext = "glSampleMaskEXT"(value : Float32, invert : UInt8) : Void
  fun sample_mask_indexed_nv = "glSampleMaskIndexedNV"(index : UInt32, mask : UInt32) : Void
  fun sample_mask_sgis = "glSampleMaskSGIS"(value : Float32, invert : UInt8) : Void
  fun sample_maski = "glSampleMaski"(maskNumber : UInt32, mask : UInt32) : Void
  fun sample_pattern_ext = "glSamplePatternEXT"(pattern : UInt32) : Void
  fun sample_pattern_sgis = "glSamplePatternSGIS"(pattern : UInt32) : Void
  fun sampler_parameter_iiv = "glSamplerParameterIiv"(sampler : UInt32, pname : UInt32, param : Int32*) : Void
  fun sampler_parameter_iiv_ext = "glSamplerParameterIivEXT"(sampler : UInt32, pname : UInt32, param : Int32*) : Void
  fun sampler_parameter_iiv_oes = "glSamplerParameterIivOES"(sampler : UInt32, pname : UInt32, param : Int32*) : Void
  fun sampler_parameter_iuiv = "glSamplerParameterIuiv"(sampler : UInt32, pname : UInt32, param : UInt32*) : Void
  fun sampler_parameter_iuiv_ext = "glSamplerParameterIuivEXT"(sampler : UInt32, pname : UInt32, param : UInt32*) : Void
  fun sampler_parameter_iuiv_oes = "glSamplerParameterIuivOES"(sampler : UInt32, pname : UInt32, param : UInt32*) : Void
  fun sampler_parameterf = "glSamplerParameterf"(sampler : UInt32, pname : UInt32, param : Float32) : Void
  fun sampler_parameterfv = "glSamplerParameterfv"(sampler : UInt32, pname : UInt32, param : Float32*) : Void
  fun sampler_parameteri = "glSamplerParameteri"(sampler : UInt32, pname : UInt32, param : Int32) : Void
  fun sampler_parameteriv = "glSamplerParameteriv"(sampler : UInt32, pname : UInt32, param : Int32*) : Void
  fun scaled = "glScaled"(x : Float64, y : Float64, z : Float64) : Void
  fun scalef = "glScalef"(x : Float32, y : Float32, z : Float32) : Void
  fun scalex = "glScalex"(x : Int32, y : Int32, z : Int32) : Void
  fun scalex_oes = "glScalexOES"(x : Int32, y : Int32, z : Int32) : Void
  fun scissor = "glScissor"(x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun scissor_arrayv = "glScissorArrayv"(first : UInt32, count : Int32, v : Int32*) : Void
  fun scissor_arrayv_nv = "glScissorArrayvNV"(first : UInt32, count : Int32, v : Int32*) : Void
  fun scissor_arrayv_oes = "glScissorArrayvOES"(first : UInt32, count : Int32, v : Int32*) : Void
  fun scissor_indexed = "glScissorIndexed"(index : UInt32, left : Int32, bottom : Int32, width : Int32, height : Int32) : Void
  fun scissor_indexed_nv = "glScissorIndexedNV"(index : UInt32, left : Int32, bottom : Int32, width : Int32, height : Int32) : Void
  fun scissor_indexed_oes = "glScissorIndexedOES"(index : UInt32, left : Int32, bottom : Int32, width : Int32, height : Int32) : Void
  fun scissor_indexedv = "glScissorIndexedv"(index : UInt32, v : Int32*) : Void
  fun scissor_indexedv_nv = "glScissorIndexedvNV"(index : UInt32, v : Int32*) : Void
  fun scissor_indexedv_oes = "glScissorIndexedvOES"(index : UInt32, v : Int32*) : Void
  fun secondary_color3b = "glSecondaryColor3b"(red : Int8, green : Int8, blue : Int8) : Void
  fun secondary_color3b_ext = "glSecondaryColor3bEXT"(red : Int8, green : Int8, blue : Int8) : Void
  fun secondary_color3bv = "glSecondaryColor3bv"(v : Int8*) : Void
  fun secondary_color3bv_ext = "glSecondaryColor3bvEXT"(v : Int8*) : Void
  fun secondary_color3d = "glSecondaryColor3d"(red : Float64, green : Float64, blue : Float64) : Void
  fun secondary_color3d_ext = "glSecondaryColor3dEXT"(red : Float64, green : Float64, blue : Float64) : Void
  fun secondary_color3dv = "glSecondaryColor3dv"(v : Float64*) : Void
  fun secondary_color3dv_ext = "glSecondaryColor3dvEXT"(v : Float64*) : Void
  fun secondary_color3f = "glSecondaryColor3f"(red : Float32, green : Float32, blue : Float32) : Void
  fun secondary_color3f_ext = "glSecondaryColor3fEXT"(red : Float32, green : Float32, blue : Float32) : Void
  fun secondary_color3fv = "glSecondaryColor3fv"(v : Float32*) : Void
  fun secondary_color3fv_ext = "glSecondaryColor3fvEXT"(v : Float32*) : Void
  fun secondary_color3h_nv = "glSecondaryColor3hNV"(red : UInt16, green : UInt16, blue : UInt16) : Void
  fun secondary_color3hv_nv = "glSecondaryColor3hvNV"(v : UInt16*) : Void
  fun secondary_color3i = "glSecondaryColor3i"(red : Int32, green : Int32, blue : Int32) : Void
  fun secondary_color3i_ext = "glSecondaryColor3iEXT"(red : Int32, green : Int32, blue : Int32) : Void
  fun secondary_color3iv = "glSecondaryColor3iv"(v : Int32*) : Void
  fun secondary_color3iv_ext = "glSecondaryColor3ivEXT"(v : Int32*) : Void
  fun secondary_color3s = "glSecondaryColor3s"(red : Int16, green : Int16, blue : Int16) : Void
  fun secondary_color3s_ext = "glSecondaryColor3sEXT"(red : Int16, green : Int16, blue : Int16) : Void
  fun secondary_color3sv = "glSecondaryColor3sv"(v : Int16*) : Void
  fun secondary_color3sv_ext = "glSecondaryColor3svEXT"(v : Int16*) : Void
  fun secondary_color3ub = "glSecondaryColor3ub"(red : UInt8, green : UInt8, blue : UInt8) : Void
  fun secondary_color3ub_ext = "glSecondaryColor3ubEXT"(red : UInt8, green : UInt8, blue : UInt8) : Void
  fun secondary_color3ubv = "glSecondaryColor3ubv"(v : UInt8*) : Void
  fun secondary_color3ubv_ext = "glSecondaryColor3ubvEXT"(v : UInt8*) : Void
  fun secondary_color3ui = "glSecondaryColor3ui"(red : UInt32, green : UInt32, blue : UInt32) : Void
  fun secondary_color3ui_ext = "glSecondaryColor3uiEXT"(red : UInt32, green : UInt32, blue : UInt32) : Void
  fun secondary_color3uiv = "glSecondaryColor3uiv"(v : UInt32*) : Void
  fun secondary_color3uiv_ext = "glSecondaryColor3uivEXT"(v : UInt32*) : Void
  fun secondary_color3us = "glSecondaryColor3us"(red : UInt16, green : UInt16, blue : UInt16) : Void
  fun secondary_color3us_ext = "glSecondaryColor3usEXT"(red : UInt16, green : UInt16, blue : UInt16) : Void
  fun secondary_color3usv = "glSecondaryColor3usv"(v : UInt16*) : Void
  fun secondary_color3usv_ext = "glSecondaryColor3usvEXT"(v : UInt16*) : Void
  fun secondary_color_format_nv = "glSecondaryColorFormatNV"(size : Int32, type : UInt32, stride : Int32) : Void
  fun secondary_color_p3ui = "glSecondaryColorP3ui"(type : UInt32, color : UInt32) : Void
  fun secondary_color_p3uiv = "glSecondaryColorP3uiv"(type : UInt32, color : UInt32*) : Void
  fun secondary_color_pointer = "glSecondaryColorPointer"(size : Int32, type : UInt32, stride : Int32, pointer : Void*) : Void
  fun secondary_color_pointer_ext = "glSecondaryColorPointerEXT"(size : Int32, type : UInt32, stride : Int32, pointer : Void*) : Void
  fun secondary_color_pointer_list_ibm = "glSecondaryColorPointerListIBM"(size : Int32, type : UInt32, stride : Int32, pointer : Void*, ptrstride : Int32) : Void
  fun select_buffer = "glSelectBuffer"(size : Int32, buffer : UInt32*) : Void
  fun select_perf_monitor_counters_amd = "glSelectPerfMonitorCountersAMD"(monitor : UInt32, enable : UInt8, group : UInt32, numCounters : Int32, counterList : UInt32*) : Void
  fun separable_filter2d = "glSeparableFilter2D"(target : UInt32, internalformat : UInt32, width : Int32, height : Int32, format : UInt32, type : UInt32, row : Void*, column : Void*) : Void
  fun separable_filter2dext = "glSeparableFilter2DEXT"(target : UInt32, internalformat : UInt32, width : Int32, height : Int32, format : UInt32, type : UInt32, row : Void*, column : Void*) : Void
  fun set_fence_apple = "glSetFenceAPPLE"(fence : UInt32) : Void
  fun set_fence_nv = "glSetFenceNV"(fence : UInt32, condition : UInt32) : Void
  fun set_fragment_shader_constant_ati = "glSetFragmentShaderConstantATI"(dst : UInt32, value : Float32*) : Void
  fun set_invariant_ext = "glSetInvariantEXT"(id : UInt32, type : UInt32, addr : Void*) : Void
  fun set_local_constant_ext = "glSetLocalConstantEXT"(id : UInt32, type : UInt32, addr : Void*) : Void
  fun set_multisamplefv_amd = "glSetMultisamplefvAMD"(pname : UInt32, index : UInt32, val : Float32*) : Void
  fun shade_model = "glShadeModel"(mode : UInt32) : Void
  fun shader_binary = "glShaderBinary"(count : Int32, shaders : UInt32*, binaryformat : UInt32, binary : Void*, length : Int32) : Void
  fun shader_op1ext = "glShaderOp1EXT"(op : UInt32, res : UInt32, arg1 : UInt32) : Void
  fun shader_op2ext = "glShaderOp2EXT"(op : UInt32, res : UInt32, arg1 : UInt32, arg2 : UInt32) : Void
  fun shader_op3ext = "glShaderOp3EXT"(op : UInt32, res : UInt32, arg1 : UInt32, arg2 : UInt32, arg3 : UInt32) : Void
  fun shader_source = "glShaderSource"(shader : UInt32, count : Int32, string : UInt8**, length : Int32*) : Void
  fun shader_source_arb = "glShaderSourceARB"(shaderObj : Void*, count : Int32, string : UInt8*, length : Int32*) : Void
  fun shader_storage_block_binding = "glShaderStorageBlockBinding"(program : UInt32, storageBlockIndex : UInt32, storageBlockBinding : UInt32) : Void
  fun sharpen_tex_func_sgis = "glSharpenTexFuncSGIS"(target : UInt32, n : Int32, points : Float32*) : Void
  fun sprite_parameterf_sgix = "glSpriteParameterfSGIX"(pname : UInt32, param : Float32) : Void
  fun sprite_parameterfv_sgix = "glSpriteParameterfvSGIX"(pname : UInt32, params : Float32*) : Void
  fun sprite_parameteri_sgix = "glSpriteParameteriSGIX"(pname : UInt32, param : Int32) : Void
  fun sprite_parameteriv_sgix = "glSpriteParameterivSGIX"(pname : UInt32, params : Int32*) : Void
  fun start_instruments_sgix = "glStartInstrumentsSGIX" : Void
  fun start_tiling_qcom = "glStartTilingQCOM"(x : UInt32, y : UInt32, width : UInt32, height : UInt32, preserveMask : UInt32) : Void
  fun state_capture_nv = "glStateCaptureNV"(state : UInt32, mode : UInt32) : Void
  fun stencil_clear_tag_ext = "glStencilClearTagEXT"(stencilTagBits : Int32, stencilClearTag : UInt32) : Void
  fun stencil_fill_path_instanced_nv = "glStencilFillPathInstancedNV"(numPaths : Int32, pathNameType : UInt32, paths : Void*, pathBase : UInt32, fillMode : UInt32, mask : UInt32, transformType : UInt32, transformValues : Float32*) : Void
  fun stencil_fill_path_nv = "glStencilFillPathNV"(path : UInt32, fillMode : UInt32, mask : UInt32) : Void
  fun stencil_func = "glStencilFunc"(func : UInt32, ref : Int32, mask : UInt32) : Void
  fun stencil_func_separate = "glStencilFuncSeparate"(face : UInt32, func : UInt32, ref : Int32, mask : UInt32) : Void
  fun stencil_func_separate_ati = "glStencilFuncSeparateATI"(frontfunc : UInt32, backfunc : UInt32, ref : Int32, mask : UInt32) : Void
  fun stencil_mask = "glStencilMask"(mask : UInt32) : Void
  fun stencil_mask_separate = "glStencilMaskSeparate"(face : UInt32, mask : UInt32) : Void
  fun stencil_op = "glStencilOp"(fail : UInt32, zfail : UInt32, zpass : UInt32) : Void
  fun stencil_op_separate = "glStencilOpSeparate"(face : UInt32, sfail : UInt32, dpfail : UInt32, dppass : UInt32) : Void
  fun stencil_op_separate_ati = "glStencilOpSeparateATI"(face : UInt32, sfail : UInt32, dpfail : UInt32, dppass : UInt32) : Void
  fun stencil_op_value_amd = "glStencilOpValueAMD"(face : UInt32, value : UInt32) : Void
  fun stencil_stroke_path_instanced_nv = "glStencilStrokePathInstancedNV"(numPaths : Int32, pathNameType : UInt32, paths : Void*, pathBase : UInt32, reference : Int32, mask : UInt32, transformType : UInt32, transformValues : Float32*) : Void
  fun stencil_stroke_path_nv = "glStencilStrokePathNV"(path : UInt32, reference : Int32, mask : UInt32) : Void
  fun stencil_then_cover_fill_path_instanced_nv = "glStencilThenCoverFillPathInstancedNV"(numPaths : Int32, pathNameType : UInt32, paths : Void*, pathBase : UInt32, fillMode : UInt32, mask : UInt32, coverMode : UInt32, transformType : UInt32, transformValues : Float32*) : Void
  fun stencil_then_cover_fill_path_nv = "glStencilThenCoverFillPathNV"(path : UInt32, fillMode : UInt32, mask : UInt32, coverMode : UInt32) : Void
  fun stencil_then_cover_stroke_path_instanced_nv = "glStencilThenCoverStrokePathInstancedNV"(numPaths : Int32, pathNameType : UInt32, paths : Void*, pathBase : UInt32, reference : Int32, mask : UInt32, coverMode : UInt32, transformType : UInt32, transformValues : Float32*) : Void
  fun stencil_then_cover_stroke_path_nv = "glStencilThenCoverStrokePathNV"(path : UInt32, reference : Int32, mask : UInt32, coverMode : UInt32) : Void
  fun stop_instruments_sgix = "glStopInstrumentsSGIX"(marker : Int32) : Void
  fun string_marker_gremedy = "glStringMarkerGREMEDY"(len : Int32, string : Void*) : Void
  fun subpixel_precision_bias_nv = "glSubpixelPrecisionBiasNV"(xbits : UInt32, ybits : UInt32) : Void
  fun swizzle_ext = "glSwizzleEXT"(res : UInt32, in : UInt32, outX : UInt32, outY : UInt32, outZ : UInt32, outW : UInt32) : Void
  fun sync_texture_intel = "glSyncTextureINTEL"(texture : UInt32) : Void
  fun tag_sample_buffer_sgix = "glTagSampleBufferSGIX" : Void
  fun tangent3b_ext = "glTangent3bEXT"(tx : Int8, ty : Int8, tz : Int8) : Void
  fun tangent3bv_ext = "glTangent3bvEXT"(v : Int8*) : Void
  fun tangent3d_ext = "glTangent3dEXT"(tx : Float64, ty : Float64, tz : Float64) : Void
  fun tangent3dv_ext = "glTangent3dvEXT"(v : Float64*) : Void
  fun tangent3f_ext = "glTangent3fEXT"(tx : Float32, ty : Float32, tz : Float32) : Void
  fun tangent3fv_ext = "glTangent3fvEXT"(v : Float32*) : Void
  fun tangent3i_ext = "glTangent3iEXT"(tx : Int32, ty : Int32, tz : Int32) : Void
  fun tangent3iv_ext = "glTangent3ivEXT"(v : Int32*) : Void
  fun tangent3s_ext = "glTangent3sEXT"(tx : Int16, ty : Int16, tz : Int16) : Void
  fun tangent3sv_ext = "glTangent3svEXT"(v : Int16*) : Void
  fun tangent_pointer_ext = "glTangentPointerEXT"(type : UInt32, stride : Int32, pointer : Void*) : Void
  fun tbuffer_mask3dfx = "glTbufferMask3DFX"(mask : UInt32) : Void
  fun tessellation_factor_amd = "glTessellationFactorAMD"(factor : Float32) : Void
  fun tessellation_mode_amd = "glTessellationModeAMD"(mode : UInt32) : Void
  fun test_fence_apple = "glTestFenceAPPLE"(fence : UInt32) : UInt8
  fun test_fence_nv = "glTestFenceNV"(fence : UInt32) : UInt8
  fun test_object_apple = "glTestObjectAPPLE"(object : UInt32, name : UInt32) : UInt8
  fun tex_buffer = "glTexBuffer"(target : UInt32, internalformat : UInt32, buffer : UInt32) : Void
  fun tex_buffer_arb = "glTexBufferARB"(target : UInt32, internalformat : UInt32, buffer : UInt32) : Void
  fun tex_buffer_ext = "glTexBufferEXT"(target : UInt32, internalformat : UInt32, buffer : UInt32) : Void
  fun tex_buffer_oes = "glTexBufferOES"(target : UInt32, internalformat : UInt32, buffer : UInt32) : Void
  fun tex_buffer_range = "glTexBufferRange"(target : UInt32, internalformat : UInt32, buffer : UInt32, offset : Int32, size : Int32) : Void
  fun tex_buffer_range_ext = "glTexBufferRangeEXT"(target : UInt32, internalformat : UInt32, buffer : UInt32, offset : Int32, size : Int32) : Void
  fun tex_buffer_range_oes = "glTexBufferRangeOES"(target : UInt32, internalformat : UInt32, buffer : UInt32, offset : Int32, size : Int32) : Void
  fun tex_bump_parameterfv_ati = "glTexBumpParameterfvATI"(pname : UInt32, param : Float32*) : Void
  fun tex_bump_parameteriv_ati = "glTexBumpParameterivATI"(pname : UInt32, param : Int32*) : Void
  fun tex_coord1b_oes = "glTexCoord1bOES"(s : Int8) : Void
  fun tex_coord1bv_oes = "glTexCoord1bvOES"(coords : Int8*) : Void
  fun tex_coord1d = "glTexCoord1d"(s : Float64) : Void
  fun tex_coord1dv = "glTexCoord1dv"(v : Float64*) : Void
  fun tex_coord1f = "glTexCoord1f"(s : Float32) : Void
  fun tex_coord1fv = "glTexCoord1fv"(v : Float32*) : Void
  fun tex_coord1h_nv = "glTexCoord1hNV"(s : UInt16) : Void
  fun tex_coord1hv_nv = "glTexCoord1hvNV"(v : UInt16*) : Void
  fun tex_coord1i = "glTexCoord1i"(s : Int32) : Void
  fun tex_coord1iv = "glTexCoord1iv"(v : Int32*) : Void
  fun tex_coord1s = "glTexCoord1s"(s : Int16) : Void
  fun tex_coord1sv = "glTexCoord1sv"(v : Int16*) : Void
  fun tex_coord1x_oes = "glTexCoord1xOES"(s : Int32) : Void
  fun tex_coord1xv_oes = "glTexCoord1xvOES"(coords : Int32*) : Void
  fun tex_coord2b_oes = "glTexCoord2bOES"(s : Int8, t : Int8) : Void
  fun tex_coord2bv_oes = "glTexCoord2bvOES"(coords : Int8*) : Void
  fun tex_coord2d = "glTexCoord2d"(s : Float64, t : Float64) : Void
  fun tex_coord2dv = "glTexCoord2dv"(v : Float64*) : Void
  fun tex_coord2f = "glTexCoord2f"(s : Float32, t : Float32) : Void
  fun tex_coord2f_color3f_vertex3f_sun = "glTexCoord2fColor3fVertex3fSUN"(s : Float32, t : Float32, r : Float32, g : Float32, b : Float32, x : Float32, y : Float32, z : Float32) : Void
  fun tex_coord2f_color3f_vertex3fv_sun = "glTexCoord2fColor3fVertex3fvSUN"(tc : Float32*, c : Float32*, v : Float32*) : Void
  fun tex_coord2f_color4f_normal3f_vertex3f_sun = "glTexCoord2fColor4fNormal3fVertex3fSUN"(s : Float32, t : Float32, r : Float32, g : Float32, b : Float32, a : Float32, nx : Float32, ny : Float32, nz : Float32, x : Float32, y : Float32, z : Float32) : Void
  fun tex_coord2f_color4f_normal3f_vertex3fv_sun = "glTexCoord2fColor4fNormal3fVertex3fvSUN"(tc : Float32*, c : Float32*, n : Float32*, v : Float32*) : Void
  fun tex_coord2f_color4ub_vertex3f_sun = "glTexCoord2fColor4ubVertex3fSUN"(s : Float32, t : Float32, r : UInt8, g : UInt8, b : UInt8, a : UInt8, x : Float32, y : Float32, z : Float32) : Void
  fun tex_coord2f_color4ub_vertex3fv_sun = "glTexCoord2fColor4ubVertex3fvSUN"(tc : Float32*, c : UInt8*, v : Float32*) : Void
  fun tex_coord2f_normal3f_vertex3f_sun = "glTexCoord2fNormal3fVertex3fSUN"(s : Float32, t : Float32, nx : Float32, ny : Float32, nz : Float32, x : Float32, y : Float32, z : Float32) : Void
  fun tex_coord2f_normal3f_vertex3fv_sun = "glTexCoord2fNormal3fVertex3fvSUN"(tc : Float32*, n : Float32*, v : Float32*) : Void
  fun tex_coord2f_vertex3f_sun = "glTexCoord2fVertex3fSUN"(s : Float32, t : Float32, x : Float32, y : Float32, z : Float32) : Void
  fun tex_coord2f_vertex3fv_sun = "glTexCoord2fVertex3fvSUN"(tc : Float32*, v : Float32*) : Void
  fun tex_coord2fv = "glTexCoord2fv"(v : Float32*) : Void
  fun tex_coord2h_nv = "glTexCoord2hNV"(s : UInt16, t : UInt16) : Void
  fun tex_coord2hv_nv = "glTexCoord2hvNV"(v : UInt16*) : Void
  fun tex_coord2i = "glTexCoord2i"(s : Int32, t : Int32) : Void
  fun tex_coord2iv = "glTexCoord2iv"(v : Int32*) : Void
  fun tex_coord2s = "glTexCoord2s"(s : Int16, t : Int16) : Void
  fun tex_coord2sv = "glTexCoord2sv"(v : Int16*) : Void
  fun tex_coord2x_oes = "glTexCoord2xOES"(s : Int32, t : Int32) : Void
  fun tex_coord2xv_oes = "glTexCoord2xvOES"(coords : Int32*) : Void
  fun tex_coord3b_oes = "glTexCoord3bOES"(s : Int8, t : Int8, r : Int8) : Void
  fun tex_coord3bv_oes = "glTexCoord3bvOES"(coords : Int8*) : Void
  fun tex_coord3d = "glTexCoord3d"(s : Float64, t : Float64, r : Float64) : Void
  fun tex_coord3dv = "glTexCoord3dv"(v : Float64*) : Void
  fun tex_coord3f = "glTexCoord3f"(s : Float32, t : Float32, r : Float32) : Void
  fun tex_coord3fv = "glTexCoord3fv"(v : Float32*) : Void
  fun tex_coord3h_nv = "glTexCoord3hNV"(s : UInt16, t : UInt16, r : UInt16) : Void
  fun tex_coord3hv_nv = "glTexCoord3hvNV"(v : UInt16*) : Void
  fun tex_coord3i = "glTexCoord3i"(s : Int32, t : Int32, r : Int32) : Void
  fun tex_coord3iv = "glTexCoord3iv"(v : Int32*) : Void
  fun tex_coord3s = "glTexCoord3s"(s : Int16, t : Int16, r : Int16) : Void
  fun tex_coord3sv = "glTexCoord3sv"(v : Int16*) : Void
  fun tex_coord3x_oes = "glTexCoord3xOES"(s : Int32, t : Int32, r : Int32) : Void
  fun tex_coord3xv_oes = "glTexCoord3xvOES"(coords : Int32*) : Void
  fun tex_coord4b_oes = "glTexCoord4bOES"(s : Int8, t : Int8, r : Int8, q : Int8) : Void
  fun tex_coord4bv_oes = "glTexCoord4bvOES"(coords : Int8*) : Void
  fun tex_coord4d = "glTexCoord4d"(s : Float64, t : Float64, r : Float64, q : Float64) : Void
  fun tex_coord4dv = "glTexCoord4dv"(v : Float64*) : Void
  fun tex_coord4f = "glTexCoord4f"(s : Float32, t : Float32, r : Float32, q : Float32) : Void
  fun tex_coord4f_color4f_normal3f_vertex4f_sun = "glTexCoord4fColor4fNormal3fVertex4fSUN"(s : Float32, t : Float32, p : Float32, q : Float32, r : Float32, g : Float32, b : Float32, a : Float32, nx : Float32, ny : Float32, nz : Float32, x : Float32, y : Float32, z : Float32, w : Float32) : Void
  fun tex_coord4f_color4f_normal3f_vertex4fv_sun = "glTexCoord4fColor4fNormal3fVertex4fvSUN"(tc : Float32*, c : Float32*, n : Float32*, v : Float32*) : Void
  fun tex_coord4f_vertex4f_sun = "glTexCoord4fVertex4fSUN"(s : Float32, t : Float32, p : Float32, q : Float32, x : Float32, y : Float32, z : Float32, w : Float32) : Void
  fun tex_coord4f_vertex4fv_sun = "glTexCoord4fVertex4fvSUN"(tc : Float32*, v : Float32*) : Void
  fun tex_coord4fv = "glTexCoord4fv"(v : Float32*) : Void
  fun tex_coord4h_nv = "glTexCoord4hNV"(s : UInt16, t : UInt16, r : UInt16, q : UInt16) : Void
  fun tex_coord4hv_nv = "glTexCoord4hvNV"(v : UInt16*) : Void
  fun tex_coord4i = "glTexCoord4i"(s : Int32, t : Int32, r : Int32, q : Int32) : Void
  fun tex_coord4iv = "glTexCoord4iv"(v : Int32*) : Void
  fun tex_coord4s = "glTexCoord4s"(s : Int16, t : Int16, r : Int16, q : Int16) : Void
  fun tex_coord4sv = "glTexCoord4sv"(v : Int16*) : Void
  fun tex_coord4x_oes = "glTexCoord4xOES"(s : Int32, t : Int32, r : Int32, q : Int32) : Void
  fun tex_coord4xv_oes = "glTexCoord4xvOES"(coords : Int32*) : Void
  fun tex_coord_format_nv = "glTexCoordFormatNV"(size : Int32, type : UInt32, stride : Int32) : Void
  fun tex_coord_p1ui = "glTexCoordP1ui"(type : UInt32, coords : UInt32) : Void
  fun tex_coord_p1uiv = "glTexCoordP1uiv"(type : UInt32, coords : UInt32*) : Void
  fun tex_coord_p2ui = "glTexCoordP2ui"(type : UInt32, coords : UInt32) : Void
  fun tex_coord_p2uiv = "glTexCoordP2uiv"(type : UInt32, coords : UInt32*) : Void
  fun tex_coord_p3ui = "glTexCoordP3ui"(type : UInt32, coords : UInt32) : Void
  fun tex_coord_p3uiv = "glTexCoordP3uiv"(type : UInt32, coords : UInt32*) : Void
  fun tex_coord_p4ui = "glTexCoordP4ui"(type : UInt32, coords : UInt32) : Void
  fun tex_coord_p4uiv = "glTexCoordP4uiv"(type : UInt32, coords : UInt32*) : Void
  fun tex_coord_pointer = "glTexCoordPointer"(size : Int32, type : UInt32, stride : Int32, pointer : Void*) : Void
  fun tex_coord_pointer_ext = "glTexCoordPointerEXT"(size : Int32, type : UInt32, stride : Int32, count : Int32, pointer : Void*) : Void
  fun tex_coord_pointer_list_ibm = "glTexCoordPointerListIBM"(size : Int32, type : UInt32, stride : Int32, pointer : Void*, ptrstride : Int32) : Void
  fun tex_coord_pointerv_intel = "glTexCoordPointervINTEL"(size : Int32, type : UInt32, pointer : Void*) : Void
  fun tex_envf = "glTexEnvf"(target : UInt32, pname : UInt32, param : Float32) : Void
  fun tex_envfv = "glTexEnvfv"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun tex_envi = "glTexEnvi"(target : UInt32, pname : UInt32, param : Int32) : Void
  fun tex_enviv = "glTexEnviv"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun tex_envx = "glTexEnvx"(target : UInt32, pname : UInt32, param : Int32) : Void
  fun tex_envx_oes = "glTexEnvxOES"(target : UInt32, pname : UInt32, param : Int32) : Void
  fun tex_envxv = "glTexEnvxv"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun tex_envxv_oes = "glTexEnvxvOES"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun tex_filter_func_sgis = "glTexFilterFuncSGIS"(target : UInt32, filter : UInt32, n : Int32, weights : Float32*) : Void
  fun tex_gend = "glTexGend"(coord : UInt32, pname : UInt32, param : Float64) : Void
  fun tex_gendv = "glTexGendv"(coord : UInt32, pname : UInt32, params : Float64*) : Void
  fun tex_genf = "glTexGenf"(coord : UInt32, pname : UInt32, param : Float32) : Void
  fun tex_genf_oes = "glTexGenfOES"(coord : UInt32, pname : UInt32, param : Float32) : Void
  fun tex_genfv = "glTexGenfv"(coord : UInt32, pname : UInt32, params : Float32*) : Void
  fun tex_genfv_oes = "glTexGenfvOES"(coord : UInt32, pname : UInt32, params : Float32*) : Void
  fun tex_geni = "glTexGeni"(coord : UInt32, pname : UInt32, param : Int32) : Void
  fun tex_geni_oes = "glTexGeniOES"(coord : UInt32, pname : UInt32, param : Int32) : Void
  fun tex_geniv = "glTexGeniv"(coord : UInt32, pname : UInt32, params : Int32*) : Void
  fun tex_geniv_oes = "glTexGenivOES"(coord : UInt32, pname : UInt32, params : Int32*) : Void
  fun tex_genx_oes = "glTexGenxOES"(coord : UInt32, pname : UInt32, param : Int32) : Void
  fun tex_genxv_oes = "glTexGenxvOES"(coord : UInt32, pname : UInt32, params : Int32*) : Void
  fun tex_image1d = "glTexImage1D"(target : UInt32, level : Int32, internalformat : Int32, width : Int32, border : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun tex_image2d = "glTexImage2D"(target : UInt32, level : Int32, internalformat : Int32, width : Int32, height : Int32, border : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun tex_image2d_multisample = "glTexImage2DMultisample"(target : UInt32, samples : Int32, internalformat : UInt32, width : Int32, height : Int32, fixedsamplelocations : UInt8) : Void
  fun tex_image2d_multisample_coverage_nv = "glTexImage2DMultisampleCoverageNV"(target : UInt32, coverageSamples : Int32, colorSamples : Int32, internalFormat : Int32, width : Int32, height : Int32, fixedSampleLocations : UInt8) : Void
  fun tex_image3d = "glTexImage3D"(target : UInt32, level : Int32, internalformat : Int32, width : Int32, height : Int32, depth : Int32, border : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun tex_image3dext = "glTexImage3DEXT"(target : UInt32, level : Int32, internalformat : UInt32, width : Int32, height : Int32, depth : Int32, border : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun tex_image3d_multisample = "glTexImage3DMultisample"(target : UInt32, samples : Int32, internalformat : UInt32, width : Int32, height : Int32, depth : Int32, fixedsamplelocations : UInt8) : Void
  fun tex_image3d_multisample_coverage_nv = "glTexImage3DMultisampleCoverageNV"(target : UInt32, coverageSamples : Int32, colorSamples : Int32, internalFormat : Int32, width : Int32, height : Int32, depth : Int32, fixedSampleLocations : UInt8) : Void
  fun tex_image3does = "glTexImage3DOES"(target : UInt32, level : Int32, internalformat : UInt32, width : Int32, height : Int32, depth : Int32, border : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun tex_image4dsgis = "glTexImage4DSGIS"(target : UInt32, level : Int32, internalformat : UInt32, width : Int32, height : Int32, depth : Int32, size4d : Int32, border : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun tex_page_commitment_arb = "glTexPageCommitmentARB"(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, commit : UInt8) : Void
  fun tex_page_commitment_ext = "glTexPageCommitmentEXT"(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, commit : UInt8) : Void
  fun tex_parameter_iiv = "glTexParameterIiv"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun tex_parameter_iiv_ext = "glTexParameterIivEXT"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun tex_parameter_iiv_oes = "glTexParameterIivOES"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun tex_parameter_iuiv = "glTexParameterIuiv"(target : UInt32, pname : UInt32, params : UInt32*) : Void
  fun tex_parameter_iuiv_ext = "glTexParameterIuivEXT"(target : UInt32, pname : UInt32, params : UInt32*) : Void
  fun tex_parameter_iuiv_oes = "glTexParameterIuivOES"(target : UInt32, pname : UInt32, params : UInt32*) : Void
  fun tex_parameterf = "glTexParameterf"(target : UInt32, pname : UInt32, param : Float32) : Void
  fun tex_parameterfv = "glTexParameterfv"(target : UInt32, pname : UInt32, params : Float32*) : Void
  fun tex_parameteri = "glTexParameteri"(target : UInt32, pname : UInt32, param : Int32) : Void
  fun tex_parameteriv = "glTexParameteriv"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun tex_parameterx = "glTexParameterx"(target : UInt32, pname : UInt32, param : Int32) : Void
  fun tex_parameterx_oes = "glTexParameterxOES"(target : UInt32, pname : UInt32, param : Int32) : Void
  fun tex_parameterxv = "glTexParameterxv"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun tex_parameterxv_oes = "glTexParameterxvOES"(target : UInt32, pname : UInt32, params : Int32*) : Void
  fun tex_renderbuffer_nv = "glTexRenderbufferNV"(target : UInt32, renderbuffer : UInt32) : Void
  fun tex_storage1d = "glTexStorage1D"(target : UInt32, levels : Int32, internalformat : UInt32, width : Int32) : Void
  fun tex_storage1dext = "glTexStorage1DEXT"(target : UInt32, levels : Int32, internalformat : UInt32, width : Int32) : Void
  fun tex_storage2d = "glTexStorage2D"(target : UInt32, levels : Int32, internalformat : UInt32, width : Int32, height : Int32) : Void
  fun tex_storage2dext = "glTexStorage2DEXT"(target : UInt32, levels : Int32, internalformat : UInt32, width : Int32, height : Int32) : Void
  fun tex_storage2d_multisample = "glTexStorage2DMultisample"(target : UInt32, samples : Int32, internalformat : UInt32, width : Int32, height : Int32, fixedsamplelocations : UInt8) : Void
  fun tex_storage3d = "glTexStorage3D"(target : UInt32, levels : Int32, internalformat : UInt32, width : Int32, height : Int32, depth : Int32) : Void
  fun tex_storage3dext = "glTexStorage3DEXT"(target : UInt32, levels : Int32, internalformat : UInt32, width : Int32, height : Int32, depth : Int32) : Void
  fun tex_storage3d_multisample = "glTexStorage3DMultisample"(target : UInt32, samples : Int32, internalformat : UInt32, width : Int32, height : Int32, depth : Int32, fixedsamplelocations : UInt8) : Void
  fun tex_storage3d_multisample_oes = "glTexStorage3DMultisampleOES"(target : UInt32, samples : Int32, internalformat : UInt32, width : Int32, height : Int32, depth : Int32, fixedsamplelocations : UInt8) : Void
  fun tex_storage_sparse_amd = "glTexStorageSparseAMD"(target : UInt32, internalFormat : UInt32, width : Int32, height : Int32, depth : Int32, layers : Int32, flags : UInt32) : Void
  fun tex_sub_image1d = "glTexSubImage1D"(target : UInt32, level : Int32, xoffset : Int32, width : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun tex_sub_image1dext = "glTexSubImage1DEXT"(target : UInt32, level : Int32, xoffset : Int32, width : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun tex_sub_image2d = "glTexSubImage2D"(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, width : Int32, height : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun tex_sub_image2dext = "glTexSubImage2DEXT"(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, width : Int32, height : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun tex_sub_image3d = "glTexSubImage3D"(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun tex_sub_image3dext = "glTexSubImage3DEXT"(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun tex_sub_image3does = "glTexSubImage3DOES"(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun tex_sub_image4dsgis = "glTexSubImage4DSGIS"(target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, woffset : Int32, width : Int32, height : Int32, depth : Int32, size4d : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun texture_barrier = "glTextureBarrier" : Void
  fun texture_barrier_nv = "glTextureBarrierNV" : Void
  fun texture_buffer = "glTextureBuffer"(texture : UInt32, internalformat : UInt32, buffer : UInt32) : Void
  fun texture_buffer_ext = "glTextureBufferEXT"(texture : UInt32, target : UInt32, internalformat : UInt32, buffer : UInt32) : Void
  fun texture_buffer_range = "glTextureBufferRange"(texture : UInt32, internalformat : UInt32, buffer : UInt32, offset : Int32, size : Int32) : Void
  fun texture_buffer_range_ext = "glTextureBufferRangeEXT"(texture : UInt32, target : UInt32, internalformat : UInt32, buffer : UInt32, offset : Int32, size : Int32) : Void
  fun texture_color_mask_sgis = "glTextureColorMaskSGIS"(red : UInt8, green : UInt8, blue : UInt8, alpha : UInt8) : Void
  fun texture_image1dext = "glTextureImage1DEXT"(texture : UInt32, target : UInt32, level : Int32, internalformat : Int32, width : Int32, border : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun texture_image2dext = "glTextureImage2DEXT"(texture : UInt32, target : UInt32, level : Int32, internalformat : Int32, width : Int32, height : Int32, border : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun texture_image2d_multisample_coverage_nv = "glTextureImage2DMultisampleCoverageNV"(texture : UInt32, target : UInt32, coverageSamples : Int32, colorSamples : Int32, internalFormat : Int32, width : Int32, height : Int32, fixedSampleLocations : UInt8) : Void
  fun texture_image2d_multisample_nv = "glTextureImage2DMultisampleNV"(texture : UInt32, target : UInt32, samples : Int32, internalFormat : Int32, width : Int32, height : Int32, fixedSampleLocations : UInt8) : Void
  fun texture_image3dext = "glTextureImage3DEXT"(texture : UInt32, target : UInt32, level : Int32, internalformat : Int32, width : Int32, height : Int32, depth : Int32, border : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun texture_image3d_multisample_coverage_nv = "glTextureImage3DMultisampleCoverageNV"(texture : UInt32, target : UInt32, coverageSamples : Int32, colorSamples : Int32, internalFormat : Int32, width : Int32, height : Int32, depth : Int32, fixedSampleLocations : UInt8) : Void
  fun texture_image3d_multisample_nv = "glTextureImage3DMultisampleNV"(texture : UInt32, target : UInt32, samples : Int32, internalFormat : Int32, width : Int32, height : Int32, depth : Int32, fixedSampleLocations : UInt8) : Void
  fun texture_light_ext = "glTextureLightEXT"(pname : UInt32) : Void
  fun texture_material_ext = "glTextureMaterialEXT"(face : UInt32, mode : UInt32) : Void
  fun texture_normal_ext = "glTextureNormalEXT"(mode : UInt32) : Void
  fun texture_page_commitment_ext = "glTexturePageCommitmentEXT"(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, commit : UInt8) : Void
  fun texture_parameter_iiv = "glTextureParameterIiv"(texture : UInt32, pname : UInt32, params : Int32*) : Void
  fun texture_parameter_iiv_ext = "glTextureParameterIivEXT"(texture : UInt32, target : UInt32, pname : UInt32, params : Int32*) : Void
  fun texture_parameter_iuiv = "glTextureParameterIuiv"(texture : UInt32, pname : UInt32, params : UInt32*) : Void
  fun texture_parameter_iuiv_ext = "glTextureParameterIuivEXT"(texture : UInt32, target : UInt32, pname : UInt32, params : UInt32*) : Void
  fun texture_parameterf = "glTextureParameterf"(texture : UInt32, pname : UInt32, param : Float32) : Void
  fun texture_parameterf_ext = "glTextureParameterfEXT"(texture : UInt32, target : UInt32, pname : UInt32, param : Float32) : Void
  fun texture_parameterfv = "glTextureParameterfv"(texture : UInt32, pname : UInt32, param : Float32*) : Void
  fun texture_parameterfv_ext = "glTextureParameterfvEXT"(texture : UInt32, target : UInt32, pname : UInt32, params : Float32*) : Void
  fun texture_parameteri = "glTextureParameteri"(texture : UInt32, pname : UInt32, param : Int32) : Void
  fun texture_parameteri_ext = "glTextureParameteriEXT"(texture : UInt32, target : UInt32, pname : UInt32, param : Int32) : Void
  fun texture_parameteriv = "glTextureParameteriv"(texture : UInt32, pname : UInt32, param : Int32*) : Void
  fun texture_parameteriv_ext = "glTextureParameterivEXT"(texture : UInt32, target : UInt32, pname : UInt32, params : Int32*) : Void
  fun texture_range_apple = "glTextureRangeAPPLE"(target : UInt32, length : Int32, pointer : Void*) : Void
  fun texture_renderbuffer_ext = "glTextureRenderbufferEXT"(texture : UInt32, target : UInt32, renderbuffer : UInt32) : Void
  fun texture_storage1d = "glTextureStorage1D"(texture : UInt32, levels : Int32, internalformat : UInt32, width : Int32) : Void
  fun texture_storage1dext = "glTextureStorage1DEXT"(texture : UInt32, target : UInt32, levels : Int32, internalformat : UInt32, width : Int32) : Void
  fun texture_storage2d = "glTextureStorage2D"(texture : UInt32, levels : Int32, internalformat : UInt32, width : Int32, height : Int32) : Void
  fun texture_storage2dext = "glTextureStorage2DEXT"(texture : UInt32, target : UInt32, levels : Int32, internalformat : UInt32, width : Int32, height : Int32) : Void
  fun texture_storage2d_multisample = "glTextureStorage2DMultisample"(texture : UInt32, samples : Int32, internalformat : UInt32, width : Int32, height : Int32, fixedsamplelocations : UInt8) : Void
  fun texture_storage2d_multisample_ext = "glTextureStorage2DMultisampleEXT"(texture : UInt32, target : UInt32, samples : Int32, internalformat : UInt32, width : Int32, height : Int32, fixedsamplelocations : UInt8) : Void
  fun texture_storage3d = "glTextureStorage3D"(texture : UInt32, levels : Int32, internalformat : UInt32, width : Int32, height : Int32, depth : Int32) : Void
  fun texture_storage3dext = "glTextureStorage3DEXT"(texture : UInt32, target : UInt32, levels : Int32, internalformat : UInt32, width : Int32, height : Int32, depth : Int32) : Void
  fun texture_storage3d_multisample = "glTextureStorage3DMultisample"(texture : UInt32, samples : Int32, internalformat : UInt32, width : Int32, height : Int32, depth : Int32, fixedsamplelocations : UInt8) : Void
  fun texture_storage3d_multisample_ext = "glTextureStorage3DMultisampleEXT"(texture : UInt32, target : UInt32, samples : Int32, internalformat : UInt32, width : Int32, height : Int32, depth : Int32, fixedsamplelocations : UInt8) : Void
  fun texture_storage_sparse_amd = "glTextureStorageSparseAMD"(texture : UInt32, target : UInt32, internalFormat : UInt32, width : Int32, height : Int32, depth : Int32, layers : Int32, flags : UInt32) : Void
  fun texture_sub_image1d = "glTextureSubImage1D"(texture : UInt32, level : Int32, xoffset : Int32, width : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun texture_sub_image1dext = "glTextureSubImage1DEXT"(texture : UInt32, target : UInt32, level : Int32, xoffset : Int32, width : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun texture_sub_image2d = "glTextureSubImage2D"(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, width : Int32, height : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun texture_sub_image2dext = "glTextureSubImage2DEXT"(texture : UInt32, target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, width : Int32, height : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun texture_sub_image3d = "glTextureSubImage3D"(texture : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun texture_sub_image3dext = "glTextureSubImage3DEXT"(texture : UInt32, target : UInt32, level : Int32, xoffset : Int32, yoffset : Int32, zoffset : Int32, width : Int32, height : Int32, depth : Int32, format : UInt32, type : UInt32, pixels : Void*) : Void
  fun texture_view = "glTextureView"(texture : UInt32, target : UInt32, origtexture : UInt32, internalformat : UInt32, minlevel : UInt32, numlevels : UInt32, minlayer : UInt32, numlayers : UInt32) : Void
  fun texture_view_ext = "glTextureViewEXT"(texture : UInt32, target : UInt32, origtexture : UInt32, internalformat : UInt32, minlevel : UInt32, numlevels : UInt32, minlayer : UInt32, numlayers : UInt32) : Void
  fun texture_view_oes = "glTextureViewOES"(texture : UInt32, target : UInt32, origtexture : UInt32, internalformat : UInt32, minlevel : UInt32, numlevels : UInt32, minlayer : UInt32, numlayers : UInt32) : Void
  fun track_matrix_nv = "glTrackMatrixNV"(target : UInt32, address : UInt32, matrix : UInt32, transform : UInt32) : Void
  fun transform_feedback_attribs_nv = "glTransformFeedbackAttribsNV"(count : Int32, attribs : Int32*, bufferMode : UInt32) : Void
  fun transform_feedback_buffer_base = "glTransformFeedbackBufferBase"(xfb : UInt32, index : UInt32, buffer : UInt32) : Void
  fun transform_feedback_buffer_range = "glTransformFeedbackBufferRange"(xfb : UInt32, index : UInt32, buffer : UInt32, offset : Int32, size : Int32) : Void
  fun transform_feedback_stream_attribs_nv = "glTransformFeedbackStreamAttribsNV"(count : Int32, attribs : Int32*, nbuffers : Int32, bufstreams : Int32*, bufferMode : UInt32) : Void
  fun transform_feedback_varyings = "glTransformFeedbackVaryings"(program : UInt32, count : Int32, varyings : UInt8*, bufferMode : UInt32) : Void
  fun transform_feedback_varyings_ext = "glTransformFeedbackVaryingsEXT"(program : UInt32, count : Int32, varyings : UInt8*, bufferMode : UInt32) : Void
  fun transform_feedback_varyings_nv = "glTransformFeedbackVaryingsNV"(program : UInt32, count : Int32, locations : Int32*, bufferMode : UInt32) : Void
  fun transform_path_nv = "glTransformPathNV"(resultPath : UInt32, srcPath : UInt32, transformType : UInt32, transformValues : Float32*) : Void
  fun translated = "glTranslated"(x : Float64, y : Float64, z : Float64) : Void
  fun translatef = "glTranslatef"(x : Float32, y : Float32, z : Float32) : Void
  fun translatex = "glTranslatex"(x : Int32, y : Int32, z : Int32) : Void
  fun translatex_oes = "glTranslatexOES"(x : Int32, y : Int32, z : Int32) : Void
  fun uniform1d = "glUniform1d"(location : Int32, x : Float64) : Void
  fun uniform1dv = "glUniform1dv"(location : Int32, count : Int32, value : Float64*) : Void
  fun uniform1f = "glUniform1f"(location : Int32, v0 : Float32) : Void
  fun uniform1f_arb = "glUniform1fARB"(location : Int32, v0 : Float32) : Void
  fun uniform1fv = "glUniform1fv"(location : Int32, count : Int32, value : Float32*) : Void
  fun uniform1fv_arb = "glUniform1fvARB"(location : Int32, count : Int32, value : Float32*) : Void
  fun uniform1i = "glUniform1i"(location : Int32, v0 : Int32) : Void
  fun uniform1i64arb = "glUniform1i64ARB"(location : Int32, x : Int64) : Void
  fun uniform1i64nv = "glUniform1i64NV"(location : Int32, x : Int64) : Void
  fun uniform1i64v_arb = "glUniform1i64vARB"(location : Int32, count : Int32, value : Int64*) : Void
  fun uniform1i64v_nv = "glUniform1i64vNV"(location : Int32, count : Int32, value : Int64*) : Void
  fun uniform1i_arb = "glUniform1iARB"(location : Int32, v0 : Int32) : Void
  fun uniform1iv = "glUniform1iv"(location : Int32, count : Int32, value : Int32*) : Void
  fun uniform1iv_arb = "glUniform1ivARB"(location : Int32, count : Int32, value : Int32*) : Void
  fun uniform1ui = "glUniform1ui"(location : Int32, v0 : UInt32) : Void
  fun uniform1ui64arb = "glUniform1ui64ARB"(location : Int32, x : UInt64) : Void
  fun uniform1ui64nv = "glUniform1ui64NV"(location : Int32, x : UInt64) : Void
  fun uniform1ui64v_arb = "glUniform1ui64vARB"(location : Int32, count : Int32, value : UInt64*) : Void
  fun uniform1ui64v_nv = "glUniform1ui64vNV"(location : Int32, count : Int32, value : UInt64*) : Void
  fun uniform1ui_ext = "glUniform1uiEXT"(location : Int32, v0 : UInt32) : Void
  fun uniform1uiv = "glUniform1uiv"(location : Int32, count : Int32, value : UInt32*) : Void
  fun uniform1uiv_ext = "glUniform1uivEXT"(location : Int32, count : Int32, value : UInt32*) : Void
  fun uniform2d = "glUniform2d"(location : Int32, x : Float64, y : Float64) : Void
  fun uniform2dv = "glUniform2dv"(location : Int32, count : Int32, value : Float64*) : Void
  fun uniform2f = "glUniform2f"(location : Int32, v0 : Float32, v1 : Float32) : Void
  fun uniform2f_arb = "glUniform2fARB"(location : Int32, v0 : Float32, v1 : Float32) : Void
  fun uniform2fv = "glUniform2fv"(location : Int32, count : Int32, value : Float32*) : Void
  fun uniform2fv_arb = "glUniform2fvARB"(location : Int32, count : Int32, value : Float32*) : Void
  fun uniform2i = "glUniform2i"(location : Int32, v0 : Int32, v1 : Int32) : Void
  fun uniform2i64arb = "glUniform2i64ARB"(location : Int32, x : Int64, y : Int64) : Void
  fun uniform2i64nv = "glUniform2i64NV"(location : Int32, x : Int64, y : Int64) : Void
  fun uniform2i64v_arb = "glUniform2i64vARB"(location : Int32, count : Int32, value : Int64*) : Void
  fun uniform2i64v_nv = "glUniform2i64vNV"(location : Int32, count : Int32, value : Int64*) : Void
  fun uniform2i_arb = "glUniform2iARB"(location : Int32, v0 : Int32, v1 : Int32) : Void
  fun uniform2iv = "glUniform2iv"(location : Int32, count : Int32, value : Int32*) : Void
  fun uniform2iv_arb = "glUniform2ivARB"(location : Int32, count : Int32, value : Int32*) : Void
  fun uniform2ui = "glUniform2ui"(location : Int32, v0 : UInt32, v1 : UInt32) : Void
  fun uniform2ui64arb = "glUniform2ui64ARB"(location : Int32, x : UInt64, y : UInt64) : Void
  fun uniform2ui64nv = "glUniform2ui64NV"(location : Int32, x : UInt64, y : UInt64) : Void
  fun uniform2ui64v_arb = "glUniform2ui64vARB"(location : Int32, count : Int32, value : UInt64*) : Void
  fun uniform2ui64v_nv = "glUniform2ui64vNV"(location : Int32, count : Int32, value : UInt64*) : Void
  fun uniform2ui_ext = "glUniform2uiEXT"(location : Int32, v0 : UInt32, v1 : UInt32) : Void
  fun uniform2uiv = "glUniform2uiv"(location : Int32, count : Int32, value : UInt32*) : Void
  fun uniform2uiv_ext = "glUniform2uivEXT"(location : Int32, count : Int32, value : UInt32*) : Void
  fun uniform3d = "glUniform3d"(location : Int32, x : Float64, y : Float64, z : Float64) : Void
  fun uniform3dv = "glUniform3dv"(location : Int32, count : Int32, value : Float64*) : Void
  fun uniform3f = "glUniform3f"(location : Int32, v0 : Float32, v1 : Float32, v2 : Float32) : Void
  fun uniform3f_arb = "glUniform3fARB"(location : Int32, v0 : Float32, v1 : Float32, v2 : Float32) : Void
  fun uniform3fv = "glUniform3fv"(location : Int32, count : Int32, value : Float32*) : Void
  fun uniform3fv_arb = "glUniform3fvARB"(location : Int32, count : Int32, value : Float32*) : Void
  fun uniform3i = "glUniform3i"(location : Int32, v0 : Int32, v1 : Int32, v2 : Int32) : Void
  fun uniform3i64arb = "glUniform3i64ARB"(location : Int32, x : Int64, y : Int64, z : Int64) : Void
  fun uniform3i64nv = "glUniform3i64NV"(location : Int32, x : Int64, y : Int64, z : Int64) : Void
  fun uniform3i64v_arb = "glUniform3i64vARB"(location : Int32, count : Int32, value : Int64*) : Void
  fun uniform3i64v_nv = "glUniform3i64vNV"(location : Int32, count : Int32, value : Int64*) : Void
  fun uniform3i_arb = "glUniform3iARB"(location : Int32, v0 : Int32, v1 : Int32, v2 : Int32) : Void
  fun uniform3iv = "glUniform3iv"(location : Int32, count : Int32, value : Int32*) : Void
  fun uniform3iv_arb = "glUniform3ivARB"(location : Int32, count : Int32, value : Int32*) : Void
  fun uniform3ui = "glUniform3ui"(location : Int32, v0 : UInt32, v1 : UInt32, v2 : UInt32) : Void
  fun uniform3ui64arb = "glUniform3ui64ARB"(location : Int32, x : UInt64, y : UInt64, z : UInt64) : Void
  fun uniform3ui64nv = "glUniform3ui64NV"(location : Int32, x : UInt64, y : UInt64, z : UInt64) : Void
  fun uniform3ui64v_arb = "glUniform3ui64vARB"(location : Int32, count : Int32, value : UInt64*) : Void
  fun uniform3ui64v_nv = "glUniform3ui64vNV"(location : Int32, count : Int32, value : UInt64*) : Void
  fun uniform3ui_ext = "glUniform3uiEXT"(location : Int32, v0 : UInt32, v1 : UInt32, v2 : UInt32) : Void
  fun uniform3uiv = "glUniform3uiv"(location : Int32, count : Int32, value : UInt32*) : Void
  fun uniform3uiv_ext = "glUniform3uivEXT"(location : Int32, count : Int32, value : UInt32*) : Void
  fun uniform4d = "glUniform4d"(location : Int32, x : Float64, y : Float64, z : Float64, w : Float64) : Void
  fun uniform4dv = "glUniform4dv"(location : Int32, count : Int32, value : Float64*) : Void
  fun uniform4f = "glUniform4f"(location : Int32, v0 : Float32, v1 : Float32, v2 : Float32, v3 : Float32) : Void
  fun uniform4f_arb = "glUniform4fARB"(location : Int32, v0 : Float32, v1 : Float32, v2 : Float32, v3 : Float32) : Void
  fun uniform4fv = "glUniform4fv"(location : Int32, count : Int32, value : Float32*) : Void
  fun uniform4fv_arb = "glUniform4fvARB"(location : Int32, count : Int32, value : Float32*) : Void
  fun uniform4i = "glUniform4i"(location : Int32, v0 : Int32, v1 : Int32, v2 : Int32, v3 : Int32) : Void
  fun uniform4i64arb = "glUniform4i64ARB"(location : Int32, x : Int64, y : Int64, z : Int64, w : Int64) : Void
  fun uniform4i64nv = "glUniform4i64NV"(location : Int32, x : Int64, y : Int64, z : Int64, w : Int64) : Void
  fun uniform4i64v_arb = "glUniform4i64vARB"(location : Int32, count : Int32, value : Int64*) : Void
  fun uniform4i64v_nv = "glUniform4i64vNV"(location : Int32, count : Int32, value : Int64*) : Void
  fun uniform4i_arb = "glUniform4iARB"(location : Int32, v0 : Int32, v1 : Int32, v2 : Int32, v3 : Int32) : Void
  fun uniform4iv = "glUniform4iv"(location : Int32, count : Int32, value : Int32*) : Void
  fun uniform4iv_arb = "glUniform4ivARB"(location : Int32, count : Int32, value : Int32*) : Void
  fun uniform4ui = "glUniform4ui"(location : Int32, v0 : UInt32, v1 : UInt32, v2 : UInt32, v3 : UInt32) : Void
  fun uniform4ui64arb = "glUniform4ui64ARB"(location : Int32, x : UInt64, y : UInt64, z : UInt64, w : UInt64) : Void
  fun uniform4ui64nv = "glUniform4ui64NV"(location : Int32, x : UInt64, y : UInt64, z : UInt64, w : UInt64) : Void
  fun uniform4ui64v_arb = "glUniform4ui64vARB"(location : Int32, count : Int32, value : UInt64*) : Void
  fun uniform4ui64v_nv = "glUniform4ui64vNV"(location : Int32, count : Int32, value : UInt64*) : Void
  fun uniform4ui_ext = "glUniform4uiEXT"(location : Int32, v0 : UInt32, v1 : UInt32, v2 : UInt32, v3 : UInt32) : Void
  fun uniform4uiv = "glUniform4uiv"(location : Int32, count : Int32, value : UInt32*) : Void
  fun uniform4uiv_ext = "glUniform4uivEXT"(location : Int32, count : Int32, value : UInt32*) : Void
  fun uniform_block_binding = "glUniformBlockBinding"(program : UInt32, uniformBlockIndex : UInt32, uniformBlockBinding : UInt32) : Void
  fun uniform_buffer_ext = "glUniformBufferEXT"(program : UInt32, location : Int32, buffer : UInt32) : Void
  fun uniform_handleui64arb = "glUniformHandleui64ARB"(location : Int32, value : UInt64) : Void
  fun uniform_handleui64img = "glUniformHandleui64IMG"(location : Int32, value : UInt64) : Void
  fun uniform_handleui64nv = "glUniformHandleui64NV"(location : Int32, value : UInt64) : Void
  fun uniform_handleui64v_arb = "glUniformHandleui64vARB"(location : Int32, count : Int32, value : UInt64*) : Void
  fun uniform_handleui64v_img = "glUniformHandleui64vIMG"(location : Int32, count : Int32, value : UInt64*) : Void
  fun uniform_handleui64v_nv = "glUniformHandleui64vNV"(location : Int32, count : Int32, value : UInt64*) : Void
  fun uniform_matrix2dv = "glUniformMatrix2dv"(location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun uniform_matrix2fv = "glUniformMatrix2fv"(location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun uniform_matrix2fv_arb = "glUniformMatrix2fvARB"(location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun uniform_matrix2x3dv = "glUniformMatrix2x3dv"(location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun uniform_matrix2x3fv = "glUniformMatrix2x3fv"(location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun uniform_matrix2x3fv_nv = "glUniformMatrix2x3fvNV"(location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun uniform_matrix2x4dv = "glUniformMatrix2x4dv"(location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun uniform_matrix2x4fv = "glUniformMatrix2x4fv"(location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun uniform_matrix2x4fv_nv = "glUniformMatrix2x4fvNV"(location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun uniform_matrix3dv = "glUniformMatrix3dv"(location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun uniform_matrix3fv = "glUniformMatrix3fv"(location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun uniform_matrix3fv_arb = "glUniformMatrix3fvARB"(location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun uniform_matrix3x2dv = "glUniformMatrix3x2dv"(location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun uniform_matrix3x2fv = "glUniformMatrix3x2fv"(location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun uniform_matrix3x2fv_nv = "glUniformMatrix3x2fvNV"(location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun uniform_matrix3x4dv = "glUniformMatrix3x4dv"(location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun uniform_matrix3x4fv = "glUniformMatrix3x4fv"(location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun uniform_matrix3x4fv_nv = "glUniformMatrix3x4fvNV"(location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun uniform_matrix4dv = "glUniformMatrix4dv"(location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun uniform_matrix4fv = "glUniformMatrix4fv"(location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun uniform_matrix4fv_arb = "glUniformMatrix4fvARB"(location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun uniform_matrix4x2dv = "glUniformMatrix4x2dv"(location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun uniform_matrix4x2fv = "glUniformMatrix4x2fv"(location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun uniform_matrix4x2fv_nv = "glUniformMatrix4x2fvNV"(location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun uniform_matrix4x3dv = "glUniformMatrix4x3dv"(location : Int32, count : Int32, transpose : UInt8, value : Float64*) : Void
  fun uniform_matrix4x3fv = "glUniformMatrix4x3fv"(location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun uniform_matrix4x3fv_nv = "glUniformMatrix4x3fvNV"(location : Int32, count : Int32, transpose : UInt8, value : Float32*) : Void
  fun uniform_subroutinesuiv = "glUniformSubroutinesuiv"(shadertype : UInt32, count : Int32, indices : UInt32*) : Void
  fun uniformui64nv = "glUniformui64NV"(location : Int32, value : UInt64) : Void
  fun uniformui64v_nv = "glUniformui64vNV"(location : Int32, count : Int32, value : UInt64*) : Void
  fun unlock_arrays_ext = "glUnlockArraysEXT" : Void
  fun unmap_buffer = "glUnmapBuffer"(target : UInt32) : UInt8
  fun unmap_buffer_arb = "glUnmapBufferARB"(target : UInt32) : UInt8
  fun unmap_buffer_oes = "glUnmapBufferOES"(target : UInt32) : UInt8
  fun unmap_named_buffer = "glUnmapNamedBuffer"(buffer : UInt32) : UInt8
  fun unmap_named_buffer_ext = "glUnmapNamedBufferEXT"(buffer : UInt32) : UInt8
  fun unmap_object_buffer_ati = "glUnmapObjectBufferATI"(buffer : UInt32) : Void
  fun unmap_texture2dintel = "glUnmapTexture2DINTEL"(texture : UInt32, level : Int32) : Void
  fun update_object_buffer_ati = "glUpdateObjectBufferATI"(buffer : UInt32, offset : UInt32, size : Int32, pointer : Void*, preserve : UInt32) : Void
  fun use_program = "glUseProgram"(program : UInt32) : Void
  fun use_program_object_arb = "glUseProgramObjectARB"(programObj : Void*) : Void
  fun use_program_stages = "glUseProgramStages"(pipeline : UInt32, stages : UInt32, program : UInt32) : Void
  fun use_program_stages_ext = "glUseProgramStagesEXT"(pipeline : UInt32, stages : UInt32, program : UInt32) : Void
  fun use_shader_program_ext = "glUseShaderProgramEXT"(type : UInt32, program : UInt32) : Void
  fun vdpau_fini_nv = "glVDPAUFiniNV" : Void
  fun vdpau_get_surfaceiv_nv = "glVDPAUGetSurfaceivNV"(surface : Int32, pname : UInt32, bufSize : Int32, length : Int32*, values : Int32*) : Void
  fun vdpau_init_nv = "glVDPAUInitNV"(vdpDevice : Void*, getProcAddress : Void*) : Void
  fun vdpau_is_surface_nv = "glVDPAUIsSurfaceNV"(surface : Int32) : UInt8
  fun vdpau_map_surfaces_nv = "glVDPAUMapSurfacesNV"(numSurfaces : Int32, surfaces : Int32*) : Void
  fun vdpau_register_output_surface_nv = "glVDPAURegisterOutputSurfaceNV"(vdpSurface : Void*, target : UInt32, numTextureNames : Int32, textureNames : UInt32*) : Int32
  fun vdpau_register_video_surface_nv = "glVDPAURegisterVideoSurfaceNV"(vdpSurface : Void*, target : UInt32, numTextureNames : Int32, textureNames : UInt32*) : Int32
  fun vdpau_surface_access_nv = "glVDPAUSurfaceAccessNV"(surface : Int32, access : UInt32) : Void
  fun vdpau_unmap_surfaces_nv = "glVDPAUUnmapSurfacesNV"(numSurface : Int32, surfaces : Int32*) : Void
  fun vdpau_unregister_surface_nv = "glVDPAUUnregisterSurfaceNV"(surface : Int32) : Void
  fun validate_program = "glValidateProgram"(program : UInt32) : Void
  fun validate_program_arb = "glValidateProgramARB"(programObj : Void*) : Void
  fun validate_program_pipeline = "glValidateProgramPipeline"(pipeline : UInt32) : Void
  fun validate_program_pipeline_ext = "glValidateProgramPipelineEXT"(pipeline : UInt32) : Void
  fun variant_array_object_ati = "glVariantArrayObjectATI"(id : UInt32, type : UInt32, stride : Int32, buffer : UInt32, offset : UInt32) : Void
  fun variant_pointer_ext = "glVariantPointerEXT"(id : UInt32, type : UInt32, stride : UInt32, addr : Void*) : Void
  fun variantbv_ext = "glVariantbvEXT"(id : UInt32, addr : Int8*) : Void
  fun variantdv_ext = "glVariantdvEXT"(id : UInt32, addr : Float64*) : Void
  fun variantfv_ext = "glVariantfvEXT"(id : UInt32, addr : Float32*) : Void
  fun variantiv_ext = "glVariantivEXT"(id : UInt32, addr : Int32*) : Void
  fun variantsv_ext = "glVariantsvEXT"(id : UInt32, addr : Int16*) : Void
  fun variantubv_ext = "glVariantubvEXT"(id : UInt32, addr : UInt8*) : Void
  fun variantuiv_ext = "glVariantuivEXT"(id : UInt32, addr : UInt32*) : Void
  fun variantusv_ext = "glVariantusvEXT"(id : UInt32, addr : UInt16*) : Void
  fun vertex2b_oes = "glVertex2bOES"(x : Int8, y : Int8) : Void
  fun vertex2bv_oes = "glVertex2bvOES"(coords : Int8*) : Void
  fun vertex2d = "glVertex2d"(x : Float64, y : Float64) : Void
  fun vertex2dv = "glVertex2dv"(v : Float64*) : Void
  fun vertex2f = "glVertex2f"(x : Float32, y : Float32) : Void
  fun vertex2fv = "glVertex2fv"(v : Float32*) : Void
  fun vertex2h_nv = "glVertex2hNV"(x : UInt16, y : UInt16) : Void
  fun vertex2hv_nv = "glVertex2hvNV"(v : UInt16*) : Void
  fun vertex2i = "glVertex2i"(x : Int32, y : Int32) : Void
  fun vertex2iv = "glVertex2iv"(v : Int32*) : Void
  fun vertex2s = "glVertex2s"(x : Int16, y : Int16) : Void
  fun vertex2sv = "glVertex2sv"(v : Int16*) : Void
  fun vertex2x_oes = "glVertex2xOES"(x : Int32) : Void
  fun vertex2xv_oes = "glVertex2xvOES"(coords : Int32*) : Void
  fun vertex3b_oes = "glVertex3bOES"(x : Int8, y : Int8, z : Int8) : Void
  fun vertex3bv_oes = "glVertex3bvOES"(coords : Int8*) : Void
  fun vertex3d = "glVertex3d"(x : Float64, y : Float64, z : Float64) : Void
  fun vertex3dv = "glVertex3dv"(v : Float64*) : Void
  fun vertex3f = "glVertex3f"(x : Float32, y : Float32, z : Float32) : Void
  fun vertex3fv = "glVertex3fv"(v : Float32*) : Void
  fun vertex3h_nv = "glVertex3hNV"(x : UInt16, y : UInt16, z : UInt16) : Void
  fun vertex3hv_nv = "glVertex3hvNV"(v : UInt16*) : Void
  fun vertex3i = "glVertex3i"(x : Int32, y : Int32, z : Int32) : Void
  fun vertex3iv = "glVertex3iv"(v : Int32*) : Void
  fun vertex3s = "glVertex3s"(x : Int16, y : Int16, z : Int16) : Void
  fun vertex3sv = "glVertex3sv"(v : Int16*) : Void
  fun vertex3x_oes = "glVertex3xOES"(x : Int32, y : Int32) : Void
  fun vertex3xv_oes = "glVertex3xvOES"(coords : Int32*) : Void
  fun vertex4b_oes = "glVertex4bOES"(x : Int8, y : Int8, z : Int8, w : Int8) : Void
  fun vertex4bv_oes = "glVertex4bvOES"(coords : Int8*) : Void
  fun vertex4d = "glVertex4d"(x : Float64, y : Float64, z : Float64, w : Float64) : Void
  fun vertex4dv = "glVertex4dv"(v : Float64*) : Void
  fun vertex4f = "glVertex4f"(x : Float32, y : Float32, z : Float32, w : Float32) : Void
  fun vertex4fv = "glVertex4fv"(v : Float32*) : Void
  fun vertex4h_nv = "glVertex4hNV"(x : UInt16, y : UInt16, z : UInt16, w : UInt16) : Void
  fun vertex4hv_nv = "glVertex4hvNV"(v : UInt16*) : Void
  fun vertex4i = "glVertex4i"(x : Int32, y : Int32, z : Int32, w : Int32) : Void
  fun vertex4iv = "glVertex4iv"(v : Int32*) : Void
  fun vertex4s = "glVertex4s"(x : Int16, y : Int16, z : Int16, w : Int16) : Void
  fun vertex4sv = "glVertex4sv"(v : Int16*) : Void
  fun vertex4x_oes = "glVertex4xOES"(x : Int32, y : Int32, z : Int32) : Void
  fun vertex4xv_oes = "glVertex4xvOES"(coords : Int32*) : Void
  fun vertex_array_attrib_binding = "glVertexArrayAttribBinding"(vaobj : UInt32, attribindex : UInt32, bindingindex : UInt32) : Void
  fun vertex_array_attrib_format = "glVertexArrayAttribFormat"(vaobj : UInt32, attribindex : UInt32, size : Int32, type : UInt32, normalized : UInt8, relativeoffset : UInt32) : Void
  fun vertex_array_attrib_i_format = "glVertexArrayAttribIFormat"(vaobj : UInt32, attribindex : UInt32, size : Int32, type : UInt32, relativeoffset : UInt32) : Void
  fun vertex_array_attrib_l_format = "glVertexArrayAttribLFormat"(vaobj : UInt32, attribindex : UInt32, size : Int32, type : UInt32, relativeoffset : UInt32) : Void
  fun vertex_array_bind_vertex_buffer_ext = "glVertexArrayBindVertexBufferEXT"(vaobj : UInt32, bindingindex : UInt32, buffer : UInt32, offset : Int32, stride : Int32) : Void
  fun vertex_array_binding_divisor = "glVertexArrayBindingDivisor"(vaobj : UInt32, bindingindex : UInt32, divisor : UInt32) : Void
  fun vertex_array_color_offset_ext = "glVertexArrayColorOffsetEXT"(vaobj : UInt32, buffer : UInt32, size : Int32, type : UInt32, stride : Int32, offset : Int32) : Void
  fun vertex_array_edge_flag_offset_ext = "glVertexArrayEdgeFlagOffsetEXT"(vaobj : UInt32, buffer : UInt32, stride : Int32, offset : Int32) : Void
  fun vertex_array_element_buffer = "glVertexArrayElementBuffer"(vaobj : UInt32, buffer : UInt32) : Void
  fun vertex_array_fog_coord_offset_ext = "glVertexArrayFogCoordOffsetEXT"(vaobj : UInt32, buffer : UInt32, type : UInt32, stride : Int32, offset : Int32) : Void
  fun vertex_array_index_offset_ext = "glVertexArrayIndexOffsetEXT"(vaobj : UInt32, buffer : UInt32, type : UInt32, stride : Int32, offset : Int32) : Void
  fun vertex_array_multi_tex_coord_offset_ext = "glVertexArrayMultiTexCoordOffsetEXT"(vaobj : UInt32, buffer : UInt32, texunit : UInt32, size : Int32, type : UInt32, stride : Int32, offset : Int32) : Void
  fun vertex_array_normal_offset_ext = "glVertexArrayNormalOffsetEXT"(vaobj : UInt32, buffer : UInt32, type : UInt32, stride : Int32, offset : Int32) : Void
  fun vertex_array_parameteri_apple = "glVertexArrayParameteriAPPLE"(pname : UInt32, param : Int32) : Void
  fun vertex_array_range_apple = "glVertexArrayRangeAPPLE"(length : Int32, pointer : Void*) : Void
  fun vertex_array_range_nv = "glVertexArrayRangeNV"(length : Int32, pointer : Void*) : Void
  fun vertex_array_secondary_color_offset_ext = "glVertexArraySecondaryColorOffsetEXT"(vaobj : UInt32, buffer : UInt32, size : Int32, type : UInt32, stride : Int32, offset : Int32) : Void
  fun vertex_array_tex_coord_offset_ext = "glVertexArrayTexCoordOffsetEXT"(vaobj : UInt32, buffer : UInt32, size : Int32, type : UInt32, stride : Int32, offset : Int32) : Void
  fun vertex_array_vertex_attrib_binding_ext = "glVertexArrayVertexAttribBindingEXT"(vaobj : UInt32, attribindex : UInt32, bindingindex : UInt32) : Void
  fun vertex_array_vertex_attrib_divisor_ext = "glVertexArrayVertexAttribDivisorEXT"(vaobj : UInt32, index : UInt32, divisor : UInt32) : Void
  fun vertex_array_vertex_attrib_format_ext = "glVertexArrayVertexAttribFormatEXT"(vaobj : UInt32, attribindex : UInt32, size : Int32, type : UInt32, normalized : UInt8, relativeoffset : UInt32) : Void
  fun vertex_array_vertex_attrib_i_format_ext = "glVertexArrayVertexAttribIFormatEXT"(vaobj : UInt32, attribindex : UInt32, size : Int32, type : UInt32, relativeoffset : UInt32) : Void
  fun vertex_array_vertex_attrib_i_offset_ext = "glVertexArrayVertexAttribIOffsetEXT"(vaobj : UInt32, buffer : UInt32, index : UInt32, size : Int32, type : UInt32, stride : Int32, offset : Int32) : Void
  fun vertex_array_vertex_attrib_l_format_ext = "glVertexArrayVertexAttribLFormatEXT"(vaobj : UInt32, attribindex : UInt32, size : Int32, type : UInt32, relativeoffset : UInt32) : Void
  fun vertex_array_vertex_attrib_l_offset_ext = "glVertexArrayVertexAttribLOffsetEXT"(vaobj : UInt32, buffer : UInt32, index : UInt32, size : Int32, type : UInt32, stride : Int32, offset : Int32) : Void
  fun vertex_array_vertex_attrib_offset_ext = "glVertexArrayVertexAttribOffsetEXT"(vaobj : UInt32, buffer : UInt32, index : UInt32, size : Int32, type : UInt32, normalized : UInt8, stride : Int32, offset : Int32) : Void
  fun vertex_array_vertex_binding_divisor_ext = "glVertexArrayVertexBindingDivisorEXT"(vaobj : UInt32, bindingindex : UInt32, divisor : UInt32) : Void
  fun vertex_array_vertex_buffer = "glVertexArrayVertexBuffer"(vaobj : UInt32, bindingindex : UInt32, buffer : UInt32, offset : Int32, stride : Int32) : Void
  fun vertex_array_vertex_buffers = "glVertexArrayVertexBuffers"(vaobj : UInt32, first : UInt32, count : Int32, buffers : UInt32*, offsets : Int32*, strides : Int32*) : Void
  fun vertex_array_vertex_offset_ext = "glVertexArrayVertexOffsetEXT"(vaobj : UInt32, buffer : UInt32, size : Int32, type : UInt32, stride : Int32, offset : Int32) : Void
  fun vertex_attrib1d = "glVertexAttrib1d"(index : UInt32, x : Float64) : Void
  fun vertex_attrib1d_arb = "glVertexAttrib1dARB"(index : UInt32, x : Float64) : Void
  fun vertex_attrib1d_nv = "glVertexAttrib1dNV"(index : UInt32, x : Float64) : Void
  fun vertex_attrib1dv = "glVertexAttrib1dv"(index : UInt32, v : Float64*) : Void
  fun vertex_attrib1dv_arb = "glVertexAttrib1dvARB"(index : UInt32, v : Float64*) : Void
  fun vertex_attrib1dv_nv = "glVertexAttrib1dvNV"(index : UInt32, v : Float64*) : Void
  fun vertex_attrib1f = "glVertexAttrib1f"(index : UInt32, x : Float32) : Void
  fun vertex_attrib1f_arb = "glVertexAttrib1fARB"(index : UInt32, x : Float32) : Void
  fun vertex_attrib1f_nv = "glVertexAttrib1fNV"(index : UInt32, x : Float32) : Void
  fun vertex_attrib1fv = "glVertexAttrib1fv"(index : UInt32, v : Float32*) : Void
  fun vertex_attrib1fv_arb = "glVertexAttrib1fvARB"(index : UInt32, v : Float32*) : Void
  fun vertex_attrib1fv_nv = "glVertexAttrib1fvNV"(index : UInt32, v : Float32*) : Void
  fun vertex_attrib1h_nv = "glVertexAttrib1hNV"(index : UInt32, x : UInt16) : Void
  fun vertex_attrib1hv_nv = "glVertexAttrib1hvNV"(index : UInt32, v : UInt16*) : Void
  fun vertex_attrib1s = "glVertexAttrib1s"(index : UInt32, x : Int16) : Void
  fun vertex_attrib1s_arb = "glVertexAttrib1sARB"(index : UInt32, x : Int16) : Void
  fun vertex_attrib1s_nv = "glVertexAttrib1sNV"(index : UInt32, x : Int16) : Void
  fun vertex_attrib1sv = "glVertexAttrib1sv"(index : UInt32, v : Int16*) : Void
  fun vertex_attrib1sv_arb = "glVertexAttrib1svARB"(index : UInt32, v : Int16*) : Void
  fun vertex_attrib1sv_nv = "glVertexAttrib1svNV"(index : UInt32, v : Int16*) : Void
  fun vertex_attrib2d = "glVertexAttrib2d"(index : UInt32, x : Float64, y : Float64) : Void
  fun vertex_attrib2d_arb = "glVertexAttrib2dARB"(index : UInt32, x : Float64, y : Float64) : Void
  fun vertex_attrib2d_nv = "glVertexAttrib2dNV"(index : UInt32, x : Float64, y : Float64) : Void
  fun vertex_attrib2dv = "glVertexAttrib2dv"(index : UInt32, v : Float64*) : Void
  fun vertex_attrib2dv_arb = "glVertexAttrib2dvARB"(index : UInt32, v : Float64*) : Void
  fun vertex_attrib2dv_nv = "glVertexAttrib2dvNV"(index : UInt32, v : Float64*) : Void
  fun vertex_attrib2f = "glVertexAttrib2f"(index : UInt32, x : Float32, y : Float32) : Void
  fun vertex_attrib2f_arb = "glVertexAttrib2fARB"(index : UInt32, x : Float32, y : Float32) : Void
  fun vertex_attrib2f_nv = "glVertexAttrib2fNV"(index : UInt32, x : Float32, y : Float32) : Void
  fun vertex_attrib2fv = "glVertexAttrib2fv"(index : UInt32, v : Float32*) : Void
  fun vertex_attrib2fv_arb = "glVertexAttrib2fvARB"(index : UInt32, v : Float32*) : Void
  fun vertex_attrib2fv_nv = "glVertexAttrib2fvNV"(index : UInt32, v : Float32*) : Void
  fun vertex_attrib2h_nv = "glVertexAttrib2hNV"(index : UInt32, x : UInt16, y : UInt16) : Void
  fun vertex_attrib2hv_nv = "glVertexAttrib2hvNV"(index : UInt32, v : UInt16*) : Void
  fun vertex_attrib2s = "glVertexAttrib2s"(index : UInt32, x : Int16, y : Int16) : Void
  fun vertex_attrib2s_arb = "glVertexAttrib2sARB"(index : UInt32, x : Int16, y : Int16) : Void
  fun vertex_attrib2s_nv = "glVertexAttrib2sNV"(index : UInt32, x : Int16, y : Int16) : Void
  fun vertex_attrib2sv = "glVertexAttrib2sv"(index : UInt32, v : Int16*) : Void
  fun vertex_attrib2sv_arb = "glVertexAttrib2svARB"(index : UInt32, v : Int16*) : Void
  fun vertex_attrib2sv_nv = "glVertexAttrib2svNV"(index : UInt32, v : Int16*) : Void
  fun vertex_attrib3d = "glVertexAttrib3d"(index : UInt32, x : Float64, y : Float64, z : Float64) : Void
  fun vertex_attrib3d_arb = "glVertexAttrib3dARB"(index : UInt32, x : Float64, y : Float64, z : Float64) : Void
  fun vertex_attrib3d_nv = "glVertexAttrib3dNV"(index : UInt32, x : Float64, y : Float64, z : Float64) : Void
  fun vertex_attrib3dv = "glVertexAttrib3dv"(index : UInt32, v : Float64*) : Void
  fun vertex_attrib3dv_arb = "glVertexAttrib3dvARB"(index : UInt32, v : Float64*) : Void
  fun vertex_attrib3dv_nv = "glVertexAttrib3dvNV"(index : UInt32, v : Float64*) : Void
  fun vertex_attrib3f = "glVertexAttrib3f"(index : UInt32, x : Float32, y : Float32, z : Float32) : Void
  fun vertex_attrib3f_arb = "glVertexAttrib3fARB"(index : UInt32, x : Float32, y : Float32, z : Float32) : Void
  fun vertex_attrib3f_nv = "glVertexAttrib3fNV"(index : UInt32, x : Float32, y : Float32, z : Float32) : Void
  fun vertex_attrib3fv = "glVertexAttrib3fv"(index : UInt32, v : Float32*) : Void
  fun vertex_attrib3fv_arb = "glVertexAttrib3fvARB"(index : UInt32, v : Float32*) : Void
  fun vertex_attrib3fv_nv = "glVertexAttrib3fvNV"(index : UInt32, v : Float32*) : Void
  fun vertex_attrib3h_nv = "glVertexAttrib3hNV"(index : UInt32, x : UInt16, y : UInt16, z : UInt16) : Void
  fun vertex_attrib3hv_nv = "glVertexAttrib3hvNV"(index : UInt32, v : UInt16*) : Void
  fun vertex_attrib3s = "glVertexAttrib3s"(index : UInt32, x : Int16, y : Int16, z : Int16) : Void
  fun vertex_attrib3s_arb = "glVertexAttrib3sARB"(index : UInt32, x : Int16, y : Int16, z : Int16) : Void
  fun vertex_attrib3s_nv = "glVertexAttrib3sNV"(index : UInt32, x : Int16, y : Int16, z : Int16) : Void
  fun vertex_attrib3sv = "glVertexAttrib3sv"(index : UInt32, v : Int16*) : Void
  fun vertex_attrib3sv_arb = "glVertexAttrib3svARB"(index : UInt32, v : Int16*) : Void
  fun vertex_attrib3sv_nv = "glVertexAttrib3svNV"(index : UInt32, v : Int16*) : Void
  fun vertex_attrib4nbv = "glVertexAttrib4Nbv"(index : UInt32, v : Int8*) : Void
  fun vertex_attrib4nbv_arb = "glVertexAttrib4NbvARB"(index : UInt32, v : Int8*) : Void
  fun vertex_attrib4niv = "glVertexAttrib4Niv"(index : UInt32, v : Int32*) : Void
  fun vertex_attrib4niv_arb = "glVertexAttrib4NivARB"(index : UInt32, v : Int32*) : Void
  fun vertex_attrib4nsv = "glVertexAttrib4Nsv"(index : UInt32, v : Int16*) : Void
  fun vertex_attrib4nsv_arb = "glVertexAttrib4NsvARB"(index : UInt32, v : Int16*) : Void
  fun vertex_attrib4nub = "glVertexAttrib4Nub"(index : UInt32, x : UInt8, y : UInt8, z : UInt8, w : UInt8) : Void
  fun vertex_attrib4nub_arb = "glVertexAttrib4NubARB"(index : UInt32, x : UInt8, y : UInt8, z : UInt8, w : UInt8) : Void
  fun vertex_attrib4nubv = "glVertexAttrib4Nubv"(index : UInt32, v : UInt8*) : Void
  fun vertex_attrib4nubv_arb = "glVertexAttrib4NubvARB"(index : UInt32, v : UInt8*) : Void
  fun vertex_attrib4nuiv = "glVertexAttrib4Nuiv"(index : UInt32, v : UInt32*) : Void
  fun vertex_attrib4nuiv_arb = "glVertexAttrib4NuivARB"(index : UInt32, v : UInt32*) : Void
  fun vertex_attrib4nusv = "glVertexAttrib4Nusv"(index : UInt32, v : UInt16*) : Void
  fun vertex_attrib4nusv_arb = "glVertexAttrib4NusvARB"(index : UInt32, v : UInt16*) : Void
  fun vertex_attrib4bv = "glVertexAttrib4bv"(index : UInt32, v : Int8*) : Void
  fun vertex_attrib4bv_arb = "glVertexAttrib4bvARB"(index : UInt32, v : Int8*) : Void
  fun vertex_attrib4d = "glVertexAttrib4d"(index : UInt32, x : Float64, y : Float64, z : Float64, w : Float64) : Void
  fun vertex_attrib4d_arb = "glVertexAttrib4dARB"(index : UInt32, x : Float64, y : Float64, z : Float64, w : Float64) : Void
  fun vertex_attrib4d_nv = "glVertexAttrib4dNV"(index : UInt32, x : Float64, y : Float64, z : Float64, w : Float64) : Void
  fun vertex_attrib4dv = "glVertexAttrib4dv"(index : UInt32, v : Float64*) : Void
  fun vertex_attrib4dv_arb = "glVertexAttrib4dvARB"(index : UInt32, v : Float64*) : Void
  fun vertex_attrib4dv_nv = "glVertexAttrib4dvNV"(index : UInt32, v : Float64*) : Void
  fun vertex_attrib4f = "glVertexAttrib4f"(index : UInt32, x : Float32, y : Float32, z : Float32, w : Float32) : Void
  fun vertex_attrib4f_arb = "glVertexAttrib4fARB"(index : UInt32, x : Float32, y : Float32, z : Float32, w : Float32) : Void
  fun vertex_attrib4f_nv = "glVertexAttrib4fNV"(index : UInt32, x : Float32, y : Float32, z : Float32, w : Float32) : Void
  fun vertex_attrib4fv = "glVertexAttrib4fv"(index : UInt32, v : Float32*) : Void
  fun vertex_attrib4fv_arb = "glVertexAttrib4fvARB"(index : UInt32, v : Float32*) : Void
  fun vertex_attrib4fv_nv = "glVertexAttrib4fvNV"(index : UInt32, v : Float32*) : Void
  fun vertex_attrib4h_nv = "glVertexAttrib4hNV"(index : UInt32, x : UInt16, y : UInt16, z : UInt16, w : UInt16) : Void
  fun vertex_attrib4hv_nv = "glVertexAttrib4hvNV"(index : UInt32, v : UInt16*) : Void
  fun vertex_attrib4iv = "glVertexAttrib4iv"(index : UInt32, v : Int32*) : Void
  fun vertex_attrib4iv_arb = "glVertexAttrib4ivARB"(index : UInt32, v : Int32*) : Void
  fun vertex_attrib4s = "glVertexAttrib4s"(index : UInt32, x : Int16, y : Int16, z : Int16, w : Int16) : Void
  fun vertex_attrib4s_arb = "glVertexAttrib4sARB"(index : UInt32, x : Int16, y : Int16, z : Int16, w : Int16) : Void
  fun vertex_attrib4s_nv = "glVertexAttrib4sNV"(index : UInt32, x : Int16, y : Int16, z : Int16, w : Int16) : Void
  fun vertex_attrib4sv = "glVertexAttrib4sv"(index : UInt32, v : Int16*) : Void
  fun vertex_attrib4sv_arb = "glVertexAttrib4svARB"(index : UInt32, v : Int16*) : Void
  fun vertex_attrib4sv_nv = "glVertexAttrib4svNV"(index : UInt32, v : Int16*) : Void
  fun vertex_attrib4ub_nv = "glVertexAttrib4ubNV"(index : UInt32, x : UInt8, y : UInt8, z : UInt8, w : UInt8) : Void
  fun vertex_attrib4ubv = "glVertexAttrib4ubv"(index : UInt32, v : UInt8*) : Void
  fun vertex_attrib4ubv_arb = "glVertexAttrib4ubvARB"(index : UInt32, v : UInt8*) : Void
  fun vertex_attrib4ubv_nv = "glVertexAttrib4ubvNV"(index : UInt32, v : UInt8*) : Void
  fun vertex_attrib4uiv = "glVertexAttrib4uiv"(index : UInt32, v : UInt32*) : Void
  fun vertex_attrib4uiv_arb = "glVertexAttrib4uivARB"(index : UInt32, v : UInt32*) : Void
  fun vertex_attrib4usv = "glVertexAttrib4usv"(index : UInt32, v : UInt16*) : Void
  fun vertex_attrib4usv_arb = "glVertexAttrib4usvARB"(index : UInt32, v : UInt16*) : Void
  fun vertex_attrib_array_object_ati = "glVertexAttribArrayObjectATI"(index : UInt32, size : Int32, type : UInt32, normalized : UInt8, stride : Int32, buffer : UInt32, offset : UInt32) : Void
  fun vertex_attrib_binding = "glVertexAttribBinding"(attribindex : UInt32, bindingindex : UInt32) : Void
  fun vertex_attrib_divisor = "glVertexAttribDivisor"(index : UInt32, divisor : UInt32) : Void
  fun vertex_attrib_divisor_angle = "glVertexAttribDivisorANGLE"(index : UInt32, divisor : UInt32) : Void
  fun vertex_attrib_divisor_arb = "glVertexAttribDivisorARB"(index : UInt32, divisor : UInt32) : Void
  fun vertex_attrib_divisor_ext = "glVertexAttribDivisorEXT"(index : UInt32, divisor : UInt32) : Void
  fun vertex_attrib_divisor_nv = "glVertexAttribDivisorNV"(index : UInt32, divisor : UInt32) : Void
  fun vertex_attrib_format = "glVertexAttribFormat"(attribindex : UInt32, size : Int32, type : UInt32, normalized : UInt8, relativeoffset : UInt32) : Void
  fun vertex_attrib_format_nv = "glVertexAttribFormatNV"(index : UInt32, size : Int32, type : UInt32, normalized : UInt8, stride : Int32) : Void
  fun vertex_attrib_i1i = "glVertexAttribI1i"(index : UInt32, x : Int32) : Void
  fun vertex_attrib_i1i_ext = "glVertexAttribI1iEXT"(index : UInt32, x : Int32) : Void
  fun vertex_attrib_i1iv = "glVertexAttribI1iv"(index : UInt32, v : Int32*) : Void
  fun vertex_attrib_i1iv_ext = "glVertexAttribI1ivEXT"(index : UInt32, v : Int32*) : Void
  fun vertex_attrib_i1ui = "glVertexAttribI1ui"(index : UInt32, x : UInt32) : Void
  fun vertex_attrib_i1ui_ext = "glVertexAttribI1uiEXT"(index : UInt32, x : UInt32) : Void
  fun vertex_attrib_i1uiv = "glVertexAttribI1uiv"(index : UInt32, v : UInt32*) : Void
  fun vertex_attrib_i1uiv_ext = "glVertexAttribI1uivEXT"(index : UInt32, v : UInt32*) : Void
  fun vertex_attrib_i2i = "glVertexAttribI2i"(index : UInt32, x : Int32, y : Int32) : Void
  fun vertex_attrib_i2i_ext = "glVertexAttribI2iEXT"(index : UInt32, x : Int32, y : Int32) : Void
  fun vertex_attrib_i2iv = "glVertexAttribI2iv"(index : UInt32, v : Int32*) : Void
  fun vertex_attrib_i2iv_ext = "glVertexAttribI2ivEXT"(index : UInt32, v : Int32*) : Void
  fun vertex_attrib_i2ui = "glVertexAttribI2ui"(index : UInt32, x : UInt32, y : UInt32) : Void
  fun vertex_attrib_i2ui_ext = "glVertexAttribI2uiEXT"(index : UInt32, x : UInt32, y : UInt32) : Void
  fun vertex_attrib_i2uiv = "glVertexAttribI2uiv"(index : UInt32, v : UInt32*) : Void
  fun vertex_attrib_i2uiv_ext = "glVertexAttribI2uivEXT"(index : UInt32, v : UInt32*) : Void
  fun vertex_attrib_i3i = "glVertexAttribI3i"(index : UInt32, x : Int32, y : Int32, z : Int32) : Void
  fun vertex_attrib_i3i_ext = "glVertexAttribI3iEXT"(index : UInt32, x : Int32, y : Int32, z : Int32) : Void
  fun vertex_attrib_i3iv = "glVertexAttribI3iv"(index : UInt32, v : Int32*) : Void
  fun vertex_attrib_i3iv_ext = "glVertexAttribI3ivEXT"(index : UInt32, v : Int32*) : Void
  fun vertex_attrib_i3ui = "glVertexAttribI3ui"(index : UInt32, x : UInt32, y : UInt32, z : UInt32) : Void
  fun vertex_attrib_i3ui_ext = "glVertexAttribI3uiEXT"(index : UInt32, x : UInt32, y : UInt32, z : UInt32) : Void
  fun vertex_attrib_i3uiv = "glVertexAttribI3uiv"(index : UInt32, v : UInt32*) : Void
  fun vertex_attrib_i3uiv_ext = "glVertexAttribI3uivEXT"(index : UInt32, v : UInt32*) : Void
  fun vertex_attrib_i4bv = "glVertexAttribI4bv"(index : UInt32, v : Int8*) : Void
  fun vertex_attrib_i4bv_ext = "glVertexAttribI4bvEXT"(index : UInt32, v : Int8*) : Void
  fun vertex_attrib_i4i = "glVertexAttribI4i"(index : UInt32, x : Int32, y : Int32, z : Int32, w : Int32) : Void
  fun vertex_attrib_i4i_ext = "glVertexAttribI4iEXT"(index : UInt32, x : Int32, y : Int32, z : Int32, w : Int32) : Void
  fun vertex_attrib_i4iv = "glVertexAttribI4iv"(index : UInt32, v : Int32*) : Void
  fun vertex_attrib_i4iv_ext = "glVertexAttribI4ivEXT"(index : UInt32, v : Int32*) : Void
  fun vertex_attrib_i4sv = "glVertexAttribI4sv"(index : UInt32, v : Int16*) : Void
  fun vertex_attrib_i4sv_ext = "glVertexAttribI4svEXT"(index : UInt32, v : Int16*) : Void
  fun vertex_attrib_i4ubv = "glVertexAttribI4ubv"(index : UInt32, v : UInt8*) : Void
  fun vertex_attrib_i4ubv_ext = "glVertexAttribI4ubvEXT"(index : UInt32, v : UInt8*) : Void
  fun vertex_attrib_i4ui = "glVertexAttribI4ui"(index : UInt32, x : UInt32, y : UInt32, z : UInt32, w : UInt32) : Void
  fun vertex_attrib_i4ui_ext = "glVertexAttribI4uiEXT"(index : UInt32, x : UInt32, y : UInt32, z : UInt32, w : UInt32) : Void
  fun vertex_attrib_i4uiv = "glVertexAttribI4uiv"(index : UInt32, v : UInt32*) : Void
  fun vertex_attrib_i4uiv_ext = "glVertexAttribI4uivEXT"(index : UInt32, v : UInt32*) : Void
  fun vertex_attrib_i4usv = "glVertexAttribI4usv"(index : UInt32, v : UInt16*) : Void
  fun vertex_attrib_i4usv_ext = "glVertexAttribI4usvEXT"(index : UInt32, v : UInt16*) : Void
  fun vertex_attrib_i_format = "glVertexAttribIFormat"(attribindex : UInt32, size : Int32, type : UInt32, relativeoffset : UInt32) : Void
  fun vertex_attrib_i_format_nv = "glVertexAttribIFormatNV"(index : UInt32, size : Int32, type : UInt32, stride : Int32) : Void
  fun vertex_attrib_i_pointer = "glVertexAttribIPointer"(index : UInt32, size : Int32, type : UInt32, stride : Int32, pointer : Void*) : Void
  fun vertex_attrib_i_pointer_ext = "glVertexAttribIPointerEXT"(index : UInt32, size : Int32, type : UInt32, stride : Int32, pointer : Void*) : Void
  fun vertex_attrib_l1d = "glVertexAttribL1d"(index : UInt32, x : Float64) : Void
  fun vertex_attrib_l1d_ext = "glVertexAttribL1dEXT"(index : UInt32, x : Float64) : Void
  fun vertex_attrib_l1dv = "glVertexAttribL1dv"(index : UInt32, v : Float64*) : Void
  fun vertex_attrib_l1dv_ext = "glVertexAttribL1dvEXT"(index : UInt32, v : Float64*) : Void
  fun vertex_attrib_l1i64nv = "glVertexAttribL1i64NV"(index : UInt32, x : Int64) : Void
  fun vertex_attrib_l1i64v_nv = "glVertexAttribL1i64vNV"(index : UInt32, v : Int64*) : Void
  fun vertex_attrib_l1ui64arb = "glVertexAttribL1ui64ARB"(index : UInt32, x : UInt64) : Void
  fun vertex_attrib_l1ui64nv = "glVertexAttribL1ui64NV"(index : UInt32, x : UInt64) : Void
  fun vertex_attrib_l1ui64v_arb = "glVertexAttribL1ui64vARB"(index : UInt32, v : UInt64*) : Void
  fun vertex_attrib_l1ui64v_nv = "glVertexAttribL1ui64vNV"(index : UInt32, v : UInt64*) : Void
  fun vertex_attrib_l2d = "glVertexAttribL2d"(index : UInt32, x : Float64, y : Float64) : Void
  fun vertex_attrib_l2d_ext = "glVertexAttribL2dEXT"(index : UInt32, x : Float64, y : Float64) : Void
  fun vertex_attrib_l2dv = "glVertexAttribL2dv"(index : UInt32, v : Float64*) : Void
  fun vertex_attrib_l2dv_ext = "glVertexAttribL2dvEXT"(index : UInt32, v : Float64*) : Void
  fun vertex_attrib_l2i64nv = "glVertexAttribL2i64NV"(index : UInt32, x : Int64, y : Int64) : Void
  fun vertex_attrib_l2i64v_nv = "glVertexAttribL2i64vNV"(index : UInt32, v : Int64*) : Void
  fun vertex_attrib_l2ui64nv = "glVertexAttribL2ui64NV"(index : UInt32, x : UInt64, y : UInt64) : Void
  fun vertex_attrib_l2ui64v_nv = "glVertexAttribL2ui64vNV"(index : UInt32, v : UInt64*) : Void
  fun vertex_attrib_l3d = "glVertexAttribL3d"(index : UInt32, x : Float64, y : Float64, z : Float64) : Void
  fun vertex_attrib_l3d_ext = "glVertexAttribL3dEXT"(index : UInt32, x : Float64, y : Float64, z : Float64) : Void
  fun vertex_attrib_l3dv = "glVertexAttribL3dv"(index : UInt32, v : Float64*) : Void
  fun vertex_attrib_l3dv_ext = "glVertexAttribL3dvEXT"(index : UInt32, v : Float64*) : Void
  fun vertex_attrib_l3i64nv = "glVertexAttribL3i64NV"(index : UInt32, x : Int64, y : Int64, z : Int64) : Void
  fun vertex_attrib_l3i64v_nv = "glVertexAttribL3i64vNV"(index : UInt32, v : Int64*) : Void
  fun vertex_attrib_l3ui64nv = "glVertexAttribL3ui64NV"(index : UInt32, x : UInt64, y : UInt64, z : UInt64) : Void
  fun vertex_attrib_l3ui64v_nv = "glVertexAttribL3ui64vNV"(index : UInt32, v : UInt64*) : Void
  fun vertex_attrib_l4d = "glVertexAttribL4d"(index : UInt32, x : Float64, y : Float64, z : Float64, w : Float64) : Void
  fun vertex_attrib_l4d_ext = "glVertexAttribL4dEXT"(index : UInt32, x : Float64, y : Float64, z : Float64, w : Float64) : Void
  fun vertex_attrib_l4dv = "glVertexAttribL4dv"(index : UInt32, v : Float64*) : Void
  fun vertex_attrib_l4dv_ext = "glVertexAttribL4dvEXT"(index : UInt32, v : Float64*) : Void
  fun vertex_attrib_l4i64nv = "glVertexAttribL4i64NV"(index : UInt32, x : Int64, y : Int64, z : Int64, w : Int64) : Void
  fun vertex_attrib_l4i64v_nv = "glVertexAttribL4i64vNV"(index : UInt32, v : Int64*) : Void
  fun vertex_attrib_l4ui64nv = "glVertexAttribL4ui64NV"(index : UInt32, x : UInt64, y : UInt64, z : UInt64, w : UInt64) : Void
  fun vertex_attrib_l4ui64v_nv = "glVertexAttribL4ui64vNV"(index : UInt32, v : UInt64*) : Void
  fun vertex_attrib_l_format = "glVertexAttribLFormat"(attribindex : UInt32, size : Int32, type : UInt32, relativeoffset : UInt32) : Void
  fun vertex_attrib_l_format_nv = "glVertexAttribLFormatNV"(index : UInt32, size : Int32, type : UInt32, stride : Int32) : Void
  fun vertex_attrib_l_pointer = "glVertexAttribLPointer"(index : UInt32, size : Int32, type : UInt32, stride : Int32, pointer : Void*) : Void
  fun vertex_attrib_l_pointer_ext = "glVertexAttribLPointerEXT"(index : UInt32, size : Int32, type : UInt32, stride : Int32, pointer : Void*) : Void
  fun vertex_attrib_p1ui = "glVertexAttribP1ui"(index : UInt32, type : UInt32, normalized : UInt8, value : UInt32) : Void
  fun vertex_attrib_p1uiv = "glVertexAttribP1uiv"(index : UInt32, type : UInt32, normalized : UInt8, value : UInt32*) : Void
  fun vertex_attrib_p2ui = "glVertexAttribP2ui"(index : UInt32, type : UInt32, normalized : UInt8, value : UInt32) : Void
  fun vertex_attrib_p2uiv = "glVertexAttribP2uiv"(index : UInt32, type : UInt32, normalized : UInt8, value : UInt32*) : Void
  fun vertex_attrib_p3ui = "glVertexAttribP3ui"(index : UInt32, type : UInt32, normalized : UInt8, value : UInt32) : Void
  fun vertex_attrib_p3uiv = "glVertexAttribP3uiv"(index : UInt32, type : UInt32, normalized : UInt8, value : UInt32*) : Void
  fun vertex_attrib_p4ui = "glVertexAttribP4ui"(index : UInt32, type : UInt32, normalized : UInt8, value : UInt32) : Void
  fun vertex_attrib_p4uiv = "glVertexAttribP4uiv"(index : UInt32, type : UInt32, normalized : UInt8, value : UInt32*) : Void
  fun vertex_attrib_parameteri_amd = "glVertexAttribParameteriAMD"(index : UInt32, pname : UInt32, param : Int32) : Void
  fun vertex_attrib_pointer = "glVertexAttribPointer"(index : UInt32, size : Int32, type : UInt32, normalized : UInt8, stride : Int32, pointer : Void*) : Void
  fun vertex_attrib_pointer_arb = "glVertexAttribPointerARB"(index : UInt32, size : Int32, type : UInt32, normalized : UInt8, stride : Int32, pointer : Void*) : Void
  fun vertex_attrib_pointer_nv = "glVertexAttribPointerNV"(index : UInt32, fsize : Int32, type : UInt32, stride : Int32, pointer : Void*) : Void
  fun vertex_attribs1dv_nv = "glVertexAttribs1dvNV"(index : UInt32, count : Int32, v : Float64*) : Void
  fun vertex_attribs1fv_nv = "glVertexAttribs1fvNV"(index : UInt32, count : Int32, v : Float32*) : Void
  fun vertex_attribs1hv_nv = "glVertexAttribs1hvNV"(index : UInt32, n : Int32, v : UInt16*) : Void
  fun vertex_attribs1sv_nv = "glVertexAttribs1svNV"(index : UInt32, count : Int32, v : Int16*) : Void
  fun vertex_attribs2dv_nv = "glVertexAttribs2dvNV"(index : UInt32, count : Int32, v : Float64*) : Void
  fun vertex_attribs2fv_nv = "glVertexAttribs2fvNV"(index : UInt32, count : Int32, v : Float32*) : Void
  fun vertex_attribs2hv_nv = "glVertexAttribs2hvNV"(index : UInt32, n : Int32, v : UInt16*) : Void
  fun vertex_attribs2sv_nv = "glVertexAttribs2svNV"(index : UInt32, count : Int32, v : Int16*) : Void
  fun vertex_attribs3dv_nv = "glVertexAttribs3dvNV"(index : UInt32, count : Int32, v : Float64*) : Void
  fun vertex_attribs3fv_nv = "glVertexAttribs3fvNV"(index : UInt32, count : Int32, v : Float32*) : Void
  fun vertex_attribs3hv_nv = "glVertexAttribs3hvNV"(index : UInt32, n : Int32, v : UInt16*) : Void
  fun vertex_attribs3sv_nv = "glVertexAttribs3svNV"(index : UInt32, count : Int32, v : Int16*) : Void
  fun vertex_attribs4dv_nv = "glVertexAttribs4dvNV"(index : UInt32, count : Int32, v : Float64*) : Void
  fun vertex_attribs4fv_nv = "glVertexAttribs4fvNV"(index : UInt32, count : Int32, v : Float32*) : Void
  fun vertex_attribs4hv_nv = "glVertexAttribs4hvNV"(index : UInt32, n : Int32, v : UInt16*) : Void
  fun vertex_attribs4sv_nv = "glVertexAttribs4svNV"(index : UInt32, count : Int32, v : Int16*) : Void
  fun vertex_attribs4ubv_nv = "glVertexAttribs4ubvNV"(index : UInt32, count : Int32, v : UInt8*) : Void
  fun vertex_binding_divisor = "glVertexBindingDivisor"(bindingindex : UInt32, divisor : UInt32) : Void
  fun vertex_blend_arb = "glVertexBlendARB"(count : Int32) : Void
  fun vertex_blend_envf_ati = "glVertexBlendEnvfATI"(pname : UInt32, param : Float32) : Void
  fun vertex_blend_envi_ati = "glVertexBlendEnviATI"(pname : UInt32, param : Int32) : Void
  fun vertex_format_nv = "glVertexFormatNV"(size : Int32, type : UInt32, stride : Int32) : Void
  fun vertex_p2ui = "glVertexP2ui"(type : UInt32, value : UInt32) : Void
  fun vertex_p2uiv = "glVertexP2uiv"(type : UInt32, value : UInt32*) : Void
  fun vertex_p3ui = "glVertexP3ui"(type : UInt32, value : UInt32) : Void
  fun vertex_p3uiv = "glVertexP3uiv"(type : UInt32, value : UInt32*) : Void
  fun vertex_p4ui = "glVertexP4ui"(type : UInt32, value : UInt32) : Void
  fun vertex_p4uiv = "glVertexP4uiv"(type : UInt32, value : UInt32*) : Void
  fun vertex_pointer = "glVertexPointer"(size : Int32, type : UInt32, stride : Int32, pointer : Void*) : Void
  fun vertex_pointer_ext = "glVertexPointerEXT"(size : Int32, type : UInt32, stride : Int32, count : Int32, pointer : Void*) : Void
  fun vertex_pointer_list_ibm = "glVertexPointerListIBM"(size : Int32, type : UInt32, stride : Int32, pointer : Void*, ptrstride : Int32) : Void
  fun vertex_pointerv_intel = "glVertexPointervINTEL"(size : Int32, type : UInt32, pointer : Void*) : Void
  fun vertex_stream1d_ati = "glVertexStream1dATI"(stream : UInt32, x : Float64) : Void
  fun vertex_stream1dv_ati = "glVertexStream1dvATI"(stream : UInt32, coords : Float64*) : Void
  fun vertex_stream1f_ati = "glVertexStream1fATI"(stream : UInt32, x : Float32) : Void
  fun vertex_stream1fv_ati = "glVertexStream1fvATI"(stream : UInt32, coords : Float32*) : Void
  fun vertex_stream1i_ati = "glVertexStream1iATI"(stream : UInt32, x : Int32) : Void
  fun vertex_stream1iv_ati = "glVertexStream1ivATI"(stream : UInt32, coords : Int32*) : Void
  fun vertex_stream1s_ati = "glVertexStream1sATI"(stream : UInt32, x : Int16) : Void
  fun vertex_stream1sv_ati = "glVertexStream1svATI"(stream : UInt32, coords : Int16*) : Void
  fun vertex_stream2d_ati = "glVertexStream2dATI"(stream : UInt32, x : Float64, y : Float64) : Void
  fun vertex_stream2dv_ati = "glVertexStream2dvATI"(stream : UInt32, coords : Float64*) : Void
  fun vertex_stream2f_ati = "glVertexStream2fATI"(stream : UInt32, x : Float32, y : Float32) : Void
  fun vertex_stream2fv_ati = "glVertexStream2fvATI"(stream : UInt32, coords : Float32*) : Void
  fun vertex_stream2i_ati = "glVertexStream2iATI"(stream : UInt32, x : Int32, y : Int32) : Void
  fun vertex_stream2iv_ati = "glVertexStream2ivATI"(stream : UInt32, coords : Int32*) : Void
  fun vertex_stream2s_ati = "glVertexStream2sATI"(stream : UInt32, x : Int16, y : Int16) : Void
  fun vertex_stream2sv_ati = "glVertexStream2svATI"(stream : UInt32, coords : Int16*) : Void
  fun vertex_stream3d_ati = "glVertexStream3dATI"(stream : UInt32, x : Float64, y : Float64, z : Float64) : Void
  fun vertex_stream3dv_ati = "glVertexStream3dvATI"(stream : UInt32, coords : Float64*) : Void
  fun vertex_stream3f_ati = "glVertexStream3fATI"(stream : UInt32, x : Float32, y : Float32, z : Float32) : Void
  fun vertex_stream3fv_ati = "glVertexStream3fvATI"(stream : UInt32, coords : Float32*) : Void
  fun vertex_stream3i_ati = "glVertexStream3iATI"(stream : UInt32, x : Int32, y : Int32, z : Int32) : Void
  fun vertex_stream3iv_ati = "glVertexStream3ivATI"(stream : UInt32, coords : Int32*) : Void
  fun vertex_stream3s_ati = "glVertexStream3sATI"(stream : UInt32, x : Int16, y : Int16, z : Int16) : Void
  fun vertex_stream3sv_ati = "glVertexStream3svATI"(stream : UInt32, coords : Int16*) : Void
  fun vertex_stream4d_ati = "glVertexStream4dATI"(stream : UInt32, x : Float64, y : Float64, z : Float64, w : Float64) : Void
  fun vertex_stream4dv_ati = "glVertexStream4dvATI"(stream : UInt32, coords : Float64*) : Void
  fun vertex_stream4f_ati = "glVertexStream4fATI"(stream : UInt32, x : Float32, y : Float32, z : Float32, w : Float32) : Void
  fun vertex_stream4fv_ati = "glVertexStream4fvATI"(stream : UInt32, coords : Float32*) : Void
  fun vertex_stream4i_ati = "glVertexStream4iATI"(stream : UInt32, x : Int32, y : Int32, z : Int32, w : Int32) : Void
  fun vertex_stream4iv_ati = "glVertexStream4ivATI"(stream : UInt32, coords : Int32*) : Void
  fun vertex_stream4s_ati = "glVertexStream4sATI"(stream : UInt32, x : Int16, y : Int16, z : Int16, w : Int16) : Void
  fun vertex_stream4sv_ati = "glVertexStream4svATI"(stream : UInt32, coords : Int16*) : Void
  fun vertex_weight_pointer_ext = "glVertexWeightPointerEXT"(size : Int32, type : UInt32, stride : Int32, pointer : Void*) : Void
  fun vertex_weightf_ext = "glVertexWeightfEXT"(weight : Float32) : Void
  fun vertex_weightfv_ext = "glVertexWeightfvEXT"(weight : Float32*) : Void
  fun vertex_weighth_nv = "glVertexWeighthNV"(weight : UInt16) : Void
  fun vertex_weighthv_nv = "glVertexWeighthvNV"(weight : UInt16*) : Void
  fun video_capture_nv = "glVideoCaptureNV"(video_capture_slot : UInt32, sequence_num : UInt32*, capture_time : UInt64*) : UInt32
  fun video_capture_stream_parameterdv_nv = "glVideoCaptureStreamParameterdvNV"(video_capture_slot : UInt32, stream : UInt32, pname : UInt32, params : Float64*) : Void
  fun video_capture_stream_parameterfv_nv = "glVideoCaptureStreamParameterfvNV"(video_capture_slot : UInt32, stream : UInt32, pname : UInt32, params : Float32*) : Void
  fun video_capture_stream_parameteriv_nv = "glVideoCaptureStreamParameterivNV"(video_capture_slot : UInt32, stream : UInt32, pname : UInt32, params : Int32*) : Void
  fun viewport = "glViewport"(x : Int32, y : Int32, width : Int32, height : Int32) : Void
  fun viewport_arrayv = "glViewportArrayv"(first : UInt32, count : Int32, v : Float32*) : Void
  fun viewport_arrayv_nv = "glViewportArrayvNV"(first : UInt32, count : Int32, v : Float32*) : Void
  fun viewport_arrayv_oes = "glViewportArrayvOES"(first : UInt32, count : Int32, v : Float32*) : Void
  fun viewport_indexedf = "glViewportIndexedf"(index : UInt32, x : Float32, y : Float32, w : Float32, h : Float32) : Void
  fun viewport_indexedf_oes = "glViewportIndexedfOES"(index : UInt32, x : Float32, y : Float32, w : Float32, h : Float32) : Void
  fun viewport_indexedf_nv = "glViewportIndexedfNV"(index : UInt32, x : Float32, y : Float32, w : Float32, h : Float32) : Void
  fun viewport_indexedfv = "glViewportIndexedfv"(index : UInt32, v : Float32*) : Void
  fun viewport_indexedfv_oes = "glViewportIndexedfvOES"(index : UInt32, v : Float32*) : Void
  fun viewport_indexedfv_nv = "glViewportIndexedfvNV"(index : UInt32, v : Float32*) : Void
  fun viewport_position_w_scale_nv = "glViewportPositionWScaleNV"(index : UInt32, xcoeff : Float32, ycoeff : Float32) : Void
  fun viewport_swizzle_nv = "glViewportSwizzleNV"(index : UInt32, swizzlex : UInt32, swizzley : UInt32, swizzlez : UInt32, swizzlew : UInt32) : Void
  fun wait_sync = "glWaitSync"(sync : Void*, flags : UInt32, timeout : UInt64) : Void
  fun wait_sync_apple = "glWaitSyncAPPLE"(sync : Void*, flags : UInt32, timeout : UInt64) : Void
  fun weight_paths_nv = "glWeightPathsNV"(resultPath : UInt32, numPaths : Int32, paths : UInt32*, weights : Float32*) : Void
  fun weight_pointer_arb = "glWeightPointerARB"(size : Int32, type : UInt32, stride : Int32, pointer : Void*) : Void
  fun weight_pointer_oes = "glWeightPointerOES"(size : Int32, type : UInt32, stride : Int32, pointer : Void*) : Void
  fun weightbv_arb = "glWeightbvARB"(size : Int32, weights : Int8*) : Void
  fun weightdv_arb = "glWeightdvARB"(size : Int32, weights : Float64*) : Void
  fun weightfv_arb = "glWeightfvARB"(size : Int32, weights : Float32*) : Void
  fun weightiv_arb = "glWeightivARB"(size : Int32, weights : Int32*) : Void
  fun weightsv_arb = "glWeightsvARB"(size : Int32, weights : Int16*) : Void
  fun weightubv_arb = "glWeightubvARB"(size : Int32, weights : UInt8*) : Void
  fun weightuiv_arb = "glWeightuivARB"(size : Int32, weights : UInt32*) : Void
  fun weightusv_arb = "glWeightusvARB"(size : Int32, weights : UInt16*) : Void
  fun window_pos2d = "glWindowPos2d"(x : Float64, y : Float64) : Void
  fun window_pos2d_arb = "glWindowPos2dARB"(x : Float64, y : Float64) : Void
  fun window_pos2d_mesa = "glWindowPos2dMESA"(x : Float64, y : Float64) : Void
  fun window_pos2dv = "glWindowPos2dv"(v : Float64*) : Void
  fun window_pos2dv_arb = "glWindowPos2dvARB"(v : Float64*) : Void
  fun window_pos2dv_mesa = "glWindowPos2dvMESA"(v : Float64*) : Void
  fun window_pos2f = "glWindowPos2f"(x : Float32, y : Float32) : Void
  fun window_pos2f_arb = "glWindowPos2fARB"(x : Float32, y : Float32) : Void
  fun window_pos2f_mesa = "glWindowPos2fMESA"(x : Float32, y : Float32) : Void
  fun window_pos2fv = "glWindowPos2fv"(v : Float32*) : Void
  fun window_pos2fv_arb = "glWindowPos2fvARB"(v : Float32*) : Void
  fun window_pos2fv_mesa = "glWindowPos2fvMESA"(v : Float32*) : Void
  fun window_pos2i = "glWindowPos2i"(x : Int32, y : Int32) : Void
  fun window_pos2i_arb = "glWindowPos2iARB"(x : Int32, y : Int32) : Void
  fun window_pos2i_mesa = "glWindowPos2iMESA"(x : Int32, y : Int32) : Void
  fun window_pos2iv = "glWindowPos2iv"(v : Int32*) : Void
  fun window_pos2iv_arb = "glWindowPos2ivARB"(v : Int32*) : Void
  fun window_pos2iv_mesa = "glWindowPos2ivMESA"(v : Int32*) : Void
  fun window_pos2s = "glWindowPos2s"(x : Int16, y : Int16) : Void
  fun window_pos2s_arb = "glWindowPos2sARB"(x : Int16, y : Int16) : Void
  fun window_pos2s_mesa = "glWindowPos2sMESA"(x : Int16, y : Int16) : Void
  fun window_pos2sv = "glWindowPos2sv"(v : Int16*) : Void
  fun window_pos2sv_arb = "glWindowPos2svARB"(v : Int16*) : Void
  fun window_pos2sv_mesa = "glWindowPos2svMESA"(v : Int16*) : Void
  fun window_pos3d = "glWindowPos3d"(x : Float64, y : Float64, z : Float64) : Void
  fun window_pos3d_arb = "glWindowPos3dARB"(x : Float64, y : Float64, z : Float64) : Void
  fun window_pos3d_mesa = "glWindowPos3dMESA"(x : Float64, y : Float64, z : Float64) : Void
  fun window_pos3dv = "glWindowPos3dv"(v : Float64*) : Void
  fun window_pos3dv_arb = "glWindowPos3dvARB"(v : Float64*) : Void
  fun window_pos3dv_mesa = "glWindowPos3dvMESA"(v : Float64*) : Void
  fun window_pos3f = "glWindowPos3f"(x : Float32, y : Float32, z : Float32) : Void
  fun window_pos3f_arb = "glWindowPos3fARB"(x : Float32, y : Float32, z : Float32) : Void
  fun window_pos3f_mesa = "glWindowPos3fMESA"(x : Float32, y : Float32, z : Float32) : Void
  fun window_pos3fv = "glWindowPos3fv"(v : Float32*) : Void
  fun window_pos3fv_arb = "glWindowPos3fvARB"(v : Float32*) : Void
  fun window_pos3fv_mesa = "glWindowPos3fvMESA"(v : Float32*) : Void
  fun window_pos3i = "glWindowPos3i"(x : Int32, y : Int32, z : Int32) : Void
  fun window_pos3i_arb = "glWindowPos3iARB"(x : Int32, y : Int32, z : Int32) : Void
  fun window_pos3i_mesa = "glWindowPos3iMESA"(x : Int32, y : Int32, z : Int32) : Void
  fun window_pos3iv = "glWindowPos3iv"(v : Int32*) : Void
  fun window_pos3iv_arb = "glWindowPos3ivARB"(v : Int32*) : Void
  fun window_pos3iv_mesa = "glWindowPos3ivMESA"(v : Int32*) : Void
  fun window_pos3s = "glWindowPos3s"(x : Int16, y : Int16, z : Int16) : Void
  fun window_pos3s_arb = "glWindowPos3sARB"(x : Int16, y : Int16, z : Int16) : Void
  fun window_pos3s_mesa = "glWindowPos3sMESA"(x : Int16, y : Int16, z : Int16) : Void
  fun window_pos3sv = "glWindowPos3sv"(v : Int16*) : Void
  fun window_pos3sv_arb = "glWindowPos3svARB"(v : Int16*) : Void
  fun window_pos3sv_mesa = "glWindowPos3svMESA"(v : Int16*) : Void
  fun window_pos4d_mesa = "glWindowPos4dMESA"(x : Float64, y : Float64, z : Float64, w : Float64) : Void
  fun window_pos4dv_mesa = "glWindowPos4dvMESA"(v : Float64*) : Void
  fun window_pos4f_mesa = "glWindowPos4fMESA"(x : Float32, y : Float32, z : Float32, w : Float32) : Void
  fun window_pos4fv_mesa = "glWindowPos4fvMESA"(v : Float32*) : Void
  fun window_pos4i_mesa = "glWindowPos4iMESA"(x : Int32, y : Int32, z : Int32, w : Int32) : Void
  fun window_pos4iv_mesa = "glWindowPos4ivMESA"(v : Int32*) : Void
  fun window_pos4s_mesa = "glWindowPos4sMESA"(x : Int16, y : Int16, z : Int16, w : Int16) : Void
  fun window_pos4sv_mesa = "glWindowPos4svMESA"(v : Int16*) : Void
  fun window_rectangles_ext = "glWindowRectanglesEXT"(mode : UInt32, count : Int32, box : Int32*) : Void
  fun write_mask_ext = "glWriteMaskEXT"(res : UInt32, in : UInt32, outX : UInt32, outY : UInt32, outZ : UInt32, outW : UInt32) : Void
end
